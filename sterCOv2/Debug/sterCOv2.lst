
sterCOv2.elf:     file format elf32-littlearm
sterCOv2.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000199

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00004eb3 memsz 0x00004eb3 flags rwx
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x08004eb4 align 2**16
         filesz 0x000001fc memsz 0x000001fc flags rw-
    LOAD off    0x000201fc vaddr 0x200001fc paddr 0x200001fc align 2**16
         filesz 0x00000000 memsz 0x00000418 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .isr_vector   00000408  08000000  08000000  00010000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .inits        00000038  08000408  08000408  00010408  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .data         000001fc  20000000  08004eb4  00020000  2**2  CONTENTS, ALLOC, LOAD, DATA
  3 .data_CCMRAM  00000000  10000000  10000000  000201fc  2**2  CONTENTS
  4 .bss          00000318  200001fc  200001fc  000201fc  2**2  ALLOC
  5 .text         00004a73  08000440  08000440  00010440  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .noinit       00000000  20000514  20000514  000201fc  2**2  CONTENTS
  7 ._check_stack 00000100  20000514  20000514  000201fc  2**2  ALLOC
  8 .comment      0000007f  00000000  00000000  000201fc  2**0  CONTENTS, READONLY
  9 .ARM.attributes 00000031  00000000  00000000  0002027b  2**0  CONTENTS, READONLY
 10 .debug_aranges 00000880  00000000  00000000  000202ac  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   00008a71  00000000  00000000  00020b2c  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 00001668  00000000  00000000  0002959d  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000274f  00000000  00000000  0002ac05  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002570  00000000  00000000  0002d354  2**2  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00002d77  00000000  00000000  0002f8c4  2**0  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000848  00000000  00000000  0003263b  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
08000408 l    d  .inits	00000000 .inits
20000000 l    d  .data	00000000 .data
10000000 l    d  .data_CCMRAM	00000000 .data_CCMRAM
200001fc l    d  .bss	00000000 .bss
08000440 l    d  .text	00000000 .text
20000514 l    d  .noinit	00000000 .noinit
20000514 l    d  ._check_stack	00000000 ._check_stack
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 
20000200 l     O .bss	00000001 name.4262
08000440 l     F .text	00000068 FLASH_GetStatus
08004a4c l     O .text	00000010 AHBPrescTable
00000000 l    df *ABS*	00000000 
08003424 l     F .text	0000000a _exit
08003454 l     F .text	00000018 __initialize_hardware_early
0800346c l     F .text	0000000a __initialize_hardware
08003430 l     F .text	00000024 __initialize_args
0800348c l     F .text	00000022 ST7032I::cursorLeft()
080034ae l     F .text	00000040 ST7032I::cursorSet(CURSOR)
080034ee l     F .text	0000001c TextLcd::cursorLeft()
08003568 l     F .text	0000001a HMI::HMI()
08003568 l     F .text	0000001a HMI::HMI()
08003582 l     F .text	0000001c HMI::monitor()
080041ec l     F .text	00000110 Hardware::i2cTimerJob()
080035a0 l     F .text	00000010 hmi_callback()
080035c4 l     F .text	00000040 __static_initialization_and_destruction_0(int, int) [clone .lto_priv.8]
08003604 l     F .text	00000010 _GLOBAL__sub_I_hmi
08003614 l     F .text	00000044 NVIC_SetPriorityGrouping
08003658 l     F .text	00000030 NVIC_EnableIRQ
08003688 l     F .text	00000058 NVIC_SetPriority
080036e0 l     F .text	00000060 NVIC_EncodePriority
08003740 l     F .text	00000044 SysTick_Config
08003784 l     F .text	00000024 Fifo::isEmpty()
080037c6 l     F .text	0000001c Fifo::flush()
080037e2 l     F .text	0000001e Hardware::errorDispatch(Hardware::ErrorCode)
0800387a l     F .text	00000026 Gpio::pinSet(bool)
080038a0 l     F .text	0000004a Gpio::setMODE(Gpio::GpioMode)
080038ea l     F .text	0000004c Gpio::setSpeed(Gpio::GpioSpeed)
08003936 l     F .text	0000004a Gpio::setPullUpDn(Gpio::GpioPuPd)
08003980 l     F .text	00000046 Gpio::setOType(Gpio::GpioOType)
08003a0e l     F .text	000000b4 Gpio::setAlternateFunc(unsigned char)
08003ac4 l     F .text	00000014 QuickTask::getCounter()
08003ad8 l     F .text	0000001c QuickTask::getTimeIntervalMilis(unsigned long)
08003af4 l     F .text	00000048 flash_latency(unsigned long)
08003b3c l     F .text	00000158 pll_start(unsigned long, unsigned long)
08003c94 l     F .text	0000000a fpu_enable()
08003ca0 l     F .text	00000058 rccInit()
08003e98 l     F .text	0000000c Hardware::NVIC_init()
08003d64 l     F .text	0000001c Hardware::gpioInit()
08003d80 l     F .text	00000104 Hardware::adcInit()
08003f14 l     F .text	0000019c Hardware::i2cInit()
08003e84 l     F .text	0000000a Hardware::WDOG_Init()
08003eda l     F .text	0000001a Hardware::I2Cdefs::I2Cdefs()
08003eda l     F .text	0000001a Hardware::I2Cdefs::I2Cdefs()
080040b0 l     F .text	000000c4 Hardware::i2cEvent()
08004174 l     F .text	00000050 Hardware::i2cError()
080041c4 l     F .text	00000028 i2cGetBusyFlag()
08004474 l     F .text	00000080 __static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]
080044f4 l     F .text	00000010 _GLOBAL__sub_I__ZN8Hardware4initEv
08004504 l     F .text	0000003a Keyboard::getFromBuffer()
080049a0 l     F .text	0000002c Menu::showEkran()
00000000 l    df *ABS*	00000000 
08000892 l     F .text	000000e6 Pinout::setup()
08000978 l     F .text	0000003c Menu::init(Sterownik*, Keyboard*, TextLcd*)
080009b4 l     F .text	00000056 HMI::init(Sterownik*, Keyboard*, TextLcd*, Menu*)
08000a0c l     F .text	000000b8 Pinout::Pinout()
08000a0c l     F .text	000000b8 Pinout::Pinout()
08000ac4 l     F .text	00000026 Menu::Menu()
08000ac4 l     F .text	00000026 Menu::Menu()
08000aec l     F .text	00000010 keyb_callback()
08000dd8 l     F .text	000000be ST7032I::init()
08000c5c l     F .text	0000010c __static_initialization_and_destruction_0(int, int)
08000d68 l     F .text	00000010 _GLOBAL__sub_I_pins
08000d78 l     F .text	0000003e ST7032I::sendCmdOrData(bool, unsigned char)
00000000 l    df *ABS*	00000000 
080010b0 l     F .text	0000003a Sterownik::gotoSafePosition()
080010ea l     F .text	0000001e Sterownik::setAlarmPodajnik()
08001108 l     F .text	0000001e Sterownik::setAlarmSpadekTemp()
08001128 l     F .text	00000010 praca_callback()
080014ec l     F .text	0000006c Praca::checkAlarmy()
0800143c l     F .text	000000b0 Praca::checkPompy()
080012e4 l     F .text	00000158 Praca::setMode(Praca::Mode, unsigned long)
08001558 l     F .text	00000040 __static_initialization_and_destruction_0(int, int)
08001598 l     F .text	00000010 _GLOBAL__sub_I_praca
080015a8 l     F .text	00000070 QuickTask::tick(unsigned long)
08001b00 l     F .text	00000050 EE_Format
08001bd8 l     F .text	000000b0 EE_VerifyPageFullWriteVariable
08001b50 l     F .text	00000088 EE_FindValidPage
08001c88 l     F .text	00000138 EE_PageTransfer
08001dc0 l     F .text	0000002e Gpio::getInputValue()
08001e0a l     F .text	0000002a Button::Button(unsigned short)
08001e0a l     F .text	0000002a Button::Button(unsigned short)
08001e34 l     F .text	00000024 Button::setup(Gpio*, Button::ActiveType)
08001e58 l     F .text	0000004e Button::setActiveType(Button::ActiveType)
08001ea6 l     F .text	00000042 Button::isPressed()
08001ee8 l     F .text	00000054 Impulsator::getTurnNow()
08001f3c l     F .text	00000032 Impulsator::Impulsator()
08001f3c l     F .text	00000032 Impulsator::Impulsator()
08001f6e l     F .text	0000001c Impulsator::isPressed()
08001f8a l     F .text	00000028 Impulsator::setup(Gpio*, Gpio*, Button*)
08001fb2 l     F .text	0000002c Impulsator::getMove()
08001fe0 l     F .text	00000070 Impulsator::co10ms()
08002050 l     F .text	00000026 Keyboard::addToBuffer(Keyboard::Key)
08002076 l     F .text	0000007a Keyboard::getPressedKey()
080020f0 l     F .text	00000052 Keyboard::getImpulsatorKey()
08002234 l     F .text	0000002c Keyboard::getUnbufferedKey()
08002296 l     F .text	00000018 TextLcd::init(ST7032I*)
00000000 l    df *ABS*	00000000 impure.c
2000002c l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 
08002f48 l     F .text	000001b4 Menu::edit(Keyboard::Key)
0800290c l     F .text	000000ac Menu::printPattern(char const*, unsigned long)
080030fc l     F .text	00000088 Parameter::fillFastDataTab()
08003184 l     F .text	00000038 FlashUnlock()
080031bc l     F .text	00000020 FlashLock()
08003392 l     F .text	0000002e Gpio::getOutputValue()
00000000 l    df *ABS*	00000000 isdigit.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 
20000514 l       .noinit	00000000 _Heap_Begin
08000440 l       .inits	00000000 __fini_array_end
08000440 l       .inits	00000000 __fini_array_start
08000440 l       .inits	00000000 __init_array_end
08000430 l       .inits	00000000 __preinit_array_end
08000430 l       .inits	00000000 __init_array_start
08000430 l       .inits	00000000 __preinit_array_start
080003f2 g     F .isr_vector	00000008 .hidden RTC_Alarm_IRQHandler
080003f2 g     F .isr_vector	00000008 .hidden EXTI2_IRQHandler
08003e8e g     F .text	0000000a .hidden Hardware::WDOG_Reload()
08001674 g     F .text	00000090 .hidden QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)
080003e2 g     F .isr_vector	00000008 .hidden DebugMon_Handler
08002144 g     F .text	000000a8 .hidden Keyboard::Keyboard(Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*) [clone .lto_priv.4]
08003cf8 g     F .text	0000006c .hidden Hardware::init()
080003f2 g     F .isr_vector	00000008 .hidden SPI4_IRQHandler
20000020 g     O .data	00000004 .hidden sterCO
200004ac g     O .bss	00000004 .hidden dmuchawa
20000000 g       .data	00000000 __data_start__
2001fc00 g       *ABS*	00000000 _Heap_Limit
08000430 g       .inits	00000000 __bss_regions_array_end
080003f2 g     F .isr_vector	00000008 .hidden TIM1_CC_IRQHandler
20000328 g     O .bss	0000003c .hidden VirtAddVarTab
080003f2 g     F .isr_vector	00000008 .hidden DMA2_Stream5_IRQHandler
0800036c g     F .isr_vector	00000014 .hidden HardFault_Handler
200004b8 g     O .bss	00000004 .hidden lcd
08000000 g       *ABS*	00000000 __vectors_start__
08004800 g     F .text	00000020 .hidden Praca::isInManualMode()
080003f2 g     F .isr_vector	00000008 .hidden DMA1_Stream5_IRQHandler
20000364 g     O .bss	00000028 .hidden fastCopyofData
08001a28 g     F .text	00000094 .hidden EE_ReadVariable
200004e4 g     O .bss	00000018 .hidden menu
08001704 g     F .text	0000001c .hidden SysTick_Handler
08003316 g     F .text	00000018 .hidden Praca::setPodajnikTime(unsigned long)
080003f2 g     F .isr_vector	00000008 .hidden PVD_IRQHandler
080003f2 g     F .isr_vector	00000008 .hidden SDIO_IRQHandler
080003f2 g     F .isr_vector	00000008 .hidden TAMP_STAMP_IRQHandler
08004eb4 g       *ABS*	00000000 _sidata
080003ea g     F .isr_vector	00000008 .hidden PendSV_Handler
080049e0 g     F .text	0000001c __locale_ctype_ptr
08000364 g     F .isr_vector	00000008 .hidden NMI_Handler
20000204 g     O .bss	00000018 .hidden hmi
08004eb4 g       .data	00000000 __exidx_end
200004b4 g     O .bss	00000001 .hidden st7032iDriver
080003f2 g     F .isr_vector	00000008 .hidden EXTI3_IRQHandler
08004eb4 g       .data	00000000 __etext
08001044 g     F .text	0000006c .hidden FLASH_ProgramHalfWord
080003f2 g     F .isr_vector	00000008 .hidden TIM1_UP_TIM10_IRQHandler
08004eb4 g       .data	00000000 _etext
08003208 g     F .text	00000054 .hidden Parameter::setEEpromValue(unsigned short, unsigned short)
200001fc g       .bss	00000000 _sbss
2001fc00 g       *ABS*	00000000 __Main_Stack_Limit
080003f2 g     F .isr_vector	00000008 .hidden I2C3_ER_IRQHandler
20000314 g     O .bss	0000000c .hidden gpioLcdReset
080037a8 g     F .text	0000001e .hidden Fifo::isNotEmpty()
200004bc g     O .bss	00000028 .hidden sterownikCO
0800114c g     F .text	00000198 .hidden Praca::pracujAutomat()
080003f2 g     F .isr_vector	00000008 .hidden EXTI0_IRQHandler
200003ca g     O .bss	00000001 .hidden Impulsator::getTurnNow()::lState
080003f2 g     F .isr_vector	00000008 .hidden I2C2_EV_IRQHandler
08001dee g     F .text	0000001c .hidden Silnik::Silnik(Gpio*)
08004582 g     F .text	0000004a .hidden TextLcd::printXY(unsigned short, unsigned short, char const*)
08004970 g     F .text	00000030 .hidden Menu::goToEdit(Parameter::Nazwa)
20000514 g       .noinit	00000000 _noinit
080003f2 g     F .isr_vector	00000008 .hidden DMA1_Stream2_IRQHandler
080003f2 g     F .isr_vector	00000008 .hidden FPU_IRQHandler
20000024 g     O .data	00000004 .hidden SystemCoreClock
08003800 g     F .text	00000038 .hidden Gpio::Gpio(GPIO_TypeDef*, unsigned short)
08000630 g     F .text	00000040 .hidden Fifo::Fifo(unsigned char*, unsigned long)
080003b8 g     F .isr_vector	00000014 .hidden UsageFault_Handler
2000038c g     O .bss	0000000c .hidden dataTable
08004820 g     F .text	00000018 .hidden Sterownik::getTempCO()
080003f2 g     F .isr_vector	00000008 .hidden DMA2_Stream2_IRQHandler
200001fc g       .bss	00000000 __bss_start__
080031dc g     F .text	0000002c .hidden Parameter::initEepromMemory()
20000000 g       .data	00000000 _sdata
080003f2 g     F .isr_vector	00000008 .hidden SPI1_IRQHandler
080047c2 g     F .text	0000001a .hidden Praca::setTrybLetni(Parameter::SEZON)
08003838 g     F .text	00000020 .hidden Gpio::pinSetUp()
080003f2 g     F .isr_vector	00000008 .hidden TIM1_BRK_TIM9_IRQHandler
20000510 g     O .bss	00000004 .hidden __bss_end_guard.lto_priv.19
08000630 g     F .text	00000040 .hidden Fifo::Fifo(unsigned char*, unsigned long)
080033f0 g     F .text	0000001c .hidden Silnik::isTurnedOn()
200001f8 g     O .data	00000004 .hidden __data_end_guard.lto_priv.17
08004eb4 g       .data	00000000 __exidx_start
080003f2 g     F .isr_vector	00000008 .hidden DMA2_Stream3_IRQHandler
08000670 g     F .text	0000006c .hidden Fifo::put(unsigned char)
00000400 g       *ABS*	00000000 __Main_Stack_Size
08000380 g     F .isr_vector	0000000e HardFault_Handler_C
080003f2 g     F .isr_vector	00000008 .hidden USART6_IRQHandler
080003aa g     F .isr_vector	0000000e BusFault_Handler_C
2000021c g     O .bss	00000014 .hidden hmiQtsk
200003cb g     O .bss	00000001 .hidden Impulsator::co10ms()::lastPush
080045cc g     F .text	00000020 .hidden Pomiar::getPomiar(Pomiar::Analogi)
200004a4 g     O .bss	00000004 .hidden pompaCo
20000514 g       .bss	00000000 _ebss
08000e96 g     F .text	00000074 .hidden ST7032I::print(char const*)
0800035c g     F .isr_vector	00000008 .hidden Reset_Handler
08003800 g     F .text	00000038 .hidden Gpio::Gpio(GPIO_TypeDef*, unsigned short) [clone .lto_priv.5]
2000000c g     O .data	00000004 .hidden Hardware::i2c
08000780 g     F .text	000000c4 .hidden itoaWithPattern
08001abc g     F .text	00000044 .hidden EE_WriteVariable
20000000 g     O .data	00000004 .hidden __data_begin_guard.lto_priv.16
0800177c g     F .text	000002ac .hidden EE_Init
080032b8 g     F .text	00000014 .hidden Pomiar::getDataTablePtr()
080003f2 g     F .isr_vector	00000008 .hidden DMA2_Stream0_IRQHandler
20000014 g     O .data	00000004 .hidden _ZZ14ADC_IRQHandlerE6adcirq.lto_priv.12
080003f2 g     F .isr_vector	00000008 .hidden TIM4_IRQHandler
080042fc g     F .text	000000e0 .hidden Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)
08004424 g     F .text	00000028 .hidden I2C1_EV_IRQHandler
200003c8 g     O .bss	00000002 .hidden DataVar
20000324 g     O .bss	00000001 .hidden _ZZN4Menu4pollEvE10enterToMem.lto_priv.7
080003f2 g     F .isr_vector	00000008 .hidden DMA1_Stream6_IRQHandler
08003544 g     F .text	00000024 .hidden TextLcd::setCursorMode(CURSOR)
0800336e g     F .text	00000024 .hidden Praca::pracuj()
08000408 g       .inits	00000000 __data_regions_array_start
200001fc g       .data	00000000 __data_end__
080003f2 g     F .isr_vector	00000008 .hidden DMA1_Stream1_IRQHandler
20000514 g       .bss	00000000 __bss_end__
080003f2 g     F .isr_vector	00000008 .hidden TIM3_IRQHandler
080003f2 g     F .isr_vector	00000008 .hidden RCC_IRQHandler
08000844 g     F .text	0000004e .hidden my_strcpy
200003cc g     O .bss	00000001 .hidden Keyboard::co10ms()::oldKey
080003f2 g     F .isr_vector	00000008 .hidden Default_Handler
08000198 g     F .isr_vector	000001c4 _start
08003288 g     F .text	00000030 .hidden Pomiar::getPomiarRaw(Pomiar::Analogi)
080004a8 g     F .text	00000030 .hidden FLASH_WaitForLastOperation
20000268 g     O .bss	00000064 .hidden i2cDataBuffer
080003f2 g     F .isr_vector	00000008 .hidden EXTI15_10_IRQHandler
00000100 g       *ABS*	00000000 _Minimum_Stack_Size
08004400 g     F .text	00000024 .hidden ADC_IRQHandler
08004556 g     F .text	0000002c .hidden TextLcd::gotoXY(unsigned short, unsigned short)
080032cc g     F .text	00000032 .hidden Praca::Praca() [clone .lto_priv.6]
20000514 g       .noinit	00000000 _end_noinit
080046cc g     F .text	000000ba .hidden Parameter::getDefaultValue(Parameter::Nazwa)
080022ae g     F .text	0000001c .hidden TextLcd::clrScrHome()
200004b0 g     O .bss	00000004 .hidden podajnik
080003f2 g     F .isr_vector	00000008 .hidden DMA1_Stream7_IRQHandler
080003f2 g     F .isr_vector	00000008 .hidden SPI5_IRQHandler
08000730 g     F .text	00000050 .hidden Fifo::isFull()
20000398 g     O .bss	00000014 .hidden praca
080003f2 g     F .isr_vector	00000008 .hidden TIM5_IRQHandler
200002cc g     O .bss	00000018 .hidden i2cData
20000018 g     O .data	00000004 .hidden _ZZ18I2C1_EV_IRQHandlerE5i2cev.lto_priv.11
080003f2 g     F .isr_vector	00000008 .hidden DMA2_Stream7_IRQHandler
080022ca g     F .text	0000001c .hidden TextLcd::lcd_ON()
08001dee g     F .text	0000001c .hidden Silnik::Silnik(Gpio*) [clone .lto_priv.3]
080003f2 g     F .isr_vector	00000008 .hidden I2C3_EV_IRQHandler
080003cc g     F .isr_vector	0000000e UsageFault_Handler_C
080003f2 g     F .isr_vector	00000008 .hidden EXTI9_5_IRQHandler
08004634 g     F .text	00000098 .hidden Parameter::getParamPattern(Parameter::Nazwa)
08000000 g       *ABS*	00000000 __vectors_start
080003f2 g     F .isr_vector	00000008 .hidden RTC_WKUP_IRQHandler
0800325c g     F .text	0000002c .hidden Parameter::getEEpromValue(unsigned short)
08003476 g     F .text	00000016 .hidden ST7032I::delayMs(unsigned long)
080003f2 g     F .isr_vector	00000008 .hidden SPI2_IRQHandler
080029b8 g     F .text	00000590 .hidden Menu::showEkran(unsigned short)
08004a3a g     F .text	00000010 memset
0800038e g     F .isr_vector	00000008 .hidden MemManage_Handler
08000afc g     F .text	00000160 .hidden main
080022e6 g     F .text	00000052 .hidden Sterownik::Sterownik(Silnik*, Silnik*, Silnik*, Silnik*)
20000320 g     O .bss	00000004 .hidden _ZZN8Hardware8i2cErrorEvE3err.lto_priv.14
080043dc g     F .text	00000024 .hidden DMA1_Stream0_IRQHandler
08000f84 g     F .text	000000c0 .hidden FLASH_EraseSector
200002e4 g     O .bss	00000018 .hidden I2CdefsStr
080003da g     F .isr_vector	00000008 .hidden SVC_Handler
200003d0 g     O .bss	00000084 .hidden pins
08004a20 g     F .text	0000001a __ascii_wctomb
08000f4c g     F .text	0000001e .hidden ST7032I::clearScreen()
2000001c g     O .data	00000004 .hidden _ZZ18I2C1_ER_IRQHandlerE5i2cer.lto_priv.10
200003c0 g     O .bss	00000004 .hidden taskbase
080022e6 g     F .text	00000052 .hidden Sterownik::Sterownik(Silnik*, Silnik*, Silnik*, Silnik*) [clone .lto_priv.0]
200003c4 g     O .bss	00000004 .hidden QuickTask::milisCounter
080003f2 g     F .isr_vector	00000008 .hidden EXTI4_IRQHandler
080033c0 g     F .text	00000018 .hidden Silnik::turnOn()
080021ec g     F .text	00000048 .hidden Keyboard::co10ms()
080004d8 g     F .text	00000068 .hidden SystemInit
20000230 g     O .bss	0000001e .hidden i2cFrameBuffer
080032cc g     F .text	00000032 .hidden Praca::Praca()
08001138 g     F .text	00000014 .hidden Praca::pracujManual()
20000308 g     O .bss	0000000c .hidden gpioSDA
08004788 g     F .text	0000003a .hidden Parameter::setDefaultValues()
20000028 g     O .data	00000004 _impure_ptr
08001720 g     F .text	00000020 .hidden TextLcd::print(char const*)
080003f2 g     F .isr_vector	00000008 .hidden WWDG_IRQHandler
0800350a g     F .text	0000003a .hidden TextLcd::cursorLeft(unsigned short)
08002350 g     F .text	000005bc .hidden Menu::poll()
08000420 g       .inits	00000000 __data_regions_array_end
080049fc g     F .text	00000024 __ascii_mbtowc
200004fc g     O .bss	00000014 .hidden keybQtsk
080003f2 g     F .isr_vector	00000008 .hidden TIM2_IRQHandler
08002338 g     F .text	00000016 .hidden Sterownik::getPraca()
20000010 g     O .data	00000004 .hidden _ZZ23DMA1_Stream0_IRQHandlerE6dmairq.lto_priv.13
08000000 g     O .isr_vector	00000198 __isr_vectors
08002274 g     F .text	00000022 .hidden TextLcd::TextLcd(ST7032I*)
080003f2 g     F .isr_vector	00000008 .hidden OTG_FS_WKUP_IRQHandler
08001618 g     F .text	0000005c .hidden QuickTask::runQuickTasks()
080003f2 g     F .isr_vector	00000008 .hidden TIM1_TRG_COM_TIM11_IRQHandler
08002274 g     F .text	00000022 .hidden TextLcd::TextLcd(ST7032I*) [clone .lto_priv.1]
080006dc g     F .text	00000054 .hidden Fifo::get()
08000f0a g     F .text	00000042 .hidden ST7032I::gotoXY(unsigned char, unsigned char)
20020000 g       *ABS*	00000000 _estack
08000f6a g     F .text	0000001a .hidden ST7032I::lcd_ON()
20020000 g       .isr_vector	00000000 __stack
0800340c g     F .text	00000018 .hidden Sterownik::getTempCWU()
080035b0 g     F .text	00000014 .hidden HMI::getInstance()
080003f2 g     F .isr_vector	00000008 .hidden EXTI1_IRQHandler
080049cc g     F .text	00000012 isdigit
0800334e g     F .text	00000020 .hidden Praca::isPodajnikTimeOut()
200001fc g       .data	00000000 _edata
08002260 g     F .text	00000014 .hidden ST7032I::ST7032I() [clone .lto_priv.2]
080047dc g     F .text	00000024 .hidden Praca::setManualMode(bool)
08001740 g     F .text	0000003c .hidden TextLcd::printNumbersWithPattern(char const*, unsigned long)
080032fe g     F .text	00000018 .hidden Praca::setDmuchawaTime(unsigned long)
08002144 g     F .text	000000a8 .hidden Keyboard::Keyboard(Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*)
080003f2 g     F .isr_vector	00000008 .hidden USART2_IRQHandler
08003858 g     F .text	00000022 .hidden Gpio::pinSetDown()
08004838 g     F .text	00000136 .hidden Menu::goToEkran(Menu::EKRAN)
08000540 g     F .text	000000f0 .hidden SystemCoreClockUpdate
200001fc g     O .bss	00000004 .hidden __bss_begin_guard.lto_priv.18
200004a8 g     O .bss	00000004 .hidden pompaCWU
080003f2 g     F .isr_vector	00000008 .hidden I2C2_ER_IRQHandler
08001674 g     F .text	00000090 .hidden QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)
080003f2 g     F .isr_vector	00000008 .hidden DMA2_Stream1_IRQHandler
08004db2 g     O .text	00000101 _ctype_
08000420 g       .inits	00000000 __bss_regions_array_start
20000454 g     O .bss	00000050 .hidden keys
0800453e g     F .text	00000018 .hidden Keyboard::getKey()
080003f2 g     F .isr_vector	00000008 .hidden FLASH_IRQHandler
080003f2 g     F .isr_vector	00000008 .hidden DMA2_Stream4_IRQHandler
08000396 g     F .isr_vector	00000014 .hidden BusFault_Handler
08003ea4 g     F .text	00000036 .hidden Hardware::delayMs(unsigned long)
080003f2 g     F .isr_vector	00000008 .hidden USART1_IRQHandler
080003f2 g     F .isr_vector	00000008 .hidden OTG_FS_IRQHandler
080003f2 g     F .isr_vector	00000008 .hidden SPI3_IRQHandler
080003f2 g     F .isr_vector	00000008 .hidden DMA1_Stream4_IRQHandler
08002260 g     F .text	00000014 .hidden ST7032I::ST7032I()
0800444c g     F .text	00000028 .hidden I2C1_ER_IRQHandler
080033d8 g     F .text	00000018 .hidden Silnik::turnOff()
080045ec g     F .text	0000001e .hidden Parameter::getValue(Parameter::Nazwa)
0800460a g     F .text	00000028 .hidden Parameter::setValue(Parameter::Nazwa, unsigned short)
08003ef4 g     F .text	00000020 .hidden Hardware::lcdPinReset(bool)
20000004 g     O .data	00000008 .hidden argv.4263.lto_priv.15
080003f2 g     F .isr_vector	00000008 .hidden DMA2_Stream6_IRQHandler
20000250 g     O .bss	00000018 .hidden i2cFrame
2000008c g     O .data	0000016c __global_locale
0800332e g     F .text	00000020 .hidden Praca::isModeTimeOut()
080003f2 g     F .isr_vector	00000008 .hidden DMA1_Stream3_IRQHandler
080039c6 g     F .text	00000048 .hidden Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)
200002fc g     O .bss	0000000c .hidden gpioSCL
200003ac g     O .bss	00000014 .hidden pracaQtsk
08000db6 g     F .text	00000022 .hidden ST7032I::sendCommand(unsigned char)



Disassembly of section .isr_vector:

08000000 <__isr_vectors>:
 8000000:	00 00 02 20 5d 03 00 08 65 03 00 08 6d 03 00 08     ... ]...e...m...
 8000010:	8f 03 00 08 97 03 00 08 b9 03 00 08 00 00 00 00     ................
	...
 800002c:	db 03 00 08 e3 03 00 08 00 00 00 00 eb 03 00 08     ................
 800003c:	05 17 00 08 f3 03 00 08 f3 03 00 08 f3 03 00 08     ................
 800004c:	f3 03 00 08 f3 03 00 08 f3 03 00 08 f3 03 00 08     ................
 800005c:	f3 03 00 08 f3 03 00 08 f3 03 00 08 f3 03 00 08     ................
 800006c:	dd 43 00 08 f3 03 00 08 f3 03 00 08 f3 03 00 08     .C..............
 800007c:	f3 03 00 08 f3 03 00 08 f3 03 00 08 01 44 00 08     .............D..
	...
 800009c:	f3 03 00 08 f3 03 00 08 f3 03 00 08 f3 03 00 08     ................
 80000ac:	f3 03 00 08 f3 03 00 08 f3 03 00 08 f3 03 00 08     ................
 80000bc:	25 44 00 08 4d 44 00 08 f3 03 00 08 f3 03 00 08     %D..MD..........
 80000cc:	f3 03 00 08 f3 03 00 08 f3 03 00 08 f3 03 00 08     ................
 80000dc:	00 00 00 00 f3 03 00 08 f3 03 00 08 f3 03 00 08     ................
	...
 80000fc:	f3 03 00 08 00 00 00 00 f3 03 00 08 f3 03 00 08     ................
 800010c:	f3 03 00 08 00 00 00 00 00 00 00 00 00 00 00 00     ................
 800011c:	00 00 00 00 f3 03 00 08 f3 03 00 08 f3 03 00 08     ................
 800012c:	f3 03 00 08 f3 03 00 08 00 00 00 00 00 00 00 00     ................
	...
 800014c:	f3 03 00 08 f3 03 00 08 f3 03 00 08 f3 03 00 08     ................
 800015c:	f3 03 00 08 f3 03 00 08 f3 03 00 08 00 00 00 00     ................
	...
 8000184:	f3 03 00 08 00 00 00 00 00 00 00 00 f3 03 00 08     ................
 8000194:	f3 03 00 08                                         ....

08000198 <_start>:
_start():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:224
// For the call to work, and for the call to __initialize_hardware_early()
// to work, the reset stack must point to a valid internal RAM area.

void __attribute__ ((section(".after_vectors"),noreturn,weak))
_start (void)
{
 8000198:	b580      	push	{r7, lr}
 800019a:	b096      	sub	sp, #88	; 0x58
 800019c:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:235
  // enabled and require an early sequence to disable it.
  //
  // Also useful on platform with external RAM, that need to be
  // initialised before filling the BSS section.

  __initialize_hardware_early ();
 800019e:	f003 f959 	bl	8003454 <__initialize_hardware_early>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:241

  // Use Old Style DATA and BSS section initialisation,
  // that will manage a single BSS sections.

#if defined(DEBUG) && (OS_INCLUDE_STARTUP_GUARD_CHECKS)
  __data_begin_guard = DATA_GUARD_BAD_VALUE;
 80001a2:	4b5d      	ldr	r3, [pc, #372]	; (8000318 <_start+0x180>)
 80001a4:	4a5d      	ldr	r2, [pc, #372]	; (800031c <_start+0x184>)
 80001a6:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:242
  __data_end_guard = DATA_GUARD_BAD_VALUE;
 80001a8:	4b5d      	ldr	r3, [pc, #372]	; (8000320 <_start+0x188>)
 80001aa:	4a5c      	ldr	r2, [pc, #368]	; (800031c <_start+0x184>)
 80001ac:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:251
  // Copy the DATA segment from Flash to RAM (inlined).
  __initialize_data(&_sidata, &_sdata, &_edata);
#else

  // Copy the data sections from flash to SRAM.
  for (unsigned int* p = &__data_regions_array_start;
 80001ae:	4b5d      	ldr	r3, [pc, #372]	; (8000324 <_start+0x18c>)
 80001b0:	657b      	str	r3, [r7, #84]	; 0x54
 80001b2:	e023      	b.n	80001fc <_start+0x64>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:254
      p < &__data_regions_array_end;)
    {
      unsigned int* from = (unsigned int *) (*p++);
 80001b4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80001b6:	1d1a      	adds	r2, r3, #4
 80001b8:	657a      	str	r2, [r7, #84]	; 0x54
 80001ba:	681b      	ldr	r3, [r3, #0]
 80001bc:	64fb      	str	r3, [r7, #76]	; 0x4c
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:255
      unsigned int* region_begin = (unsigned int *) (*p++);
 80001be:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80001c0:	1d1a      	adds	r2, r3, #4
 80001c2:	657a      	str	r2, [r7, #84]	; 0x54
 80001c4:	681b      	ldr	r3, [r3, #0]
 80001c6:	64bb      	str	r3, [r7, #72]	; 0x48
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:256
      unsigned int* region_end = (unsigned int *) (*p++);
 80001c8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80001ca:	1d1a      	adds	r2, r3, #4
 80001cc:	657a      	str	r2, [r7, #84]	; 0x54
 80001ce:	681b      	ldr	r3, [r3, #0]
 80001d0:	647b      	str	r3, [r7, #68]	; 0x44
 80001d2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80001d4:	637b      	str	r3, [r7, #52]	; 0x34
 80001d6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80001d8:	633b      	str	r3, [r7, #48]	; 0x30
 80001da:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80001dc:	62fb      	str	r3, [r7, #44]	; 0x2c
__initialize_data():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:122
  unsigned int *p = region_begin;
 80001de:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80001e0:	62bb      	str	r3, [r7, #40]	; 0x28
 80001e2:	e007      	b.n	80001f4 <_start+0x5c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:124
    *p++ = *from++;
 80001e4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80001e6:	1d1a      	adds	r2, r3, #4
 80001e8:	62ba      	str	r2, [r7, #40]	; 0x28
 80001ea:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80001ec:	1d11      	adds	r1, r2, #4
 80001ee:	6379      	str	r1, [r7, #52]	; 0x34
 80001f0:	6812      	ldr	r2, [r2, #0]
 80001f2:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:123
  while (p < region_end)
 80001f4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80001f6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80001f8:	429a      	cmp	r2, r3
 80001fa:	d8f3      	bhi.n	80001e4 <_start+0x4c>
_start():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:251
  for (unsigned int* p = &__data_regions_array_start;
 80001fc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80001fe:	4a4a      	ldr	r2, [pc, #296]	; (8000328 <_start+0x190>)
 8000200:	4293      	cmp	r3, r2
 8000202:	d3d7      	bcc.n	80001b4 <_start+0x1c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:264
    }

#endif

#if defined(DEBUG) && (OS_INCLUDE_STARTUP_GUARD_CHECKS)
  if ((__data_begin_guard != DATA_BEGIN_GUARD_VALUE)
 8000204:	4b44      	ldr	r3, [pc, #272]	; (8000318 <_start+0x180>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	4a48      	ldr	r2, [pc, #288]	; (800032c <_start+0x194>)
 800020a:	4293      	cmp	r3, r2
 800020c:	d104      	bne.n	8000218 <_start+0x80>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:265
      || (__data_end_guard != DATA_END_GUARD_VALUE))
 800020e:	4b44      	ldr	r3, [pc, #272]	; (8000320 <_start+0x188>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	4a47      	ldr	r2, [pc, #284]	; (8000330 <_start+0x198>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d000      	beq.n	800021a <_start+0x82>
 8000218:	e7fe      	b.n	8000218 <_start+0x80>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:273
	;
    }
#endif

#if defined(DEBUG) && (OS_INCLUDE_STARTUP_GUARD_CHECKS)
  __bss_begin_guard = BSS_GUARD_BAD_VALUE;
 800021a:	4b46      	ldr	r3, [pc, #280]	; (8000334 <_start+0x19c>)
 800021c:	4a3f      	ldr	r2, [pc, #252]	; (800031c <_start+0x184>)
 800021e:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:274
  __bss_end_guard = BSS_GUARD_BAD_VALUE;
 8000220:	4b45      	ldr	r3, [pc, #276]	; (8000338 <_start+0x1a0>)
 8000222:	4a3e      	ldr	r2, [pc, #248]	; (800031c <_start+0x184>)
 8000224:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:283
  // Zero fill the BSS section (inlined).
  __initialize_bss(&__bss_start__, &__bss_end__);
#else

  // Zero fill all bss segments
  for (unsigned int *p = &__bss_regions_array_start;
 8000226:	4b45      	ldr	r3, [pc, #276]	; (800033c <_start+0x1a4>)
 8000228:	653b      	str	r3, [r7, #80]	; 0x50
 800022a:	e019      	b.n	8000260 <_start+0xc8>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:286
      p < &__bss_regions_array_end;)
    {
      unsigned int* region_begin = (unsigned int*) (*p++);
 800022c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800022e:	1d1a      	adds	r2, r3, #4
 8000230:	653a      	str	r2, [r7, #80]	; 0x50
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	643b      	str	r3, [r7, #64]	; 0x40
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:287
      unsigned int* region_end = (unsigned int*) (*p++);
 8000236:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000238:	1d1a      	adds	r2, r3, #4
 800023a:	653a      	str	r2, [r7, #80]	; 0x50
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000240:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000242:	627b      	str	r3, [r7, #36]	; 0x24
 8000244:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000246:	623b      	str	r3, [r7, #32]
__initialize_bss():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:133
  unsigned int *p = region_begin;
 8000248:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800024a:	61fb      	str	r3, [r7, #28]
 800024c:	e004      	b.n	8000258 <_start+0xc0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:135
    *p++ = 0;
 800024e:	69fb      	ldr	r3, [r7, #28]
 8000250:	1d1a      	adds	r2, r3, #4
 8000252:	61fa      	str	r2, [r7, #28]
 8000254:	2200      	movs	r2, #0
 8000256:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:134
  while (p < region_end)
 8000258:	6a3a      	ldr	r2, [r7, #32]
 800025a:	69fb      	ldr	r3, [r7, #28]
 800025c:	429a      	cmp	r2, r3
 800025e:	d8f6      	bhi.n	800024e <_start+0xb6>
_start():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:283
  for (unsigned int *p = &__bss_regions_array_start;
 8000260:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000262:	4a37      	ldr	r2, [pc, #220]	; (8000340 <_start+0x1a8>)
 8000264:	4293      	cmp	r3, r2
 8000266:	d3e1      	bcc.n	800022c <_start+0x94>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:293
      __initialize_bss (region_begin, region_end);
    }
#endif

#if defined(DEBUG) && (OS_INCLUDE_STARTUP_GUARD_CHECKS)
  if ((__bss_begin_guard != 0) || (__bss_end_guard != 0))
 8000268:	4b32      	ldr	r3, [pc, #200]	; (8000334 <_start+0x19c>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	2b00      	cmp	r3, #0
 800026e:	d103      	bne.n	8000278 <_start+0xe0>
 8000270:	4b31      	ldr	r3, [pc, #196]	; (8000338 <_start+0x1a0>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	2b00      	cmp	r3, #0
 8000276:	d000      	beq.n	800027a <_start+0xe2>
 8000278:	e7fe      	b.n	8000278 <_start+0xe0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:302
    }
#endif

  // Hook to continue the initialisations. Usually compute and store the
  // clock frequency in the global CMSIS variable, cleared above.
  __initialize_hardware ();
 800027a:	f003 f8f7 	bl	800346c <__initialize_hardware>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:307

  // Get the argc/argv (useful in semihosting configurations).
  int argc;
  char** argv;
  __initialize_args (&argc, &argv);
 800027e:	1d3a      	adds	r2, r7, #4
 8000280:	f107 0308 	add.w	r3, r7, #8
 8000284:	4611      	mov	r1, r2
 8000286:	4618      	mov	r0, r3
 8000288:	f003 f8d2 	bl	8003430 <__initialize_args>
__run_init_array():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:160
  count = __preinit_array_end - __preinit_array_start;
 800028c:	4a2d      	ldr	r2, [pc, #180]	; (8000344 <_start+0x1ac>)
 800028e:	4b2e      	ldr	r3, [pc, #184]	; (8000348 <_start+0x1b0>)
 8000290:	1ad3      	subs	r3, r2, r3
 8000292:	109b      	asrs	r3, r3, #2
 8000294:	613b      	str	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:161
  for (i = 0; i < count; i++)
 8000296:	2300      	movs	r3, #0
 8000298:	60fb      	str	r3, [r7, #12]
 800029a:	e007      	b.n	80002ac <_start+0x114>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:162
    __preinit_array_start[i] ();
 800029c:	4a2a      	ldr	r2, [pc, #168]	; (8000348 <_start+0x1b0>)
 800029e:	68fb      	ldr	r3, [r7, #12]
 80002a0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002a4:	4798      	blx	r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:161
  for (i = 0; i < count; i++)
 80002a6:	68fb      	ldr	r3, [r7, #12]
 80002a8:	3301      	adds	r3, #1
 80002aa:	60fb      	str	r3, [r7, #12]
 80002ac:	693a      	ldr	r2, [r7, #16]
 80002ae:	68fb      	ldr	r3, [r7, #12]
 80002b0:	429a      	cmp	r2, r3
 80002b2:	dcf3      	bgt.n	800029c <_start+0x104>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:169
  count = __init_array_end - __init_array_start;
 80002b4:	4a25      	ldr	r2, [pc, #148]	; (800034c <_start+0x1b4>)
 80002b6:	4b26      	ldr	r3, [pc, #152]	; (8000350 <_start+0x1b8>)
 80002b8:	1ad3      	subs	r3, r2, r3
 80002ba:	109b      	asrs	r3, r3, #2
 80002bc:	613b      	str	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:170
  for (i = 0; i < count; i++)
 80002be:	2300      	movs	r3, #0
 80002c0:	60fb      	str	r3, [r7, #12]
 80002c2:	e007      	b.n	80002d4 <_start+0x13c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:171
    __init_array_start[i] ();
 80002c4:	4a22      	ldr	r2, [pc, #136]	; (8000350 <_start+0x1b8>)
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002cc:	4798      	blx	r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:170
  for (i = 0; i < count; i++)
 80002ce:	68fb      	ldr	r3, [r7, #12]
 80002d0:	3301      	adds	r3, #1
 80002d2:	60fb      	str	r3, [r7, #12]
 80002d4:	693a      	ldr	r2, [r7, #16]
 80002d6:	68fb      	ldr	r3, [r7, #12]
 80002d8:	429a      	cmp	r2, r3
 80002da:	dcf3      	bgt.n	80002c4 <_start+0x12c>
_start():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:314
  // Call the standard library initialisation (mandatory for C++ to
  // execute the constructors for the static objects).
  __run_init_array ();

  // Call the main entry point, and save the exit code.
  int code = main (argc, argv);
 80002dc:	68bb      	ldr	r3, [r7, #8]
 80002de:	687a      	ldr	r2, [r7, #4]
 80002e0:	4611      	mov	r1, r2
 80002e2:	4618      	mov	r0, r3
 80002e4:	f000 fc0a 	bl	8000afc <main>
 80002e8:	63b8      	str	r0, [r7, #56]	; 0x38
__run_fini_array():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:182
  count = __fini_array_end - __fini_array_start;
 80002ea:	4a1a      	ldr	r2, [pc, #104]	; (8000354 <_start+0x1bc>)
 80002ec:	4b1a      	ldr	r3, [pc, #104]	; (8000358 <_start+0x1c0>)
 80002ee:	1ad3      	subs	r3, r2, r3
 80002f0:	109b      	asrs	r3, r3, #2
 80002f2:	61bb      	str	r3, [r7, #24]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:183
  for (i = count; i > 0; i--)
 80002f4:	69bb      	ldr	r3, [r7, #24]
 80002f6:	617b      	str	r3, [r7, #20]
 80002f8:	e008      	b.n	800030c <_start+0x174>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:184
    __fini_array_start[i - 1] ();
 80002fa:	697b      	ldr	r3, [r7, #20]
 80002fc:	3b01      	subs	r3, #1
 80002fe:	4a16      	ldr	r2, [pc, #88]	; (8000358 <_start+0x1c0>)
 8000300:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000304:	4798      	blx	r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:183
  for (i = count; i > 0; i--)
 8000306:	697b      	ldr	r3, [r7, #20]
 8000308:	3b01      	subs	r3, #1
 800030a:	617b      	str	r3, [r7, #20]
 800030c:	697b      	ldr	r3, [r7, #20]
 800030e:	2b00      	cmp	r3, #0
 8000310:	dcf3      	bgt.n	80002fa <_start+0x162>
_start():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_startup.c:319

  // Run the C++ static destructors.
  __run_fini_array ();

  _exit (code);
 8000312:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8000314:	f003 f886 	bl	8003424 <_exit>
 8000318:	20000000 	.word	0x20000000
 800031c:	cadebaba 	.word	0xcadebaba
 8000320:	200001f8 	.word	0x200001f8
 8000324:	08000408 	.word	0x08000408
 8000328:	08000420 	.word	0x08000420
 800032c:	12345678 	.word	0x12345678
 8000330:	98765432 	.word	0x98765432
 8000334:	200001fc 	.word	0x200001fc
 8000338:	20000510 	.word	0x20000510
 800033c:	08000420 	.word	0x08000420
 8000340:	08000430 	.word	0x08000430
 8000344:	08000430 	.word	0x08000430
 8000348:	08000430 	.word	0x08000430
 800034c:	08000440 	.word	0x08000440
 8000350:	08000430 	.word	0x08000430
 8000354:	08000440 	.word	0x08000440
 8000358:	08000440 	.word	0x08000440

0800035c <Reset_Handler>:
Reset_Handler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:31

// The DEBUG version is not naked, but has a proper stack frame,
// to allow setting breakpoints at Reset_Handler.
void __attribute__ ((section(".after_vectors"),noreturn))
Reset_Handler (void)
{
 800035c:	b580      	push	{r7, lr}
 800035e:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:32
  _start ();
 8000360:	f7ff ff1a 	bl	8000198 <_start>

08000364 <NMI_Handler>:
NMI_Handler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:55

#endif

void __attribute__ ((section(".after_vectors"),weak))
NMI_Handler (void)
{
 8000364:	b480      	push	{r7}
 8000366:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:57
#if defined(DEBUG)
  __DEBUG_BKPT();
 8000368:	be00      	bkpt	0x0000
 800036a:	e7fe      	b.n	800036a <NMI_Handler+0x6>

0800036c <HardFault_Handler>:
HardFault_Handler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:328
// Cortex-M4 Processors, Third Edition, Chap. 12.8, page 402).

void __attribute__ ((section(".after_vectors"),weak,naked))
HardFault_Handler (void)
{
  asm volatile(
 800036c:	f01e 0f04 	tst.w	lr, #4
 8000370:	bf0c      	ite	eq
 8000372:	f3ef 8008 	mrseq	r0, MSP
 8000376:	f3ef 8009 	mrsne	r0, PSP
 800037a:	4671      	mov	r1, lr
 800037c:	4a1f      	ldr	r2, [pc, #124]	; (80003fc <DMA1_Stream1_IRQHandler+0xa>)
 800037e:	4710      	bx	r2

08000380 <HardFault_Handler_C>:
HardFault_Handler_C():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:346
}

void __attribute__ ((section(".after_vectors"),weak,used))
HardFault_Handler_C (ExceptionStackFrame* frame __attribute__((unused)),
                     uint32_t lr __attribute__((unused)))
{
 8000380:	b480      	push	{r7}
 8000382:	b083      	sub	sp, #12
 8000384:	af00      	add	r7, sp, #0
 8000386:	6078      	str	r0, [r7, #4]
 8000388:	6039      	str	r1, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:381
  trace_printf ("[HardFault]\n");
  dumpExceptionStack (frame, cfsr, mmfar, bfar, lr);
#endif // defined(TRACE)

#if defined(DEBUG)
  __DEBUG_BKPT();
 800038a:	be00      	bkpt	0x0000
 800038c:	e7fe      	b.n	800038c <HardFault_Handler_C+0xc>

0800038e <MemManage_Handler>:
MemManage_Handler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:450

#if defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)

void __attribute__ ((section(".after_vectors"),weak))
MemManage_Handler (void)
{
 800038e:	b480      	push	{r7}
 8000390:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:452
#if defined(DEBUG)
  __DEBUG_BKPT();
 8000392:	be00      	bkpt	0x0000
 8000394:	e7fe      	b.n	8000394 <MemManage_Handler+0x6>

08000396 <BusFault_Handler>:
BusFault_Handler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:462
}

void __attribute__ ((section(".after_vectors"),weak,naked))
BusFault_Handler (void)
{
  asm volatile(
 8000396:	f01e 0f04 	tst.w	lr, #4
 800039a:	bf0c      	ite	eq
 800039c:	f3ef 8008 	mrseq	r0, MSP
 80003a0:	f3ef 8009 	mrsne	r0, PSP
 80003a4:	4671      	mov	r1, lr
 80003a6:	4a16      	ldr	r2, [pc, #88]	; (8000400 <DMA1_Stream1_IRQHandler+0xe>)
 80003a8:	4710      	bx	r2

080003aa <BusFault_Handler_C>:
BusFault_Handler_C():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:480
}

void __attribute__ ((section(".after_vectors"),weak,used))
BusFault_Handler_C (ExceptionStackFrame* frame __attribute__((unused)),
                    uint32_t lr __attribute__((unused)))
{
 80003aa:	b480      	push	{r7}
 80003ac:	b083      	sub	sp, #12
 80003ae:	af00      	add	r7, sp, #0
 80003b0:	6078      	str	r0, [r7, #4]
 80003b2:	6039      	str	r1, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:491
  trace_printf ("[BusFault]\n");
  dumpExceptionStack (frame, cfsr, mmfar, bfar, lr);
#endif // defined(TRACE)

#if defined(DEBUG)
  __DEBUG_BKPT();
 80003b4:	be00      	bkpt	0x0000
 80003b6:	e7fe      	b.n	80003b6 <BusFault_Handler_C+0xc>

080003b8 <UsageFault_Handler>:
UsageFault_Handler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:501
}

void __attribute__ ((section(".after_vectors"),weak,naked))
UsageFault_Handler (void)
{
  asm volatile(
 80003b8:	f01e 0f04 	tst.w	lr, #4
 80003bc:	bf0c      	ite	eq
 80003be:	f3ef 8008 	mrseq	r0, MSP
 80003c2:	f3ef 8009 	mrsne	r0, PSP
 80003c6:	4671      	mov	r1, lr
 80003c8:	4a0e      	ldr	r2, [pc, #56]	; (8000404 <DMA1_Stream1_IRQHandler+0x12>)
 80003ca:	4710      	bx	r2

080003cc <UsageFault_Handler_C>:
UsageFault_Handler_C():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:519
}

void __attribute__ ((section(".after_vectors"),weak,used))
UsageFault_Handler_C (ExceptionStackFrame* frame __attribute__((unused)),
                      uint32_t lr __attribute__((unused)))
{
 80003cc:	b480      	push	{r7}
 80003ce:	b083      	sub	sp, #12
 80003d0:	af00      	add	r7, sp, #0
 80003d2:	6078      	str	r0, [r7, #4]
 80003d4:	6039      	str	r1, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:545
  trace_printf ("[UsageFault]\n");
  dumpExceptionStack (frame, cfsr, mmfar, bfar, lr);
#endif // defined(TRACE)

#if defined(DEBUG)
  __DEBUG_BKPT();
 80003d6:	be00      	bkpt	0x0000
 80003d8:	e7fe      	b.n	80003d8 <UsageFault_Handler_C+0xc>

080003da <SVC_Handler>:
SVC_Handler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:556

#endif

void __attribute__ ((section(".after_vectors"),weak))
SVC_Handler (void)
{
 80003da:	b480      	push	{r7}
 80003dc:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:558
#if defined(DEBUG)
  __DEBUG_BKPT();
 80003de:	be00      	bkpt	0x0000
 80003e0:	e7fe      	b.n	80003e0 <SVC_Handler+0x6>

080003e2 <DebugMon_Handler>:
DebugMon_Handler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:569

#if defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)

void __attribute__ ((section(".after_vectors"),weak))
DebugMon_Handler (void)
{
 80003e2:	b480      	push	{r7}
 80003e4:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:571
#if defined(DEBUG)
  __DEBUG_BKPT();
 80003e6:	be00      	bkpt	0x0000
 80003e8:	e7fe      	b.n	80003e8 <DebugMon_Handler+0x6>

080003ea <PendSV_Handler>:
PendSV_Handler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:582

#endif

void __attribute__ ((section(".after_vectors"),weak))
PendSV_Handler (void)
{
 80003ea:	b480      	push	{r7}
 80003ec:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/exception_handlers.c:584
#if defined(DEBUG)
  __DEBUG_BKPT();
 80003ee:	be00      	bkpt	0x0000
 80003f0:	e7fe      	b.n	80003f0 <PendSV_Handler+0x6>

080003f2 <DMA1_Stream1_IRQHandler>:
Default_Handler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cmsis/vectors_stm32f411xe.c:282
// When in DEBUG, trigger a debug exception to clearly notify
// the user of the exception and help identify the cause.

void __attribute__ ((section(".after_vectors")))
Default_Handler(void)
{
 80003f2:	b480      	push	{r7}
 80003f4:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cmsis/vectors_stm32f411xe.c:284
#if defined(DEBUG)
__DEBUG_BKPT();
 80003f6:	be00      	bkpt	0x0000
 80003f8:	e7fe      	b.n	80003f8 <DMA1_Stream1_IRQHandler+0x6>
DMA1_Stream3_IRQHandler():
 80003fa:	0000      	.short	0x0000
 80003fc:	08000381 	.word	0x08000381
 8000400:	080003ab 	.word	0x080003ab
 8000404:	080003cd 	.word	0x080003cd

Disassembly of section .text:

08000440 <FLASH_GetStatus>:
FLASH_GetStatus():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:980
  * @param  None
  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
  *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
  */
FLASH_Status FLASH_GetStatus(void)
{
 8000440:	b480      	push	{r7}
 8000442:	b083      	sub	sp, #12
 8000444:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:981
  FLASH_Status flashstatus = FLASH_COMPLETE;
 8000446:	2308      	movs	r3, #8
 8000448:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:983
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
 800044a:	4b16      	ldr	r3, [pc, #88]	; (80004a4 <__fini_array_end+0x64>)
 800044c:	68db      	ldr	r3, [r3, #12]
 800044e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8000452:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8000456:	d102      	bne.n	800045e <FLASH_GetStatus+0x1e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:985
  {
    flashstatus = FLASH_BUSY;
 8000458:	2301      	movs	r3, #1
 800045a:	71fb      	strb	r3, [r7, #7]
 800045c:	e01c      	b.n	8000498 <FLASH_GetStatus+0x58>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:989
  }
  else 
  {  
    if((FLASH->SR & FLASH_FLAG_WRPERR) != (uint32_t)0x00)
 800045e:	4b11      	ldr	r3, [pc, #68]	; (80004a4 <__fini_array_end+0x64>)
 8000460:	68db      	ldr	r3, [r3, #12]
 8000462:	f003 0310 	and.w	r3, r3, #16
 8000466:	2b00      	cmp	r3, #0
 8000468:	d002      	beq.n	8000470 <FLASH_GetStatus+0x30>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:991
    { 
      flashstatus = FLASH_ERROR_WRP;
 800046a:	2305      	movs	r3, #5
 800046c:	71fb      	strb	r3, [r7, #7]
 800046e:	e013      	b.n	8000498 <FLASH_GetStatus+0x58>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:995
    }
    else 
    {
      if((FLASH->SR & (uint32_t)0xEF) != (uint32_t)0x00)
 8000470:	4b0c      	ldr	r3, [pc, #48]	; (80004a4 <__fini_array_end+0x64>)
 8000472:	68db      	ldr	r3, [r3, #12]
 8000474:	f003 03ef 	and.w	r3, r3, #239	; 0xef
 8000478:	2b00      	cmp	r3, #0
 800047a:	d002      	beq.n	8000482 <FLASH_GetStatus+0x42>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:997
      {
        flashstatus = FLASH_ERROR_PROGRAM; 
 800047c:	2306      	movs	r3, #6
 800047e:	71fb      	strb	r3, [r7, #7]
 8000480:	e00a      	b.n	8000498 <FLASH_GetStatus+0x58>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1001
      }
      else
      {
        if((FLASH->SR & FLASH_FLAG_OPERR) != (uint32_t)0x00)
 8000482:	4b08      	ldr	r3, [pc, #32]	; (80004a4 <__fini_array_end+0x64>)
 8000484:	68db      	ldr	r3, [r3, #12]
 8000486:	f003 0302 	and.w	r3, r3, #2
 800048a:	2b00      	cmp	r3, #0
 800048c:	d002      	beq.n	8000494 <FLASH_GetStatus+0x54>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1003
        {
          flashstatus = FLASH_ERROR_OPERATION;
 800048e:	2307      	movs	r3, #7
 8000490:	71fb      	strb	r3, [r7, #7]
 8000492:	e001      	b.n	8000498 <FLASH_GetStatus+0x58>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1007
        }
        else
        {
          flashstatus = FLASH_COMPLETE;
 8000494:	2308      	movs	r3, #8
 8000496:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1013
        }
      }
    }
  }
  /* Return the FLASH Status */
  return flashstatus;
 8000498:	79fb      	ldrb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1014
}
 800049a:	4618      	mov	r0, r3
 800049c:	370c      	adds	r7, #12
 800049e:	46bd      	mov	sp, r7
 80004a0:	bc80      	pop	{r7}
 80004a2:	4770      	bx	lr
 80004a4:	40023c00 	.word	0x40023c00

080004a8 <FLASH_WaitForLastOperation>:
FLASH_WaitForLastOperation():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1023
  * @param  None
  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
  *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
  */
FLASH_Status FLASH_WaitForLastOperation(void)
{ 
 80004a8:	b580      	push	{r7, lr}
 80004aa:	b082      	sub	sp, #8
 80004ac:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1024
  __IO FLASH_Status status = FLASH_COMPLETE;
 80004ae:	2308      	movs	r3, #8
 80004b0:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1027
   
  /* Check for the FLASH Status */
  status = FLASH_GetStatus();
 80004b2:	f7ff ffc5 	bl	8000440 <FLASH_GetStatus>
 80004b6:	4603      	mov	r3, r0
 80004b8:	71fb      	strb	r3, [r7, #7]
 80004ba:	e003      	b.n	80004c4 <FLASH_WaitForLastOperation+0x1c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1034
  /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
     Even if the FLASH operation fails, the BUSY flag will be reset and an error
     flag will be set */
  while(status == FLASH_BUSY)
  {
    status = FLASH_GetStatus();
 80004bc:	f7ff ffc0 	bl	8000440 <FLASH_GetStatus>
 80004c0:	4603      	mov	r3, r0
 80004c2:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1032
  while(status == FLASH_BUSY)
 80004c4:	79fb      	ldrb	r3, [r7, #7]
 80004c6:	b2db      	uxtb	r3, r3
 80004c8:	2b01      	cmp	r3, #1
 80004ca:	d0f7      	beq.n	80004bc <FLASH_WaitForLastOperation+0x14>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1037
  }
  /* Return the operation status */
  return status;
 80004cc:	79fb      	ldrb	r3, [r7, #7]
 80004ce:	b2db      	uxtb	r3, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:1038
}
 80004d0:	4618      	mov	r0, r3
 80004d2:	3708      	adds	r7, #8
 80004d4:	46bd      	mov	sp, r7
 80004d6:	bd80      	pop	{r7, pc}

080004d8 <SystemInit>:
SystemInit():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:180
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80004d8:	b480      	push	{r7}
 80004da:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:186
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  // set CP10 and CP11 Full Access
  #endif

    RCC->CR = (uint32_t)(RCC_CR_HSION);	// na poczatek tylko internal 16MHz;
 80004dc:	4b16      	ldr	r3, [pc, #88]	; (8000538 <SystemInit+0x60>)
 80004de:	2201      	movs	r2, #1
 80004e0:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:187
    RCC->CFGR = 0x00000000;				// wszystkie prescalery wylaczone
 80004e2:	4b15      	ldr	r3, [pc, #84]	; (8000538 <SystemInit+0x60>)
 80004e4:	2200      	movs	r2, #0
 80004e6:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:188
    RCC->PLLCFGR = 0x00000000;			// wylaczone PLL;
 80004e8:	4b13      	ldr	r3, [pc, #76]	; (8000538 <SystemInit+0x60>)
 80004ea:	2200      	movs	r2, #0
 80004ec:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:189
    RCC->CIR = 0x00000000;  			// Disable all interrupts
 80004ee:	4b12      	ldr	r3, [pc, #72]	; (8000538 <SystemInit+0x60>)
 80004f0:	2200      	movs	r2, #0
 80004f2:	60da      	str	r2, [r3, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:192

    // teraz ustawiam sobie właściwe zegary
    RCC->CR |= (uint32_t)(RCC_CR_HSEON | RCC_CR_CSSON);	// oprocz dzialajacego HSI włączam dodatkowo zewnetrzny HSE
 80004f4:	4a10      	ldr	r2, [pc, #64]	; (8000538 <SystemInit+0x60>)
 80004f6:	4b10      	ldr	r3, [pc, #64]	; (8000538 <SystemInit+0x60>)
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	f443 2310 	orr.w	r3, r3, #589824	; 0x90000
 80004fe:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:193
    while (!(RCC->CR & RCC_CR_HSERDY)){;}				// poczekam na stabilny HSE
 8000500:	4b0d      	ldr	r3, [pc, #52]	; (8000538 <SystemInit+0x60>)
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000508:	2b00      	cmp	r3, #0
 800050a:	d0f9      	beq.n	8000500 <SystemInit+0x28>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:194
    RCC->CFGR = (uint32_t)(RCC_CFGR_SW_0); 				// HSE jako zegar systemowy
 800050c:	4b0a      	ldr	r3, [pc, #40]	; (8000538 <SystemInit+0x60>)
 800050e:	2201      	movs	r2, #1
 8000510:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:195
    while (!(RCC->CFGR & RCC_CFGR_SWS_0)){;}			// poczekam az zegar to HSE
 8000512:	4b09      	ldr	r3, [pc, #36]	; (8000538 <SystemInit+0x60>)
 8000514:	689b      	ldr	r3, [r3, #8]
 8000516:	f003 0304 	and.w	r3, r3, #4
 800051a:	2b00      	cmp	r3, #0
 800051c:	d0f9      	beq.n	8000512 <SystemInit+0x3a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:196
    RCC->CR &= (uint32_t)(~RCC_CR_HSION);				// wylaczenie HSI skoro dziala HSE
 800051e:	4a06      	ldr	r2, [pc, #24]	; (8000538 <SystemInit+0x60>)
 8000520:	4b05      	ldr	r3, [pc, #20]	; (8000538 <SystemInit+0x60>)
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	f023 0301 	bic.w	r3, r3, #1
 8000528:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:208

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800052a:	4b04      	ldr	r3, [pc, #16]	; (800053c <SystemInit+0x64>)
 800052c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000530:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:210
#endif
}
 8000532:	46bd      	mov	sp, r7
 8000534:	bc80      	pop	{r7}
 8000536:	4770      	bx	lr
 8000538:	40023800 	.word	0x40023800
 800053c:	e000ed00 	.word	0xe000ed00

08000540 <SystemCoreClockUpdate>:
SystemCoreClockUpdate():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:249
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 8000540:	b480      	push	{r7}
 8000542:	b087      	sub	sp, #28
 8000544:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:250
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8000546:	2300      	movs	r3, #0
 8000548:	613b      	str	r3, [r7, #16]
 800054a:	2300      	movs	r3, #0
 800054c:	617b      	str	r3, [r7, #20]
 800054e:	2302      	movs	r3, #2
 8000550:	60fb      	str	r3, [r7, #12]
 8000552:	2300      	movs	r3, #0
 8000554:	60bb      	str	r3, [r7, #8]
 8000556:	2302      	movs	r3, #2
 8000558:	607b      	str	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:253
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 800055a:	4b30      	ldr	r3, [pc, #192]	; (800061c <SystemCoreClockUpdate+0xdc>)
 800055c:	689b      	ldr	r3, [r3, #8]
 800055e:	f003 030c 	and.w	r3, r3, #12
 8000562:	613b      	str	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:255

  switch (tmp)
 8000564:	693b      	ldr	r3, [r7, #16]
 8000566:	2b04      	cmp	r3, #4
 8000568:	d007      	beq.n	800057a <SystemCoreClockUpdate+0x3a>
 800056a:	2b08      	cmp	r3, #8
 800056c:	d009      	beq.n	8000582 <SystemCoreClockUpdate+0x42>
 800056e:	2b00      	cmp	r3, #0
 8000570:	d13d      	bne.n	80005ee <SystemCoreClockUpdate+0xae>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:258
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 8000572:	4b2b      	ldr	r3, [pc, #172]	; (8000620 <SystemCoreClockUpdate+0xe0>)
 8000574:	4a2b      	ldr	r2, [pc, #172]	; (8000624 <SystemCoreClockUpdate+0xe4>)
 8000576:	601a      	str	r2, [r3, #0]
 8000578:	e03c      	b.n	80005f4 <SystemCoreClockUpdate+0xb4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:261
      break;
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 800057a:	4b29      	ldr	r3, [pc, #164]	; (8000620 <SystemCoreClockUpdate+0xe0>)
 800057c:	4a2a      	ldr	r2, [pc, #168]	; (8000628 <SystemCoreClockUpdate+0xe8>)
 800057e:	601a      	str	r2, [r3, #0]
 8000580:	e038      	b.n	80005f4 <SystemCoreClockUpdate+0xb4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:268
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 8000582:	4b26      	ldr	r3, [pc, #152]	; (800061c <SystemCoreClockUpdate+0xdc>)
 8000584:	685b      	ldr	r3, [r3, #4]
 8000586:	0d9b      	lsrs	r3, r3, #22
 8000588:	f003 0301 	and.w	r3, r3, #1
 800058c:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:269
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800058e:	4b23      	ldr	r3, [pc, #140]	; (800061c <SystemCoreClockUpdate+0xdc>)
 8000590:	685b      	ldr	r3, [r3, #4]
 8000592:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000596:	607b      	str	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:271
      
      if (pllsource != 0)
 8000598:	68bb      	ldr	r3, [r7, #8]
 800059a:	2b00      	cmp	r3, #0
 800059c:	d00c      	beq.n	80005b8 <SystemCoreClockUpdate+0x78>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:274
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 800059e:	4a22      	ldr	r2, [pc, #136]	; (8000628 <SystemCoreClockUpdate+0xe8>)
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	fbb2 f3f3 	udiv	r3, r2, r3
 80005a6:	4a1d      	ldr	r2, [pc, #116]	; (800061c <SystemCoreClockUpdate+0xdc>)
 80005a8:	6852      	ldr	r2, [r2, #4]
 80005aa:	0992      	lsrs	r2, r2, #6
 80005ac:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80005b0:	fb02 f303 	mul.w	r3, r2, r3
 80005b4:	617b      	str	r3, [r7, #20]
 80005b6:	e00b      	b.n	80005d0 <SystemCoreClockUpdate+0x90>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:279
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80005b8:	4a1a      	ldr	r2, [pc, #104]	; (8000624 <SystemCoreClockUpdate+0xe4>)
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80005c0:	4a16      	ldr	r2, [pc, #88]	; (800061c <SystemCoreClockUpdate+0xdc>)
 80005c2:	6852      	ldr	r2, [r2, #4]
 80005c4:	0992      	lsrs	r2, r2, #6
 80005c6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80005ca:	fb02 f303 	mul.w	r3, r2, r3
 80005ce:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:282
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 80005d0:	4b12      	ldr	r3, [pc, #72]	; (800061c <SystemCoreClockUpdate+0xdc>)
 80005d2:	685b      	ldr	r3, [r3, #4]
 80005d4:	0c1b      	lsrs	r3, r3, #16
 80005d6:	f003 0303 	and.w	r3, r3, #3
 80005da:	3301      	adds	r3, #1
 80005dc:	005b      	lsls	r3, r3, #1
 80005de:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:283
      SystemCoreClock = pllvco/pllp;
 80005e0:	697a      	ldr	r2, [r7, #20]
 80005e2:	68fb      	ldr	r3, [r7, #12]
 80005e4:	fbb2 f3f3 	udiv	r3, r2, r3
 80005e8:	4a0d      	ldr	r2, [pc, #52]	; (8000620 <SystemCoreClockUpdate+0xe0>)
 80005ea:	6013      	str	r3, [r2, #0]
 80005ec:	e002      	b.n	80005f4 <SystemCoreClockUpdate+0xb4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:286
      break;
    default:
      SystemCoreClock = HSI_VALUE;
 80005ee:	4b0c      	ldr	r3, [pc, #48]	; (8000620 <SystemCoreClockUpdate+0xe0>)
 80005f0:	4a0c      	ldr	r2, [pc, #48]	; (8000624 <SystemCoreClockUpdate+0xe4>)
 80005f2:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:291
      break;
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80005f4:	4b09      	ldr	r3, [pc, #36]	; (800061c <SystemCoreClockUpdate+0xdc>)
 80005f6:	689b      	ldr	r3, [r3, #8]
 80005f8:	091b      	lsrs	r3, r3, #4
 80005fa:	f003 030f 	and.w	r3, r3, #15
 80005fe:	4a0b      	ldr	r2, [pc, #44]	; (800062c <SystemCoreClockUpdate+0xec>)
 8000600:	5cd3      	ldrb	r3, [r2, r3]
 8000602:	613b      	str	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:293
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 8000604:	4b06      	ldr	r3, [pc, #24]	; (8000620 <SystemCoreClockUpdate+0xe0>)
 8000606:	681a      	ldr	r2, [r3, #0]
 8000608:	693b      	ldr	r3, [r7, #16]
 800060a:	fa22 f303 	lsr.w	r3, r2, r3
 800060e:	4a04      	ldr	r2, [pc, #16]	; (8000620 <SystemCoreClockUpdate+0xe0>)
 8000610:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/system_stm32f4xx.c:294
}
 8000612:	371c      	adds	r7, #28
 8000614:	46bd      	mov	sp, r7
 8000616:	bc80      	pop	{r7}
 8000618:	4770      	bx	lr
 800061a:	bf00      	nop
 800061c:	40023800 	.word	0x40023800
 8000620:	20000024 	.word	0x20000024
 8000624:	00f42400 	.word	0x00f42400
 8000628:	007a1200 	.word	0x007a1200
 800062c:	08004a4c 	.word	0x08004a4c

08000630 <Fifo::Fifo(unsigned char*, unsigned long)>:
_ZN4FifoC2EPhm():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:17
/** ***************************************************************
 * @brief  Konstruktor bufora fifo
 * @param  bufor	wskaznik do zaalokowanej pamieci dla fizycznego bufora bajtow
 * @param  size		rozmiar przekazywanej pamieci
 */
Fifo::Fifo(uint8_t *bufor, uint32_t size){
 8000630:	b480      	push	{r7}
 8000632:	b085      	sub	sp, #20
 8000634:	af00      	add	r7, sp, #0
 8000636:	60f8      	str	r0, [r7, #12]
 8000638:	60b9      	str	r1, [r7, #8]
 800063a:	607a      	str	r2, [r7, #4]
 800063c:	68fb      	ldr	r3, [r7, #12]
 800063e:	f06f 02ff 	mvn.w	r2, #255	; 0xff
 8000642:	611a      	str	r2, [r3, #16]
 8000644:	68fb      	ldr	r3, [r7, #12]
 8000646:	f44f 427f 	mov.w	r2, #65280	; 0xff00
 800064a:	829a      	strh	r2, [r3, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:18
	bufSize = size;
 800064c:	68fb      	ldr	r3, [r7, #12]
 800064e:	687a      	ldr	r2, [r7, #4]
 8000650:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:19
	this->bufor = bufor;
 8000652:	68fb      	ldr	r3, [r7, #12]
 8000654:	68ba      	ldr	r2, [r7, #8]
 8000656:	60da      	str	r2, [r3, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:20
	in = out = 0;
 8000658:	68fb      	ldr	r3, [r7, #12]
 800065a:	2200      	movs	r2, #0
 800065c:	609a      	str	r2, [r3, #8]
 800065e:	68fb      	ldr	r3, [r7, #12]
 8000660:	2200      	movs	r2, #0
 8000662:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:21
}
 8000664:	68fb      	ldr	r3, [r7, #12]
 8000666:	4618      	mov	r0, r3
 8000668:	3714      	adds	r7, #20
 800066a:	46bd      	mov	sp, r7
 800066c:	bc80      	pop	{r7}
 800066e:	4770      	bx	lr

08000670 <Fifo::put(unsigned char)>:
_ZN4Fifo3putEh():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:29
/** ***************************************************************
 * @brief  Dodaje 1 bajt do bufora fifo
 * @param  bajt	Bajt do umieszczenia w buforze
 * @return true jesli operacja sie powiodla, albo false, jesli bufor jest pelny
 */
bool Fifo::put(uint8_t bajt){
 8000670:	b480      	push	{r7}
 8000672:	b085      	sub	sp, #20
 8000674:	af00      	add	r7, sp, #0
 8000676:	6078      	str	r0, [r7, #4]
 8000678:	460b      	mov	r3, r1
 800067a:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:30
	uint32_t tmpIn = in;
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	685b      	ldr	r3, [r3, #4]
 8000680:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:31
	uint32_t tmpOut = out;
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	689b      	ldr	r3, [r3, #8]
 8000686:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:32
	if ((tmpIn + 1) == tmpOut) return false;	//bufor pelny, bo ! Trzeba co najmniej 1 wolny bajt w buforze
 8000688:	68fb      	ldr	r3, [r7, #12]
 800068a:	1c5a      	adds	r2, r3, #1
 800068c:	68bb      	ldr	r3, [r7, #8]
 800068e:	429a      	cmp	r2, r3
 8000690:	d101      	bne.n	8000696 <Fifo::put(unsigned char)+0x26>
 8000692:	2300      	movs	r3, #0
 8000694:	e01d      	b.n	80006d2 <Fifo::put(unsigned char)+0x62>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:33
	if ((tmpOut == 0)&&(tmpIn == (bufSize-1))) return false; // bufor pelny, indeksy na koncu i poczatku tablicy
 8000696:	68bb      	ldr	r3, [r7, #8]
 8000698:	2b00      	cmp	r3, #0
 800069a:	d107      	bne.n	80006ac <Fifo::put(unsigned char)+0x3c>
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	1e5a      	subs	r2, r3, #1
 80006a2:	68fb      	ldr	r3, [r7, #12]
 80006a4:	429a      	cmp	r2, r3
 80006a6:	d101      	bne.n	80006ac <Fifo::put(unsigned char)+0x3c>
 80006a8:	2300      	movs	r3, #0
 80006aa:	e012      	b.n	80006d2 <Fifo::put(unsigned char)+0x62>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:34
	bufor[tmpIn++] = bajt;		// zapis pod indeks in (pierwsze wolne) i inkrementacja indeksu
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	68da      	ldr	r2, [r3, #12]
 80006b0:	68fb      	ldr	r3, [r7, #12]
 80006b2:	1c59      	adds	r1, r3, #1
 80006b4:	60f9      	str	r1, [r7, #12]
 80006b6:	4413      	add	r3, r2
 80006b8:	78fa      	ldrb	r2, [r7, #3]
 80006ba:	701a      	strb	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:35
	in = (tmpIn >= (bufSize))? 0 : tmpIn;	//korekcja indeksu w strukturze
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	681a      	ldr	r2, [r3, #0]
 80006c0:	68fb      	ldr	r3, [r7, #12]
 80006c2:	429a      	cmp	r2, r3
 80006c4:	d901      	bls.n	80006ca <Fifo::put(unsigned char)+0x5a>
 80006c6:	68fb      	ldr	r3, [r7, #12]
 80006c8:	e000      	b.n	80006cc <Fifo::put(unsigned char)+0x5c>
 80006ca:	2300      	movs	r3, #0
 80006cc:	687a      	ldr	r2, [r7, #4]
 80006ce:	6053      	str	r3, [r2, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:36
	return true;
 80006d0:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:37
}
 80006d2:	4618      	mov	r0, r3
 80006d4:	3714      	adds	r7, #20
 80006d6:	46bd      	mov	sp, r7
 80006d8:	bc80      	pop	{r7}
 80006da:	4770      	bx	lr

080006dc <Fifo::get()>:
_ZN4Fifo3getEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:44
// -----------------------------------------------------------------
/** ***************************************************************
 * @brief  Pobiera 1 bajt z bufora.
 * @return Zwraca znak (bajt) lub BUFFER_EMPTY_FLAG_U16, gdy pusty bufor
 */
uint16_t Fifo::get(){
 80006dc:	b480      	push	{r7}
 80006de:	b087      	sub	sp, #28
 80006e0:	af00      	add	r7, sp, #0
 80006e2:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:45
	uint32_t tmpOut = out;
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	689b      	ldr	r3, [r3, #8]
 80006e8:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:46
	uint32_t tmpIn = in;
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	685b      	ldr	r3, [r3, #4]
 80006ee:	613b      	str	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:47
	if (tmpOut == tmpIn) return BUFFER_EMPTY_FLAG_U16; //bufor pusty, bo in = out! Zwracamy 0xff00
 80006f0:	697a      	ldr	r2, [r7, #20]
 80006f2:	693b      	ldr	r3, [r7, #16]
 80006f4:	429a      	cmp	r2, r3
 80006f6:	d102      	bne.n	80006fe <Fifo::get()+0x22>
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	8a9b      	ldrh	r3, [r3, #20]
 80006fc:	e013      	b.n	8000726 <Fifo::get()+0x4a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:48
	uint8_t wynik = bufor[tmpOut++];
 80006fe:	687b      	ldr	r3, [r7, #4]
 8000700:	68da      	ldr	r2, [r3, #12]
 8000702:	697b      	ldr	r3, [r7, #20]
 8000704:	1c59      	adds	r1, r3, #1
 8000706:	6179      	str	r1, [r7, #20]
 8000708:	4413      	add	r3, r2
 800070a:	781b      	ldrb	r3, [r3, #0]
 800070c:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:49
	out = (tmpOut >= bufSize)? 0 : tmpOut;
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	681a      	ldr	r2, [r3, #0]
 8000712:	697b      	ldr	r3, [r7, #20]
 8000714:	429a      	cmp	r2, r3
 8000716:	d901      	bls.n	800071c <Fifo::get()+0x40>
 8000718:	697b      	ldr	r3, [r7, #20]
 800071a:	e000      	b.n	800071e <Fifo::get()+0x42>
 800071c:	2300      	movs	r3, #0
 800071e:	687a      	ldr	r2, [r7, #4]
 8000720:	6093      	str	r3, [r2, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:50
	return wynik;
 8000722:	7bfb      	ldrb	r3, [r7, #15]
 8000724:	b29b      	uxth	r3, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:51
}
 8000726:	4618      	mov	r0, r3
 8000728:	371c      	adds	r7, #28
 800072a:	46bd      	mov	sp, r7
 800072c:	bc80      	pop	{r7}
 800072e:	4770      	bx	lr

08000730 <Fifo::isFull()>:
_ZN4Fifo6isFullEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:213

/** ***************************************************************
 * @brief  Sprawdzenie stanu bufora - czy jest pelny
 * @return True jesli bufor jest pelny, lub false, gdy jeszcze mozna zapisac co najmniej 1 bajt
 */
bool Fifo::isFull(){
 8000730:	b480      	push	{r7}
 8000732:	b085      	sub	sp, #20
 8000734:	af00      	add	r7, sp, #0
 8000736:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:214
	uint32_t tmpOut = out;
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	689b      	ldr	r3, [r3, #8]
 800073c:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:215
	uint32_t tmpIn = in;
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	685b      	ldr	r3, [r3, #4]
 8000742:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:216
	if (++tmpIn == tmpOut) return true;//bufor pelny, bo ! Trzeba co najmniej 1 wolny bajt w buforze
 8000744:	68bb      	ldr	r3, [r7, #8]
 8000746:	3301      	adds	r3, #1
 8000748:	60bb      	str	r3, [r7, #8]
 800074a:	68ba      	ldr	r2, [r7, #8]
 800074c:	68fb      	ldr	r3, [r7, #12]
 800074e:	429a      	cmp	r2, r3
 8000750:	bf0c      	ite	eq
 8000752:	2301      	moveq	r3, #1
 8000754:	2300      	movne	r3, #0
 8000756:	b2db      	uxtb	r3, r3
 8000758:	2b00      	cmp	r3, #0
 800075a:	d001      	beq.n	8000760 <Fifo::isFull()+0x30>
 800075c:	2301      	movs	r3, #1
 800075e:	e00a      	b.n	8000776 <Fifo::isFull()+0x46>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:217
	if ((tmpOut == 0)&&(tmpIn >= bufSize)) return true;// bufor pelny, indeksy na koncu i poczatku tablicy
 8000760:	68fb      	ldr	r3, [r7, #12]
 8000762:	2b00      	cmp	r3, #0
 8000764:	d106      	bne.n	8000774 <Fifo::isFull()+0x44>
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	681a      	ldr	r2, [r3, #0]
 800076a:	68bb      	ldr	r3, [r7, #8]
 800076c:	429a      	cmp	r2, r3
 800076e:	d801      	bhi.n	8000774 <Fifo::isFull()+0x44>
 8000770:	2301      	movs	r3, #1
 8000772:	e000      	b.n	8000776 <Fifo::isFull()+0x46>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:218
	return false;
 8000774:	2300      	movs	r3, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.cpp:219
}
 8000776:	4618      	mov	r0, r3
 8000778:	3714      	adds	r7, #20
 800077a:	46bd      	mov	sp, r7
 800077c:	bc80      	pop	{r7}
 800077e:	4770      	bx	lr

08000780 <itoaWithPattern>:
itoaWithPattern():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:93
 *@param pattern wskaznik do tekstu - szablonu, w ktorym bedzie umieszczony wynik
 *@param initValue	liczba, ktora bedzie skonwertowana na ASCII i umieszczona we wzorze
 * @return true, jesli wszystkie cyfry sie zmiescily
 */

bool itoaWithPattern(char * const pattern, uint32_t initValue){
 8000780:	b480      	push	{r7}
 8000782:	b085      	sub	sp, #20
 8000784:	af00      	add	r7, sp, #0
 8000786:	6078      	str	r0, [r7, #4]
 8000788:	6039      	str	r1, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:94
	const char patternChar = '0';
 800078a:	2330      	movs	r3, #48	; 0x30
 800078c:	72fb      	strb	r3, [r7, #11]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:95
	const char patternCharInv = '#';
 800078e:	2323      	movs	r3, #35	; 0x23
 8000790:	72bb      	strb	r3, [r7, #10]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:96
	char * txt = pattern;
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	60fb      	str	r3, [r7, #12]
 8000796:	e002      	b.n	800079e <itoaWithPattern+0x1e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:97
	while (*txt != '\0'){ txt++; }		// wyszukanie konca wzoru
 8000798:	68fb      	ldr	r3, [r7, #12]
 800079a:	3301      	adds	r3, #1
 800079c:	60fb      	str	r3, [r7, #12]
 800079e:	68fb      	ldr	r3, [r7, #12]
 80007a0:	f993 3000 	ldrsb.w	r3, [r3]
 80007a4:	2b00      	cmp	r3, #0
 80007a6:	d1f7      	bne.n	8000798 <itoaWithPattern+0x18>
 80007a8:	e03b      	b.n	8000822 <itoaWithPattern+0xa2>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:99
	while(txt > pattern){				// dzialanie od konca do poczatku
		txt--;
 80007aa:	68fb      	ldr	r3, [r7, #12]
 80007ac:	3b01      	subs	r3, #1
 80007ae:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:100
		if  ((*txt == patternChar)||(*txt == patternCharInv)) {
 80007b0:	68fb      	ldr	r3, [r7, #12]
 80007b2:	f993 3000 	ldrsb.w	r3, [r3]
 80007b6:	f997 200b 	ldrsb.w	r2, [r7, #11]
 80007ba:	429a      	cmp	r2, r3
 80007bc:	d006      	beq.n	80007cc <itoaWithPattern+0x4c>
 80007be:	68fb      	ldr	r3, [r7, #12]
 80007c0:	f993 3000 	ldrsb.w	r3, [r3]
 80007c4:	f997 200a 	ldrsb.w	r2, [r7, #10]
 80007c8:	429a      	cmp	r2, r3
 80007ca:	d12a      	bne.n	8000822 <itoaWithPattern+0xa2>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:101
			uint8_t cyfra = (uint8_t)(initValue % 10);
 80007cc:	6839      	ldr	r1, [r7, #0]
 80007ce:	4b1c      	ldr	r3, [pc, #112]	; (8000840 <itoaWithPattern+0xc0>)
 80007d0:	fba3 2301 	umull	r2, r3, r3, r1
 80007d4:	08da      	lsrs	r2, r3, #3
 80007d6:	4613      	mov	r3, r2
 80007d8:	009b      	lsls	r3, r3, #2
 80007da:	4413      	add	r3, r2
 80007dc:	005b      	lsls	r3, r3, #1
 80007de:	1aca      	subs	r2, r1, r3
 80007e0:	4613      	mov	r3, r2
 80007e2:	727b      	strb	r3, [r7, #9]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:102
			initValue /= 10;
 80007e4:	683b      	ldr	r3, [r7, #0]
 80007e6:	4a16      	ldr	r2, [pc, #88]	; (8000840 <itoaWithPattern+0xc0>)
 80007e8:	fba2 2303 	umull	r2, r3, r2, r3
 80007ec:	08db      	lsrs	r3, r3, #3
 80007ee:	603b      	str	r3, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:103
			if ((cyfra == 0) && (initValue == 0)){
 80007f0:	7a7b      	ldrb	r3, [r7, #9]
 80007f2:	2b00      	cmp	r3, #0
 80007f4:	d10d      	bne.n	8000812 <itoaWithPattern+0x92>
 80007f6:	683b      	ldr	r3, [r7, #0]
 80007f8:	2b00      	cmp	r3, #0
 80007fa:	d10a      	bne.n	8000812 <itoaWithPattern+0x92>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:104
				if (*txt == patternCharInv)	*txt = ' ';	// spacja dla niewidocznych zer
 80007fc:	68fb      	ldr	r3, [r7, #12]
 80007fe:	f993 3000 	ldrsb.w	r3, [r3]
 8000802:	f997 200a 	ldrsb.w	r2, [r7, #10]
 8000806:	429a      	cmp	r2, r3
 8000808:	d10a      	bne.n	8000820 <itoaWithPattern+0xa0>
 800080a:	68fb      	ldr	r3, [r7, #12]
 800080c:	2220      	movs	r2, #32
 800080e:	701a      	strb	r2, [r3, #0]
 8000810:	e007      	b.n	8000822 <itoaWithPattern+0xa2>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:106
			}
			else *txt = (char)(cyfra + '0');
 8000812:	7a7b      	ldrb	r3, [r7, #9]
 8000814:	3330      	adds	r3, #48	; 0x30
 8000816:	b2db      	uxtb	r3, r3
 8000818:	b25a      	sxtb	r2, r3
 800081a:	68fb      	ldr	r3, [r7, #12]
 800081c:	701a      	strb	r2, [r3, #0]
 800081e:	e000      	b.n	8000822 <itoaWithPattern+0xa2>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:104
				if (*txt == patternCharInv)	*txt = ' ';	// spacja dla niewidocznych zer
 8000820:	bf00      	nop
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:98
	while(txt > pattern){				// dzialanie od konca do poczatku
 8000822:	68fa      	ldr	r2, [r7, #12]
 8000824:	687b      	ldr	r3, [r7, #4]
 8000826:	429a      	cmp	r2, r3
 8000828:	d8bf      	bhi.n	80007aa <itoaWithPattern+0x2a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:110

		}	// else{ ;} // nic nie zapisuj, tylko przesun
	}
	return initValue == 0;
 800082a:	683b      	ldr	r3, [r7, #0]
 800082c:	2b00      	cmp	r3, #0
 800082e:	bf0c      	ite	eq
 8000830:	2301      	moveq	r3, #1
 8000832:	2300      	movne	r3, #0
 8000834:	b2db      	uxtb	r3, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:111
}
 8000836:	4618      	mov	r0, r3
 8000838:	3714      	adds	r7, #20
 800083a:	46bd      	mov	sp, r7
 800083c:	bc80      	pop	{r7}
 800083e:	4770      	bx	lr
 8000840:	cccccccd 	.word	0xcccccccd

08000844 <my_strcpy>:
my_strcpy():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:147
	uint32_t result = 1;
	while (power-- > 0){ result *= 10; }
	return result;
}

char * my_strcpy (char * to, const char * from, bool withTerminator){
 8000844:	b480      	push	{r7}
 8000846:	b087      	sub	sp, #28
 8000848:	af00      	add	r7, sp, #0
 800084a:	60f8      	str	r0, [r7, #12]
 800084c:	60b9      	str	r1, [r7, #8]
 800084e:	4613      	mov	r3, r2
 8000850:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:150
	uint8_t znak;
	while (true){
		znak = *from++;
 8000852:	68bb      	ldr	r3, [r7, #8]
 8000854:	1c5a      	adds	r2, r3, #1
 8000856:	60ba      	str	r2, [r7, #8]
 8000858:	f993 3000 	ldrsb.w	r3, [r3]
 800085c:	75fb      	strb	r3, [r7, #23]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:151
		if (znak == '\0'){
 800085e:	7dfb      	ldrb	r3, [r7, #23]
 8000860:	2b00      	cmp	r3, #0
 8000862:	d10a      	bne.n	800087a <my_strcpy+0x36>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:152
			if (withTerminator){
 8000864:	79fb      	ldrb	r3, [r7, #7]
 8000866:	2b00      	cmp	r3, #0
 8000868:	d005      	beq.n	8000876 <my_strcpy+0x32>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:153
				*to++ = znak;
 800086a:	68fb      	ldr	r3, [r7, #12]
 800086c:	1c5a      	adds	r2, r3, #1
 800086e:	60fa      	str	r2, [r7, #12]
 8000870:	f997 2017 	ldrsb.w	r2, [r7, #23]
 8000874:	701a      	strb	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:159
			}
			break;
		}
		*to++ = znak;
	}
	return to;
 8000876:	68fb      	ldr	r3, [r7, #12]
 8000878:	e006      	b.n	8000888 <my_strcpy+0x44>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:157
		*to++ = znak;
 800087a:	68fb      	ldr	r3, [r7, #12]
 800087c:	1c5a      	adds	r2, r3, #1
 800087e:	60fa      	str	r2, [r7, #12]
 8000880:	f997 2017 	ldrsb.w	r2, [r7, #23]
 8000884:	701a      	strb	r2, [r3, #0]
 8000886:	e7e4      	b.n	8000852 <my_strcpy+0xe>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/myUtils.c:160
}
 8000888:	4618      	mov	r0, r3
 800088a:	371c      	adds	r7, #28
 800088c:	46bd      	mov	sp, r7
 800088e:	bc80      	pop	{r7}
 8000890:	4770      	bx	lr

08000892 <Pinout::setup()>:
setup():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:58
//	Led ledWentylator	= Led(GPIOA,1, Led::Type::ACTIVELOW, Led::Mode::SWIECI);
//	Led ledPodajnik	= Led(GPIOA,1, Led::Type::ACTIVELOW, Led::Mode::SWIECI);
//	Led ledPompaCO	= Led(GPIOA,1, Led::Type::ACTIVELOW, Led::Mode::SWIECI);
//	Led ledPompaCWU	= Led(GPIOA,1, Led::Type::ACTIVELOW, Led::Mode::SWIECI);

	void setup(){
 8000892:	b580      	push	{r7, lr}
 8000894:	b084      	sub	sp, #16
 8000896:	af02      	add	r7, sp, #8
 8000898:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:59
		gpioPodajnik.setup(Gpio::GpioMode::OUTPUT, Gpio::GpioOType::PushPull, Gpio::GpioPuPd::NoPull, Gpio::GpioSpeed::LowSpeed);
 800089a:	6878      	ldr	r0, [r7, #4]
 800089c:	2300      	movs	r3, #0
 800089e:	9300      	str	r3, [sp, #0]
 80008a0:	2300      	movs	r3, #0
 80008a2:	2200      	movs	r2, #0
 80008a4:	2101      	movs	r1, #1
 80008a6:	f003 f88e 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:60
		gpioDmuchawa.setup(Gpio::GpioMode::OUTPUT, Gpio::GpioOType::PushPull, Gpio::GpioPuPd::NoPull, Gpio::GpioSpeed::MaximumSpeed);
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	f103 000c 	add.w	r0, r3, #12
 80008b0:	2303      	movs	r3, #3
 80008b2:	9300      	str	r3, [sp, #0]
 80008b4:	2300      	movs	r3, #0
 80008b6:	2200      	movs	r2, #0
 80008b8:	2101      	movs	r1, #1
 80008ba:	f003 f884 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:61
		gpioPompaCO.setup(Gpio::GpioMode::OUTPUT, Gpio::GpioOType::PushPull, Gpio::GpioPuPd::NoPull, Gpio::GpioSpeed::LowSpeed);
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	f103 0018 	add.w	r0, r3, #24
 80008c4:	2300      	movs	r3, #0
 80008c6:	9300      	str	r3, [sp, #0]
 80008c8:	2300      	movs	r3, #0
 80008ca:	2200      	movs	r2, #0
 80008cc:	2101      	movs	r1, #1
 80008ce:	f003 f87a 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:62
		gpioPompaCWU.setup(Gpio::GpioMode::OUTPUT, Gpio::GpioOType::PushPull, Gpio::GpioPuPd::NoPull, Gpio::GpioSpeed::LowSpeed);
 80008d2:	687b      	ldr	r3, [r7, #4]
 80008d4:	f103 0024 	add.w	r0, r3, #36	; 0x24
 80008d8:	2300      	movs	r3, #0
 80008da:	9300      	str	r3, [sp, #0]
 80008dc:	2300      	movs	r3, #0
 80008de:	2200      	movs	r2, #0
 80008e0:	2101      	movs	r1, #1
 80008e2:	f003 f870 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:66



		gpioKey1.setup(Gpio::GpioMode::INPUT, Gpio::GpioOType::NoMatter, Gpio::GpioPuPd::PullUp, Gpio::GpioSpeed::HighSpeed);
 80008e6:	687b      	ldr	r3, [r7, #4]
 80008e8:	f103 0030 	add.w	r0, r3, #48	; 0x30
 80008ec:	2302      	movs	r3, #2
 80008ee:	9300      	str	r3, [sp, #0]
 80008f0:	2301      	movs	r3, #1
 80008f2:	2201      	movs	r2, #1
 80008f4:	2100      	movs	r1, #0
 80008f6:	f003 f866 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:67
		gpioKey2.setup(Gpio::GpioMode::INPUT, Gpio::GpioOType::NoMatter, Gpio::GpioPuPd::PullUp, Gpio::GpioSpeed::HighSpeed);
 80008fa:	687b      	ldr	r3, [r7, #4]
 80008fc:	f103 003c 	add.w	r0, r3, #60	; 0x3c
 8000900:	2302      	movs	r3, #2
 8000902:	9300      	str	r3, [sp, #0]
 8000904:	2301      	movs	r3, #1
 8000906:	2201      	movs	r2, #1
 8000908:	2100      	movs	r1, #0
 800090a:	f003 f85c 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:68
		gpioKey3.setup(Gpio::GpioMode::INPUT, Gpio::GpioOType::NoMatter, Gpio::GpioPuPd::PullUp, Gpio::GpioSpeed::HighSpeed);
 800090e:	687b      	ldr	r3, [r7, #4]
 8000910:	f103 0048 	add.w	r0, r3, #72	; 0x48
 8000914:	2302      	movs	r3, #2
 8000916:	9300      	str	r3, [sp, #0]
 8000918:	2301      	movs	r3, #1
 800091a:	2201      	movs	r2, #1
 800091c:	2100      	movs	r1, #0
 800091e:	f003 f852 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:69
		gpioKey4.setup(Gpio::GpioMode::INPUT, Gpio::GpioOType::NoMatter, Gpio::GpioPuPd::PullUp, Gpio::GpioSpeed::HighSpeed);
 8000922:	687b      	ldr	r3, [r7, #4]
 8000924:	f103 0054 	add.w	r0, r3, #84	; 0x54
 8000928:	2302      	movs	r3, #2
 800092a:	9300      	str	r3, [sp, #0]
 800092c:	2301      	movs	r3, #1
 800092e:	2201      	movs	r2, #1
 8000930:	2100      	movs	r1, #0
 8000932:	f003 f848 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:70
		gpioImpPush.setup(Gpio::GpioMode::INPUT, Gpio::GpioOType::NoMatter, Gpio::GpioPuPd::PullUp, Gpio::GpioSpeed::HighSpeed);
 8000936:	687b      	ldr	r3, [r7, #4]
 8000938:	f103 0060 	add.w	r0, r3, #96	; 0x60
 800093c:	2302      	movs	r3, #2
 800093e:	9300      	str	r3, [sp, #0]
 8000940:	2301      	movs	r3, #1
 8000942:	2201      	movs	r2, #1
 8000944:	2100      	movs	r1, #0
 8000946:	f003 f83e 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:71
		gpioImpLeft.setup(Gpio::GpioMode::INPUT, Gpio::GpioOType::NoMatter, Gpio::GpioPuPd::PullUp, Gpio::GpioSpeed::HighSpeed);
 800094a:	687b      	ldr	r3, [r7, #4]
 800094c:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 8000950:	2302      	movs	r3, #2
 8000952:	9300      	str	r3, [sp, #0]
 8000954:	2301      	movs	r3, #1
 8000956:	2201      	movs	r2, #1
 8000958:	2100      	movs	r1, #0
 800095a:	f003 f834 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:72
		gpioImpRight.setup(Gpio::GpioMode::INPUT, Gpio::GpioOType::NoMatter, Gpio::GpioPuPd::PullUp, Gpio::GpioSpeed::HighSpeed);
 800095e:	687b      	ldr	r3, [r7, #4]
 8000960:	f103 0078 	add.w	r0, r3, #120	; 0x78
 8000964:	2302      	movs	r3, #2
 8000966:	9300      	str	r3, [sp, #0]
 8000968:	2301      	movs	r3, #1
 800096a:	2201      	movs	r2, #1
 800096c:	2100      	movs	r1, #0
 800096e:	f003 f82a 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:74

	}
 8000972:	3708      	adds	r7, #8
 8000974:	46bd      	mov	sp, r7
 8000976:	bd80      	pop	{r7, pc}

08000978 <Menu::init(Sterownik*, Keyboard*, TextLcd*)>:
init():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:65
	uint16_t editValue = 0;
	bool editMode = false;

public:

	void init(Sterownik * pSter, Keyboard * pKeys, TextLcd * pLcd){
 8000978:	b580      	push	{r7, lr}
 800097a:	b084      	sub	sp, #16
 800097c:	af00      	add	r7, sp, #0
 800097e:	60f8      	str	r0, [r7, #12]
 8000980:	60b9      	str	r1, [r7, #8]
 8000982:	607a      	str	r2, [r7, #4]
 8000984:	603b      	str	r3, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:66
		ster = pSter;
 8000986:	68fb      	ldr	r3, [r7, #12]
 8000988:	68ba      	ldr	r2, [r7, #8]
 800098a:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:67
		keys = pKeys;
 800098c:	68fb      	ldr	r3, [r7, #12]
 800098e:	687a      	ldr	r2, [r7, #4]
 8000990:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:68
		lcd = pLcd;
 8000992:	68fb      	ldr	r3, [r7, #12]
 8000994:	683a      	ldr	r2, [r7, #0]
 8000996:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:69
		praca = ster->getPraca();
 8000998:	68fb      	ldr	r3, [r7, #12]
 800099a:	681b      	ldr	r3, [r3, #0]
 800099c:	4618      	mov	r0, r3
 800099e:	f001 fccb 	bl	8002338 <Sterownik::getPraca()>
 80009a2:	4602      	mov	r2, r0
 80009a4:	68fb      	ldr	r3, [r7, #12]
 80009a6:	60da      	str	r2, [r3, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:71

		ekran = EKRAN::e_AUTOMAT;
 80009a8:	68fb      	ldr	r3, [r7, #12]
 80009aa:	2200      	movs	r2, #0
 80009ac:	741a      	strb	r2, [r3, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:73
		//goToEkran(EKRAN::e_AUTOMAT);
	}
 80009ae:	3710      	adds	r7, #16
 80009b0:	46bd      	mov	sp, r7
 80009b2:	bd80      	pop	{r7, pc}

080009b4 <HMI::init(Sterownik*, Keyboard*, TextLcd*, Menu*)>:
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:51

	HMI(Sterownik * psterownik, Keyboard * pkeys, TextLcd * plcd, Menu * pmenu){
		init(psterownik, pkeys, plcd, pmenu);
	}

	void init(Sterownik * sterownik, Keyboard * pkeys, TextLcd * plcd, Menu * pmenu) {
 80009b4:	b580      	push	{r7, lr}
 80009b6:	b084      	sub	sp, #16
 80009b8:	af00      	add	r7, sp, #0
 80009ba:	60f8      	str	r0, [r7, #12]
 80009bc:	60b9      	str	r1, [r7, #8]
 80009be:	607a      	str	r2, [r7, #4]
 80009c0:	603b      	str	r3, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:52
		ster = sterownik;
 80009c2:	68fb      	ldr	r3, [r7, #12]
 80009c4:	68ba      	ldr	r2, [r7, #8]
 80009c6:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:53
		praca = ster->getPraca();
 80009c8:	68fb      	ldr	r3, [r7, #12]
 80009ca:	685b      	ldr	r3, [r3, #4]
 80009cc:	4618      	mov	r0, r3
 80009ce:	f001 fcb3 	bl	8002338 <Sterownik::getPraca()>
 80009d2:	4602      	mov	r2, r0
 80009d4:	68fb      	ldr	r3, [r7, #12]
 80009d6:	60da      	str	r2, [r3, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:54
		lcd = plcd;
 80009d8:	68fb      	ldr	r3, [r7, #12]
 80009da:	683a      	ldr	r2, [r7, #0]
 80009dc:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:55
		keyboard = pkeys;
 80009de:	68fb      	ldr	r3, [r7, #12]
 80009e0:	687a      	ldr	r2, [r7, #4]
 80009e2:	611a      	str	r2, [r3, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:56
		menu = pmenu;
 80009e4:	68fb      	ldr	r3, [r7, #12]
 80009e6:	69ba      	ldr	r2, [r7, #24]
 80009e8:	615a      	str	r2, [r3, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:57
		menu->init(ster, keyboard, lcd);
 80009ea:	68fb      	ldr	r3, [r7, #12]
 80009ec:	6958      	ldr	r0, [r3, #20]
 80009ee:	68fb      	ldr	r3, [r7, #12]
 80009f0:	6859      	ldr	r1, [r3, #4]
 80009f2:	68fb      	ldr	r3, [r7, #12]
 80009f4:	691a      	ldr	r2, [r3, #16]
 80009f6:	68fb      	ldr	r3, [r7, #12]
 80009f8:	689b      	ldr	r3, [r3, #8]
 80009fa:	f7ff ffbd 	bl	8000978 <Menu::init(Sterownik*, Keyboard*, TextLcd*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:58
		startDelay = false;
 80009fe:	68fb      	ldr	r3, [r7, #12]
 8000a00:	2200      	movs	r2, #0
 8000a02:	701a      	strb	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:59
	}
 8000a04:	3710      	adds	r7, #16
 8000a06:	46bd      	mov	sp, r7
 8000a08:	bd80      	pop	{r7, pc}
	...

08000a0c <Pinout::Pinout()>:
__base_ctor ():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pinout.h:15
class Pinout {
 8000a0c:	b580      	push	{r7, lr}
 8000a0e:	b082      	sub	sp, #8
 8000a10:	af00      	add	r7, sp, #0
 8000a12:	6078      	str	r0, [r7, #4]
 8000a14:	687b      	ldr	r3, [r7, #4]
 8000a16:	2208      	movs	r2, #8
 8000a18:	4927      	ldr	r1, [pc, #156]	; (8000ab8 <Pinout::Pinout()+0xac>)
 8000a1a:	4618      	mov	r0, r3
 8000a1c:	f002 fef0 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
 8000a20:	687b      	ldr	r3, [r7, #4]
 8000a22:	330c      	adds	r3, #12
 8000a24:	2209      	movs	r2, #9
 8000a26:	4924      	ldr	r1, [pc, #144]	; (8000ab8 <Pinout::Pinout()+0xac>)
 8000a28:	4618      	mov	r0, r3
 8000a2a:	f002 fee9 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
 8000a2e:	687b      	ldr	r3, [r7, #4]
 8000a30:	3318      	adds	r3, #24
 8000a32:	220a      	movs	r2, #10
 8000a34:	4920      	ldr	r1, [pc, #128]	; (8000ab8 <Pinout::Pinout()+0xac>)
 8000a36:	4618      	mov	r0, r3
 8000a38:	f002 fee2 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
 8000a3c:	687b      	ldr	r3, [r7, #4]
 8000a3e:	3324      	adds	r3, #36	; 0x24
 8000a40:	220b      	movs	r2, #11
 8000a42:	491d      	ldr	r1, [pc, #116]	; (8000ab8 <Pinout::Pinout()+0xac>)
 8000a44:	4618      	mov	r0, r3
 8000a46:	f002 fedb 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
 8000a4a:	687b      	ldr	r3, [r7, #4]
 8000a4c:	3330      	adds	r3, #48	; 0x30
 8000a4e:	2206      	movs	r2, #6
 8000a50:	491a      	ldr	r1, [pc, #104]	; (8000abc <Pinout::Pinout()+0xb0>)
 8000a52:	4618      	mov	r0, r3
 8000a54:	f002 fed4 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
 8000a58:	687b      	ldr	r3, [r7, #4]
 8000a5a:	333c      	adds	r3, #60	; 0x3c
 8000a5c:	2205      	movs	r2, #5
 8000a5e:	4917      	ldr	r1, [pc, #92]	; (8000abc <Pinout::Pinout()+0xb0>)
 8000a60:	4618      	mov	r0, r3
 8000a62:	f002 fecd 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
 8000a66:	687b      	ldr	r3, [r7, #4]
 8000a68:	3348      	adds	r3, #72	; 0x48
 8000a6a:	2208      	movs	r2, #8
 8000a6c:	4913      	ldr	r1, [pc, #76]	; (8000abc <Pinout::Pinout()+0xb0>)
 8000a6e:	4618      	mov	r0, r3
 8000a70:	f002 fec6 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
 8000a74:	687b      	ldr	r3, [r7, #4]
 8000a76:	3354      	adds	r3, #84	; 0x54
 8000a78:	220c      	movs	r2, #12
 8000a7a:	490f      	ldr	r1, [pc, #60]	; (8000ab8 <Pinout::Pinout()+0xac>)
 8000a7c:	4618      	mov	r0, r3
 8000a7e:	f002 febf 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
 8000a82:	687b      	ldr	r3, [r7, #4]
 8000a84:	3360      	adds	r3, #96	; 0x60
 8000a86:	2209      	movs	r2, #9
 8000a88:	490c      	ldr	r1, [pc, #48]	; (8000abc <Pinout::Pinout()+0xb0>)
 8000a8a:	4618      	mov	r0, r3
 8000a8c:	f002 feb8 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
 8000a90:	687b      	ldr	r3, [r7, #4]
 8000a92:	336c      	adds	r3, #108	; 0x6c
 8000a94:	2208      	movs	r2, #8
 8000a96:	490a      	ldr	r1, [pc, #40]	; (8000ac0 <Pinout::Pinout()+0xb4>)
 8000a98:	4618      	mov	r0, r3
 8000a9a:	f002 feb1 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
 8000a9e:	687b      	ldr	r3, [r7, #4]
 8000aa0:	3378      	adds	r3, #120	; 0x78
 8000aa2:	2209      	movs	r2, #9
 8000aa4:	4906      	ldr	r1, [pc, #24]	; (8000ac0 <Pinout::Pinout()+0xb4>)
 8000aa6:	4618      	mov	r0, r3
 8000aa8:	f002 feaa 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
 8000aac:	687b      	ldr	r3, [r7, #4]
 8000aae:	4618      	mov	r0, r3
 8000ab0:	3708      	adds	r7, #8
 8000ab2:	46bd      	mov	sp, r7
 8000ab4:	bd80      	pop	{r7, pc}
 8000ab6:	bf00      	nop
 8000ab8:	40020000 	.word	0x40020000
 8000abc:	40020800 	.word	0x40020800
 8000ac0:	40020400 	.word	0x40020400

08000ac4 <Menu::Menu()>:
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:18
class Menu {
 8000ac4:	b480      	push	{r7}
 8000ac6:	b083      	sub	sp, #12
 8000ac8:	af00      	add	r7, sp, #0
 8000aca:	6078      	str	r0, [r7, #4]
 8000acc:	687b      	ldr	r3, [r7, #4]
 8000ace:	2200      	movs	r2, #0
 8000ad0:	745a      	strb	r2, [r3, #17]
 8000ad2:	687b      	ldr	r3, [r7, #4]
 8000ad4:	2200      	movs	r2, #0
 8000ad6:	825a      	strh	r2, [r3, #18]
 8000ad8:	687b      	ldr	r3, [r7, #4]
 8000ada:	2200      	movs	r2, #0
 8000adc:	751a      	strb	r2, [r3, #20]
 8000ade:	687b      	ldr	r3, [r7, #4]
 8000ae0:	4618      	mov	r0, r3
 8000ae2:	370c      	adds	r7, #12
 8000ae4:	46bd      	mov	sp, r7
 8000ae6:	bc80      	pop	{r7}
 8000ae8:	4770      	bx	lr
	...

08000aec <keyb_callback()>:
keyb_callback():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:51
Menu menu = Menu();
//HMI hmi = HMI(&sterownikCO, &keys, &lcd, &menu);


/** Wywolanie metody monitor() */
void static inline keyb_callback(){  keys.co10ms(); }
 8000aec:	b580      	push	{r7, lr}
 8000aee:	af00      	add	r7, sp, #0
 8000af0:	4801      	ldr	r0, [pc, #4]	; (8000af8 <keyb_callback()+0xc>)
 8000af2:	f001 fb7b 	bl	80021ec <Keyboard::co10ms()>
 8000af6:	bd80      	pop	{r7, pc}
 8000af8:	20000454 	.word	0x20000454

08000afc <main>:
main():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:60
QuickTask keybQtsk(QuickTask::QT_PERIODIC, keyb_callback, Keyboard::TIME_PERIOD_KEYB_MS);


//int main (int argc, char* argv[])
void main()
{
 8000afc:	b580      	push	{r7, lr}
 8000afe:	b084      	sub	sp, #16
 8000b00:	af02      	add	r7, sp, #8
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:65

	/* Configure the system clock */
	//SystemClock_Config();

	Hardware::init();
 8000b02:	f003 f8f9 	bl	8003cf8 <Hardware::init()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:66
	pins.setup();
 8000b06:	4847      	ldr	r0, [pc, #284]	; (8000c24 <main+0x128>)
 8000b08:	f7ff fec3 	bl	8000892 <Pinout::setup()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:68

	st7032iDriver.init();
 8000b0c:	4846      	ldr	r0, [pc, #280]	; (8000c28 <main+0x12c>)
 8000b0e:	f000 f963 	bl	8000dd8 <ST7032I::init()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:72

	HMI * hmi;

	hmi = HMI::getInstance();
 8000b12:	f002 fd4d 	bl	80035b0 <HMI::getInstance()>
 8000b16:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:73
	hmi->init(sterCO, &keys, &lcd, &menu);
 8000b18:	4b44      	ldr	r3, [pc, #272]	; (8000c2c <main+0x130>)
 8000b1a:	6819      	ldr	r1, [r3, #0]
 8000b1c:	4b44      	ldr	r3, [pc, #272]	; (8000c30 <main+0x134>)
 8000b1e:	9300      	str	r3, [sp, #0]
 8000b20:	4b44      	ldr	r3, [pc, #272]	; (8000c34 <main+0x138>)
 8000b22:	4a45      	ldr	r2, [pc, #276]	; (8000c38 <main+0x13c>)
 8000b24:	6878      	ldr	r0, [r7, #4]
 8000b26:	f7ff ff45 	bl	80009b4 <HMI::init(Sterownik*, Keyboard*, TextLcd*, Menu*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:76


	hmi->lcd->clrScrHome();
 8000b2a:	687b      	ldr	r3, [r7, #4]
 8000b2c:	689b      	ldr	r3, [r3, #8]
 8000b2e:	4618      	mov	r0, r3
 8000b30:	f001 fbbd 	bl	80022ae <TextLcd::clrScrHome()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:78

	hmi->lcd->lcd_ON();
 8000b34:	687b      	ldr	r3, [r7, #4]
 8000b36:	689b      	ldr	r3, [r3, #8]
 8000b38:	4618      	mov	r0, r3
 8000b3a:	f001 fbc6 	bl	80022ca <TextLcd::lcd_ON()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:80

	hmi->lcd->setCursorMode(CURSOR::NONE);
 8000b3e:	687b      	ldr	r3, [r7, #4]
 8000b40:	689b      	ldr	r3, [r3, #8]
 8000b42:	2100      	movs	r1, #0
 8000b44:	4618      	mov	r0, r3
 8000b46:	f002 fcfd 	bl	8003544 <TextLcd::setCursorMode(CURSOR)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:83


	if (!Parameter::initEepromMemory()){
 8000b4a:	f002 fb47 	bl	80031dc <Parameter::initEepromMemory()>
 8000b4e:	4603      	mov	r3, r0
 8000b50:	f083 0301 	eor.w	r3, r3, #1
 8000b54:	b2db      	uxtb	r3, r3
 8000b56:	2b00      	cmp	r3, #0
 8000b58:	d007      	beq.n	8000b6a <main+0x6e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:85
		//---------------------->1234567890123456<
		hmi->lcd->printXY(1,0,	"  BLAD EEPROM!  ");
 8000b5a:	687b      	ldr	r3, [r7, #4]
 8000b5c:	6898      	ldr	r0, [r3, #8]
 8000b5e:	4b37      	ldr	r3, [pc, #220]	; (8000c3c <main+0x140>)
 8000b60:	2200      	movs	r2, #0
 8000b62:	2101      	movs	r1, #1
 8000b64:	f003 fd0d 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
 8000b68:	e7fe      	b.n	8000b68 <main+0x6c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:89
		while(true){;}
	}

	hmi->lcd->print("abcd");
 8000b6a:	687b      	ldr	r3, [r7, #4]
 8000b6c:	689b      	ldr	r3, [r3, #8]
 8000b6e:	4934      	ldr	r1, [pc, #208]	; (8000c40 <main+0x144>)
 8000b70:	4618      	mov	r0, r3
 8000b72:	f000 fdd5 	bl	8001720 <TextLcd::print(char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:90
	Hardware::delayMs(1000);
 8000b76:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000b7a:	f003 f993 	bl	8003ea4 <Hardware::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:91
	hmi->lcd->setCursorMode(CURSOR::BLINK);
 8000b7e:	687b      	ldr	r3, [r7, #4]
 8000b80:	689b      	ldr	r3, [r3, #8]
 8000b82:	2101      	movs	r1, #1
 8000b84:	4618      	mov	r0, r3
 8000b86:	f002 fcdd 	bl	8003544 <TextLcd::setCursorMode(CURSOR)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:92
	Hardware::delayMs(1000);
 8000b8a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000b8e:	f003 f989 	bl	8003ea4 <Hardware::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:93
	hmi->lcd->print(" dcba ");
 8000b92:	687b      	ldr	r3, [r7, #4]
 8000b94:	689b      	ldr	r3, [r3, #8]
 8000b96:	492b      	ldr	r1, [pc, #172]	; (8000c44 <main+0x148>)
 8000b98:	4618      	mov	r0, r3
 8000b9a:	f000 fdc1 	bl	8001720 <TextLcd::print(char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:94
	Hardware::delayMs(1000);
 8000b9e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000ba2:	f003 f97f 	bl	8003ea4 <Hardware::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:95
	hmi->lcd->gotoXY(1,0);
 8000ba6:	687b      	ldr	r3, [r7, #4]
 8000ba8:	689b      	ldr	r3, [r3, #8]
 8000baa:	2200      	movs	r2, #0
 8000bac:	2101      	movs	r1, #1
 8000bae:	4618      	mov	r0, r3
 8000bb0:	f003 fcd1 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:96
	Hardware::delayMs(1000);
 8000bb4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000bb8:	f003 f974 	bl	8003ea4 <Hardware::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:97
	hmi->lcd->print("123456");
 8000bbc:	687b      	ldr	r3, [r7, #4]
 8000bbe:	689b      	ldr	r3, [r3, #8]
 8000bc0:	4921      	ldr	r1, [pc, #132]	; (8000c48 <main+0x14c>)
 8000bc2:	4618      	mov	r0, r3
 8000bc4:	f000 fdac 	bl	8001720 <TextLcd::print(char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:102



	//---------------------->1234567890123456<
	hmi->lcd->print(		"Sterow. pieca CO");
 8000bc8:	687b      	ldr	r3, [r7, #4]
 8000bca:	689b      	ldr	r3, [r3, #8]
 8000bcc:	491f      	ldr	r1, [pc, #124]	; (8000c4c <main+0x150>)
 8000bce:	4618      	mov	r0, r3
 8000bd0:	f000 fda6 	bl	8001720 <TextLcd::print(char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:103
	hmi->lcd->printXY(1,0,	"   wersja 1.0   ");
 8000bd4:	687b      	ldr	r3, [r7, #4]
 8000bd6:	6898      	ldr	r0, [r3, #8]
 8000bd8:	4b1d      	ldr	r3, [pc, #116]	; (8000c50 <main+0x154>)
 8000bda:	2200      	movs	r2, #0
 8000bdc:	2101      	movs	r1, #1
 8000bde:	f003 fcd0 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:105

	Hardware::delayMs(1000);
 8000be2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000be6:	f003 f95d 	bl	8003ea4 <Hardware::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:108

	//------------------->1234567890123456<
	hmi->lcd->printXY(0,0,"@ Leszek Blacha ");
 8000bea:	687b      	ldr	r3, [r7, #4]
 8000bec:	6898      	ldr	r0, [r3, #8]
 8000bee:	4b19      	ldr	r3, [pc, #100]	; (8000c54 <main+0x158>)
 8000bf0:	2200      	movs	r2, #0
 8000bf2:	2100      	movs	r1, #0
 8000bf4:	f003 fcc5 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:109
	hmi->lcd->printXY(1,0,"pazdziernik 2017");
 8000bf8:	687b      	ldr	r3, [r7, #4]
 8000bfa:	6898      	ldr	r0, [r3, #8]
 8000bfc:	4b16      	ldr	r3, [pc, #88]	; (8000c58 <main+0x15c>)
 8000bfe:	2200      	movs	r2, #0
 8000c00:	2101      	movs	r1, #1
 8000c02:	f003 fcbe 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:111

	Hardware::delayMs(1000);
 8000c06:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000c0a:	f003 f94b 	bl	8003ea4 <Hardware::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:131
//	{
//		/* Start Conversation Error */
//		Error_Handler();
//	}

	hmi->menu->goToEkran(Menu::EKRAN::e_AUTOMAT);
 8000c0e:	687b      	ldr	r3, [r7, #4]
 8000c10:	695b      	ldr	r3, [r3, #20]
 8000c12:	2100      	movs	r1, #0
 8000c14:	4618      	mov	r0, r3
 8000c16:	f003 fe0f 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:133
	do{
		Hardware::WDOG_Reload();					// przeladowanie Watch-doga
 8000c1a:	f003 f938 	bl	8003e8e <Hardware::WDOG_Reload()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:134
		QuickTask::runQuickTasks();
 8000c1e:	f000 fcfb 	bl	8001618 <QuickTask::runQuickTasks()>
 8000c22:	e7fa      	b.n	8000c1a <main+0x11e>
 8000c24:	200003d0 	.word	0x200003d0
 8000c28:	200004b4 	.word	0x200004b4
 8000c2c:	20000020 	.word	0x20000020
 8000c30:	200004e4 	.word	0x200004e4
 8000c34:	200004b8 	.word	0x200004b8
 8000c38:	20000454 	.word	0x20000454
 8000c3c:	08004a5c 	.word	0x08004a5c
 8000c40:	08004a70 	.word	0x08004a70
 8000c44:	08004a78 	.word	0x08004a78
 8000c48:	08004a80 	.word	0x08004a80
 8000c4c:	08004a88 	.word	0x08004a88
 8000c50:	08004a9c 	.word	0x08004a9c
 8000c54:	08004ab0 	.word	0x08004ab0
 8000c58:	08004ac4 	.word	0x08004ac4

08000c5c <__static_initialization_and_destruction_0(int, int)>:
__static_initialization_and_destruction_0():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:139
		//komunikacja();	// bez opoznien

	} while (true);			// do konca swiata

}
 8000c5c:	b580      	push	{r7, lr}
 8000c5e:	b086      	sub	sp, #24
 8000c60:	af04      	add	r7, sp, #16
 8000c62:	6078      	str	r0, [r7, #4]
 8000c64:	6039      	str	r1, [r7, #0]
 8000c66:	687b      	ldr	r3, [r7, #4]
 8000c68:	2b01      	cmp	r3, #1
 8000c6a:	d14d      	bne.n	8000d08 <__static_initialization_and_destruction_0(int, int)+0xac>
 8000c6c:	683b      	ldr	r3, [r7, #0]
 8000c6e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000c72:	4293      	cmp	r3, r2
 8000c74:	d148      	bne.n	8000d08 <__static_initialization_and_destruction_0(int, int)+0xac>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:33
Pinout pins = Pinout();
 8000c76:	4b26      	ldr	r3, [pc, #152]	; (8000d10 <__static_initialization_and_destruction_0(int, int)+0xb4>)
 8000c78:	4618      	mov	r0, r3
 8000c7a:	2384      	movs	r3, #132	; 0x84
 8000c7c:	461a      	mov	r2, r3
 8000c7e:	2100      	movs	r1, #0
 8000c80:	f003 fedb 	bl	8004a3a <memset>
 8000c84:	4822      	ldr	r0, [pc, #136]	; (8000d10 <__static_initialization_and_destruction_0(int, int)+0xb4>)
 8000c86:	f7ff fec1 	bl	8000a0c <Pinout::Pinout()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:34
Keyboard keys = Keyboard(&pins.gpioKey1, &pins.gpioKey2, &pins.gpioKey3, &pins.gpioKey4,
 8000c8a:	4b22      	ldr	r3, [pc, #136]	; (8000d14 <__static_initialization_and_destruction_0(int, int)+0xb8>)
 8000c8c:	9303      	str	r3, [sp, #12]
 8000c8e:	4b22      	ldr	r3, [pc, #136]	; (8000d18 <__static_initialization_and_destruction_0(int, int)+0xbc>)
 8000c90:	9302      	str	r3, [sp, #8]
 8000c92:	4b22      	ldr	r3, [pc, #136]	; (8000d1c <__static_initialization_and_destruction_0(int, int)+0xc0>)
 8000c94:	9301      	str	r3, [sp, #4]
 8000c96:	4b22      	ldr	r3, [pc, #136]	; (8000d20 <__static_initialization_and_destruction_0(int, int)+0xc4>)
 8000c98:	9300      	str	r3, [sp, #0]
 8000c9a:	4b22      	ldr	r3, [pc, #136]	; (8000d24 <__static_initialization_and_destruction_0(int, int)+0xc8>)
 8000c9c:	4a22      	ldr	r2, [pc, #136]	; (8000d28 <__static_initialization_and_destruction_0(int, int)+0xcc>)
 8000c9e:	4923      	ldr	r1, [pc, #140]	; (8000d2c <__static_initialization_and_destruction_0(int, int)+0xd0>)
 8000ca0:	4823      	ldr	r0, [pc, #140]	; (8000d30 <__static_initialization_and_destruction_0(int, int)+0xd4>)
 8000ca2:	f001 fa4f 	bl	8002144 <Keyboard::Keyboard(Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:36
Silnik pompaCo = Silnik(&pins.gpioPompaCO);
 8000ca6:	4923      	ldr	r1, [pc, #140]	; (8000d34 <__static_initialization_and_destruction_0(int, int)+0xd8>)
 8000ca8:	4823      	ldr	r0, [pc, #140]	; (8000d38 <__static_initialization_and_destruction_0(int, int)+0xdc>)
 8000caa:	f001 f8a0 	bl	8001dee <Silnik::Silnik(Gpio*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:37
Silnik pompaCWU = Silnik(&pins.gpioPompaCWU);
 8000cae:	4923      	ldr	r1, [pc, #140]	; (8000d3c <__static_initialization_and_destruction_0(int, int)+0xe0>)
 8000cb0:	4823      	ldr	r0, [pc, #140]	; (8000d40 <__static_initialization_and_destruction_0(int, int)+0xe4>)
 8000cb2:	f001 f89c 	bl	8001dee <Silnik::Silnik(Gpio*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:38
Silnik dmuchawa = Silnik(&pins.gpioDmuchawa);
 8000cb6:	4923      	ldr	r1, [pc, #140]	; (8000d44 <__static_initialization_and_destruction_0(int, int)+0xe8>)
 8000cb8:	4823      	ldr	r0, [pc, #140]	; (8000d48 <__static_initialization_and_destruction_0(int, int)+0xec>)
 8000cba:	f001 f898 	bl	8001dee <Silnik::Silnik(Gpio*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:39
Silnik podajnik = Silnik(&pins.gpioPodajnik);
 8000cbe:	4914      	ldr	r1, [pc, #80]	; (8000d10 <__static_initialization_and_destruction_0(int, int)+0xb4>)
 8000cc0:	4822      	ldr	r0, [pc, #136]	; (8000d4c <__static_initialization_and_destruction_0(int, int)+0xf0>)
 8000cc2:	f001 f894 	bl	8001dee <Silnik::Silnik(Gpio*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:40
ST7032I st7032iDriver = ST7032I();
 8000cc6:	4822      	ldr	r0, [pc, #136]	; (8000d50 <__static_initialization_and_destruction_0(int, int)+0xf4>)
 8000cc8:	f001 faca 	bl	8002260 <ST7032I::ST7032I()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:41
TextLcd lcd = TextLcd(&st7032iDriver);
 8000ccc:	4920      	ldr	r1, [pc, #128]	; (8000d50 <__static_initialization_and_destruction_0(int, int)+0xf4>)
 8000cce:	4821      	ldr	r0, [pc, #132]	; (8000d54 <__static_initialization_and_destruction_0(int, int)+0xf8>)
 8000cd0:	f001 fad0 	bl	8002274 <TextLcd::TextLcd(ST7032I*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:43
Sterownik sterownikCO = Sterownik(&pompaCo, &pompaCWU, &dmuchawa, &podajnik );
 8000cd4:	4b1d      	ldr	r3, [pc, #116]	; (8000d4c <__static_initialization_and_destruction_0(int, int)+0xf0>)
 8000cd6:	9300      	str	r3, [sp, #0]
 8000cd8:	4b1b      	ldr	r3, [pc, #108]	; (8000d48 <__static_initialization_and_destruction_0(int, int)+0xec>)
 8000cda:	4a19      	ldr	r2, [pc, #100]	; (8000d40 <__static_initialization_and_destruction_0(int, int)+0xe4>)
 8000cdc:	4916      	ldr	r1, [pc, #88]	; (8000d38 <__static_initialization_and_destruction_0(int, int)+0xdc>)
 8000cde:	481e      	ldr	r0, [pc, #120]	; (8000d58 <__static_initialization_and_destruction_0(int, int)+0xfc>)
 8000ce0:	f001 fb01 	bl	80022e6 <Sterownik::Sterownik(Silnik*, Silnik*, Silnik*, Silnik*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:46
Menu menu = Menu();
 8000ce4:	4b1d      	ldr	r3, [pc, #116]	; (8000d5c <__static_initialization_and_destruction_0(int, int)+0x100>)
 8000ce6:	461a      	mov	r2, r3
 8000ce8:	2300      	movs	r3, #0
 8000cea:	6013      	str	r3, [r2, #0]
 8000cec:	6053      	str	r3, [r2, #4]
 8000cee:	6093      	str	r3, [r2, #8]
 8000cf0:	60d3      	str	r3, [r2, #12]
 8000cf2:	6113      	str	r3, [r2, #16]
 8000cf4:	6153      	str	r3, [r2, #20]
 8000cf6:	4819      	ldr	r0, [pc, #100]	; (8000d5c <__static_initialization_and_destruction_0(int, int)+0x100>)
 8000cf8:	f7ff fee4 	bl	8000ac4 <Menu::Menu()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:55
QuickTask keybQtsk(QuickTask::QT_PERIODIC, keyb_callback, Keyboard::TIME_PERIOD_KEYB_MS);
 8000cfc:	230a      	movs	r3, #10
 8000cfe:	4a18      	ldr	r2, [pc, #96]	; (8000d60 <__static_initialization_and_destruction_0(int, int)+0x104>)
 8000d00:	2102      	movs	r1, #2
 8000d02:	4818      	ldr	r0, [pc, #96]	; (8000d64 <__static_initialization_and_destruction_0(int, int)+0x108>)
 8000d04:	f000 fcb6 	bl	8001674 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/main.cpp:139
}
 8000d08:	3708      	adds	r7, #8
 8000d0a:	46bd      	mov	sp, r7
 8000d0c:	bd80      	pop	{r7, pc}
 8000d0e:	bf00      	nop
 8000d10:	200003d0 	.word	0x200003d0
 8000d14:	20000430 	.word	0x20000430
 8000d18:	20000448 	.word	0x20000448
 8000d1c:	2000043c 	.word	0x2000043c
 8000d20:	20000424 	.word	0x20000424
 8000d24:	20000418 	.word	0x20000418
 8000d28:	2000040c 	.word	0x2000040c
 8000d2c:	20000400 	.word	0x20000400
 8000d30:	20000454 	.word	0x20000454
 8000d34:	200003e8 	.word	0x200003e8
 8000d38:	200004a4 	.word	0x200004a4
 8000d3c:	200003f4 	.word	0x200003f4
 8000d40:	200004a8 	.word	0x200004a8
 8000d44:	200003dc 	.word	0x200003dc
 8000d48:	200004ac 	.word	0x200004ac
 8000d4c:	200004b0 	.word	0x200004b0
 8000d50:	200004b4 	.word	0x200004b4
 8000d54:	200004b8 	.word	0x200004b8
 8000d58:	200004bc 	.word	0x200004bc
 8000d5c:	200004e4 	.word	0x200004e4
 8000d60:	08000aed 	.word	0x08000aed
 8000d64:	200004fc 	.word	0x200004fc

08000d68 <_GLOBAL__sub_I_pins>:
_GLOBAL__sub_I_pins():
 8000d68:	b580      	push	{r7, lr}
 8000d6a:	af00      	add	r7, sp, #0
 8000d6c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8000d70:	2001      	movs	r0, #1
 8000d72:	f7ff ff73 	bl	8000c5c <__static_initialization_and_destruction_0(int, int)>
 8000d76:	bd80      	pop	{r7, pc}

08000d78 <ST7032I::sendCmdOrData(bool, unsigned char)>:
sendCmdOrData():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:24
//	buf[1] = byteValue;
//	bool ret = Hardware::i2cMasterTransmit(ST7032I_ADDRESS, buf, 2);
//	delayMs(2);
//	return ret;
//}
bool ST7032I::sendCmdOrData(bool isCMD, uint8_t byteValue){
 8000d78:	b580      	push	{r7, lr}
 8000d7a:	b084      	sub	sp, #16
 8000d7c:	af00      	add	r7, sp, #0
 8000d7e:	6078      	str	r0, [r7, #4]
 8000d80:	460b      	mov	r3, r1
 8000d82:	70fb      	strb	r3, [r7, #3]
 8000d84:	4613      	mov	r3, r2
 8000d86:	70bb      	strb	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:26
	uint8_t buf[2];
	buf[0] = isCMD ? CMD : DATA;
 8000d88:	78fb      	ldrb	r3, [r7, #3]
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d001      	beq.n	8000d92 <ST7032I::sendCmdOrData(bool, unsigned char)+0x1a>
 8000d8e:	2300      	movs	r3, #0
 8000d90:	e000      	b.n	8000d94 <ST7032I::sendCmdOrData(bool, unsigned char)+0x1c>
 8000d92:	2340      	movs	r3, #64	; 0x40
 8000d94:	733b      	strb	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:27
	buf[1] = byteValue;
 8000d96:	78bb      	ldrb	r3, [r7, #2]
 8000d98:	737b      	strb	r3, [r7, #13]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:28
	bool ret = Hardware::i2cMasterTransmit(ST7032I_ADDRESS, buf, 2);
 8000d9a:	f107 030c 	add.w	r3, r7, #12
 8000d9e:	2202      	movs	r2, #2
 8000da0:	4619      	mov	r1, r3
 8000da2:	203e      	movs	r0, #62	; 0x3e
 8000da4:	f003 faaa 	bl	80042fc <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)>
 8000da8:	4603      	mov	r3, r0
 8000daa:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:29
	return ret;
 8000dac:	7bfb      	ldrb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:30
}
 8000dae:	4618      	mov	r0, r3
 8000db0:	3710      	adds	r7, #16
 8000db2:	46bd      	mov	sp, r7
 8000db4:	bd80      	pop	{r7, pc}

08000db6 <ST7032I::sendCommand(unsigned char)>:
_ZN7ST7032I11sendCommandEh():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:32

bool ST7032I::sendCommand(uint8_t cmd){
 8000db6:	b580      	push	{r7, lr}
 8000db8:	b082      	sub	sp, #8
 8000dba:	af00      	add	r7, sp, #0
 8000dbc:	6078      	str	r0, [r7, #4]
 8000dbe:	460b      	mov	r3, r1
 8000dc0:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:33
	return sendCmdOrData(true, cmd);
 8000dc2:	78fb      	ldrb	r3, [r7, #3]
 8000dc4:	461a      	mov	r2, r3
 8000dc6:	2101      	movs	r1, #1
 8000dc8:	6878      	ldr	r0, [r7, #4]
 8000dca:	f7ff ffd5 	bl	8000d78 <ST7032I::sendCmdOrData(bool, unsigned char)>
 8000dce:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:34
}
 8000dd0:	4618      	mov	r0, r3
 8000dd2:	3708      	adds	r7, #8
 8000dd4:	46bd      	mov	sp, r7
 8000dd6:	bd80      	pop	{r7, pc}

08000dd8 <ST7032I::init()>:
init():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:42
	return sendCmdOrData(false, data);
}


// LCD initialization procedure
void ST7032I::init(void){
 8000dd8:	b580      	push	{r7, lr}
 8000dda:	b082      	sub	sp, #8
 8000ddc:	af00      	add	r7, sp, #0
 8000dde:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:44
	//Hardware::i2cInit();
	Hardware::lcdPinReset(false);
 8000de0:	2000      	movs	r0, #0
 8000de2:	f003 f887 	bl	8003ef4 <Hardware::lcdPinReset(bool)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:45
	delayMs(10);
 8000de6:	210a      	movs	r1, #10
 8000de8:	6878      	ldr	r0, [r7, #4]
 8000dea:	f002 fb44 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:46
	Hardware::lcdPinReset(true);
 8000dee:	2001      	movs	r0, #1
 8000df0:	f003 f880 	bl	8003ef4 <Hardware::lcdPinReset(bool)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:47
	delayMs(10);
 8000df4:	210a      	movs	r1, #10
 8000df6:	6878      	ldr	r0, [r7, #4]
 8000df8:	f002 fb3d 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:49

	sendCommand(0x38);
 8000dfc:	2138      	movs	r1, #56	; 0x38
 8000dfe:	6878      	ldr	r0, [r7, #4]
 8000e00:	f7ff ffd9 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:50
	delayMs(300);
 8000e04:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8000e08:	6878      	ldr	r0, [r7, #4]
 8000e0a:	f002 fb34 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:51
	sendCommand(0x39);
 8000e0e:	2139      	movs	r1, #57	; 0x39
 8000e10:	6878      	ldr	r0, [r7, #4]
 8000e12:	f7ff ffd0 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:52
	delayMs(300);
 8000e16:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8000e1a:	6878      	ldr	r0, [r7, #4]
 8000e1c:	f002 fb2b 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:54

	sendCommand(0x14);
 8000e20:	2114      	movs	r1, #20
 8000e22:	6878      	ldr	r0, [r7, #4]
 8000e24:	f7ff ffc7 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:55
	delayMs(100);
 8000e28:	2164      	movs	r1, #100	; 0x64
 8000e2a:	6878      	ldr	r0, [r7, #4]
 8000e2c:	f002 fb23 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:57
#ifdef LCD5V
	sendCommand(0x79);
 8000e30:	2179      	movs	r1, #121	; 0x79
 8000e32:	6878      	ldr	r0, [r7, #4]
 8000e34:	f7ff ffbf 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:58
	delayMs(100);
 8000e38:	2164      	movs	r1, #100	; 0x64
 8000e3a:	6878      	ldr	r0, [r7, #4]
 8000e3c:	f002 fb1b 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:59
	sendCommand(0x50);
 8000e40:	2150      	movs	r1, #80	; 0x50
 8000e42:	6878      	ldr	r0, [r7, #4]
 8000e44:	f7ff ffb7 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:60
	delayMs(100);
 8000e48:	2164      	movs	r1, #100	; 0x64
 8000e4a:	6878      	ldr	r0, [r7, #4]
 8000e4c:	f002 fb13 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:61
	sendCommand(0x6c);
 8000e50:	216c      	movs	r1, #108	; 0x6c
 8000e52:	6878      	ldr	r0, [r7, #4]
 8000e54:	f7ff ffaf 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:62
	delayMs(100);
 8000e58:	2164      	movs	r1, #100	; 0x64
 8000e5a:	6878      	ldr	r0, [r7, #4]
 8000e5c:	f002 fb0b 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:71
	sendCommand(0x54);
	delayMs(30);
	sendCommand(0x6f);
	delayMs(30);
#endif
	sendCommand(0x0c);
 8000e60:	210c      	movs	r1, #12
 8000e62:	6878      	ldr	r0, [r7, #4]
 8000e64:	f7ff ffa7 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:72
	delayMs(100);
 8000e68:	2164      	movs	r1, #100	; 0x64
 8000e6a:	6878      	ldr	r0, [r7, #4]
 8000e6c:	f002 fb03 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:73
	sendCommand(0x01);
 8000e70:	2101      	movs	r1, #1
 8000e72:	6878      	ldr	r0, [r7, #4]
 8000e74:	f7ff ff9f 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:74
	delayMs(100);
 8000e78:	2164      	movs	r1, #100	; 0x64
 8000e7a:	6878      	ldr	r0, [r7, #4]
 8000e7c:	f002 fafb 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:76

	sendCommand(0x38);	//cmmd table 0
 8000e80:	2138      	movs	r1, #56	; 0x38
 8000e82:	6878      	ldr	r0, [r7, #4]
 8000e84:	f7ff ff97 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:77
	delayMs(100);
 8000e88:	2164      	movs	r1, #100	; 0x64
 8000e8a:	6878      	ldr	r0, [r7, #4]
 8000e8c:	f002 faf3 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:78
}
 8000e90:	3708      	adds	r7, #8
 8000e92:	46bd      	mov	sp, r7
 8000e94:	bd80      	pop	{r7, pc}

08000e96 <ST7032I::print(char const*)>:
_ZN7ST7032I5printEPKc():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:83


bool ST7032I::print(char znak){	return sendData(znak); }

bool ST7032I::print(const char * str){
 8000e96:	b580      	push	{r7, lr}
 8000e98:	b08a      	sub	sp, #40	; 0x28
 8000e9a:	af00      	add	r7, sp, #0
 8000e9c:	6078      	str	r0, [r7, #4]
 8000e9e:	6039      	str	r1, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:84
	constexpr uint8_t BUFFSIZE = 20;
 8000ea0:	2314      	movs	r3, #20
 8000ea2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:86
	uint8_t buf[BUFFSIZE];
	buf[0] = DATA;
 8000ea6:	2340      	movs	r3, #64	; 0x40
 8000ea8:	743b      	strb	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:88
	uint8_t i;
	for ( i = 1; i < BUFFSIZE-1 ; i++ ){
 8000eaa:	2301      	movs	r3, #1
 8000eac:	73fb      	strb	r3, [r7, #15]
 8000eae:	7bfb      	ldrb	r3, [r7, #15]
 8000eb0:	2b12      	cmp	r3, #18
 8000eb2:	dc16      	bgt.n	8000ee2 <ST7032I::print(char const*)+0x4c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:89
		char znak = *str++;
 8000eb4:	683b      	ldr	r3, [r7, #0]
 8000eb6:	1c5a      	adds	r2, r3, #1
 8000eb8:	603a      	str	r2, [r7, #0]
 8000eba:	781b      	ldrb	r3, [r3, #0]
 8000ebc:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:90
		buf[i] = znak;
 8000ec0:	7bfb      	ldrb	r3, [r7, #15]
 8000ec2:	f897 2026 	ldrb.w	r2, [r7, #38]	; 0x26
 8000ec6:	f107 0128 	add.w	r1, r7, #40	; 0x28
 8000eca:	440b      	add	r3, r1
 8000ecc:	f803 2c18 	strb.w	r2, [r3, #-24]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:91
		if (znak == '\0') break;
 8000ed0:	f997 3026 	ldrsb.w	r3, [r7, #38]	; 0x26
 8000ed4:	2b00      	cmp	r3, #0
 8000ed6:	d004      	beq.n	8000ee2 <ST7032I::print(char const*)+0x4c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:88
	for ( i = 1; i < BUFFSIZE-1 ; i++ ){
 8000ed8:	7bfb      	ldrb	r3, [r7, #15]
 8000eda:	3301      	adds	r3, #1
 8000edc:	b2db      	uxtb	r3, r3
 8000ede:	73fb      	strb	r3, [r7, #15]
 8000ee0:	e7e5      	b.n	8000eae <ST7032I::print(char const*)+0x18>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:93
	}
	buf[BUFFSIZE-1] = '\0';
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:94
	bool ret = Hardware::i2cMasterTransmit(ST7032I_ADDRESS, buf, (uint16_t)(i));
 8000ee8:	7bfb      	ldrb	r3, [r7, #15]
 8000eea:	b29a      	uxth	r2, r3
 8000eec:	f107 0310 	add.w	r3, r7, #16
 8000ef0:	4619      	mov	r1, r3
 8000ef2:	203e      	movs	r0, #62	; 0x3e
 8000ef4:	f003 fa02 	bl	80042fc <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)>
 8000ef8:	4603      	mov	r3, r0
 8000efa:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:95
	return ret;
 8000efe:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:96
}
 8000f02:	4618      	mov	r0, r3
 8000f04:	3728      	adds	r7, #40	; 0x28
 8000f06:	46bd      	mov	sp, r7
 8000f08:	bd80      	pop	{r7, pc}

08000f0a <ST7032I::gotoXY(unsigned char, unsigned char)>:
_ZN7ST7032I6gotoXYEhh():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:98

bool ST7032I::gotoXY(uint8_t Row, uint8_t Col){
 8000f0a:	b580      	push	{r7, lr}
 8000f0c:	b082      	sub	sp, #8
 8000f0e:	af00      	add	r7, sp, #0
 8000f10:	6078      	str	r0, [r7, #4]
 8000f12:	460b      	mov	r3, r1
 8000f14:	70fb      	strb	r3, [r7, #3]
 8000f16:	4613      	mov	r3, r2
 8000f18:	70bb      	strb	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:99
	switch (Row){
 8000f1a:	78fb      	ldrb	r3, [r7, #3]
 8000f1c:	2b01      	cmp	r3, #1
 8000f1e:	d108      	bne.n	8000f32 <ST7032I::gotoXY(unsigned char, unsigned char)+0x28>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:101
	case 1:
		sendCommand(LCD_DDRAM_WRITE | LCD_L2 | Col); break;
 8000f20:	78bb      	ldrb	r3, [r7, #2]
 8000f22:	f063 033f 	orn	r3, r3, #63	; 0x3f
 8000f26:	b2db      	uxtb	r3, r3
 8000f28:	4619      	mov	r1, r3
 8000f2a:	6878      	ldr	r0, [r7, #4]
 8000f2c:	f7ff ff43 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
 8000f30:	e007      	b.n	8000f42 <ST7032I::gotoXY(unsigned char, unsigned char)+0x38>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:108
		//		sendCommand(LCD_L3 | Col); break;
		//	case 3:
		//		sendCommand(LCD_L4 | Col); break;
	case 0:
	default:
		sendCommand(LCD_DDRAM_WRITE | LCD_L1 | Col); break;
 8000f32:	78bb      	ldrb	r3, [r7, #2]
 8000f34:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8000f38:	b2db      	uxtb	r3, r3
 8000f3a:	4619      	mov	r1, r3
 8000f3c:	6878      	ldr	r0, [r7, #4]
 8000f3e:	f7ff ff3a 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:110
	}
	return true;
 8000f42:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:111
}
 8000f44:	4618      	mov	r0, r3
 8000f46:	3708      	adds	r7, #8
 8000f48:	46bd      	mov	sp, r7
 8000f4a:	bd80      	pop	{r7, pc}

08000f4c <ST7032I::clearScreen()>:
_ZN7ST7032I11clearScreenEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:114

// Clear LCD Screen
bool ST7032I::clearScreen(void){
 8000f4c:	b580      	push	{r7, lr}
 8000f4e:	b084      	sub	sp, #16
 8000f50:	af00      	add	r7, sp, #0
 8000f52:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:115
	bool result = sendCommand(LCD_CLR);
 8000f54:	2101      	movs	r1, #1
 8000f56:	6878      	ldr	r0, [r7, #4]
 8000f58:	f7ff ff2d 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
 8000f5c:	4603      	mov	r3, r0
 8000f5e:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:118
	//delayMs(5);
	// 2ms delay is Necessary after sending LCD_CLS command !!!
	return result;
 8000f60:	7bfb      	ldrb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:119
}
 8000f62:	4618      	mov	r0, r3
 8000f64:	3710      	adds	r7, #16
 8000f66:	46bd      	mov	sp, r7
 8000f68:	bd80      	pop	{r7, pc}

08000f6a <ST7032I::lcd_ON()>:
_ZN7ST7032I6lcd_ONEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:121

bool ST7032I::lcd_ON(){
 8000f6a:	b580      	push	{r7, lr}
 8000f6c:	b082      	sub	sp, #8
 8000f6e:	af00      	add	r7, sp, #0
 8000f70:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:122
	sendCommand(LCD_ON);
 8000f72:	210e      	movs	r1, #14
 8000f74:	6878      	ldr	r0, [r7, #4]
 8000f76:	f7ff ff1e 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:124
	//delayMs(10);
	return true;
 8000f7a:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.cpp:125
}
 8000f7c:	4618      	mov	r0, r3
 8000f7e:	3708      	adds	r7, #8
 8000f80:	46bd      	mov	sp, r7
 8000f82:	bd80      	pop	{r7, pc}

08000f84 <FLASH_EraseSector>:
FLASH_EraseSector():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:342
{
 8000f84:	b580      	push	{r7, lr}
 8000f86:	b084      	sub	sp, #16
 8000f88:	af00      	add	r7, sp, #0
 8000f8a:	6078      	str	r0, [r7, #4]
 8000f8c:	460b      	mov	r3, r1
 8000f8e:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:343
  uint32_t tmp_psize = 0x0;
 8000f90:	2300      	movs	r3, #0
 8000f92:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:344
  FLASH_Status status = FLASH_COMPLETE;
 8000f94:	2308      	movs	r3, #8
 8000f96:	72fb      	strb	r3, [r7, #11]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:350
  if(VoltageRange == VoltageRange_1)
 8000f98:	78fb      	ldrb	r3, [r7, #3]
 8000f9a:	2b00      	cmp	r3, #0
 8000f9c:	d102      	bne.n	8000fa4 <FLASH_EraseSector+0x20>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:352
     tmp_psize = FLASH_PSIZE_BYTE;
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	60fb      	str	r3, [r7, #12]
 8000fa2:	e010      	b.n	8000fc6 <FLASH_EraseSector+0x42>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:354
  else if(VoltageRange == VoltageRange_2)
 8000fa4:	78fb      	ldrb	r3, [r7, #3]
 8000fa6:	2b01      	cmp	r3, #1
 8000fa8:	d103      	bne.n	8000fb2 <FLASH_EraseSector+0x2e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:356
    tmp_psize = FLASH_PSIZE_HALF_WORD;
 8000faa:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000fae:	60fb      	str	r3, [r7, #12]
 8000fb0:	e009      	b.n	8000fc6 <FLASH_EraseSector+0x42>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:358
  else if(VoltageRange == VoltageRange_3)
 8000fb2:	78fb      	ldrb	r3, [r7, #3]
 8000fb4:	2b02      	cmp	r3, #2
 8000fb6:	d103      	bne.n	8000fc0 <FLASH_EraseSector+0x3c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:360
    tmp_psize = FLASH_PSIZE_WORD;
 8000fb8:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000fbc:	60fb      	str	r3, [r7, #12]
 8000fbe:	e002      	b.n	8000fc6 <FLASH_EraseSector+0x42>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:364
    tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 8000fc0:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000fc4:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:367
  status = FLASH_WaitForLastOperation();
 8000fc6:	f7ff fa6f 	bl	80004a8 <FLASH_WaitForLastOperation>
 8000fca:	4603      	mov	r3, r0
 8000fcc:	72fb      	strb	r3, [r7, #11]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:369
  if(status == FLASH_COMPLETE)
 8000fce:	7afb      	ldrb	r3, [r7, #11]
 8000fd0:	2b08      	cmp	r3, #8
 8000fd2:	d12f      	bne.n	8001034 <FLASH_EraseSector+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:372
    FLASH->CR &= CR_PSIZE_MASK;
 8000fd4:	4a1a      	ldr	r2, [pc, #104]	; (8001040 <FLASH_EraseSector+0xbc>)
 8000fd6:	4b1a      	ldr	r3, [pc, #104]	; (8001040 <FLASH_EraseSector+0xbc>)
 8000fd8:	691b      	ldr	r3, [r3, #16]
 8000fda:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000fde:	6113      	str	r3, [r2, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:373
    FLASH->CR |= tmp_psize;
 8000fe0:	4917      	ldr	r1, [pc, #92]	; (8001040 <FLASH_EraseSector+0xbc>)
 8000fe2:	4b17      	ldr	r3, [pc, #92]	; (8001040 <FLASH_EraseSector+0xbc>)
 8000fe4:	691a      	ldr	r2, [r3, #16]
 8000fe6:	68fb      	ldr	r3, [r7, #12]
 8000fe8:	4313      	orrs	r3, r2
 8000fea:	610b      	str	r3, [r1, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:374
    FLASH->CR &= SECTOR_MASK;
 8000fec:	4a14      	ldr	r2, [pc, #80]	; (8001040 <FLASH_EraseSector+0xbc>)
 8000fee:	4b14      	ldr	r3, [pc, #80]	; (8001040 <FLASH_EraseSector+0xbc>)
 8000ff0:	691b      	ldr	r3, [r3, #16]
 8000ff2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8000ff6:	6113      	str	r3, [r2, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:375
    FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 8000ff8:	4911      	ldr	r1, [pc, #68]	; (8001040 <FLASH_EraseSector+0xbc>)
 8000ffa:	4b11      	ldr	r3, [pc, #68]	; (8001040 <FLASH_EraseSector+0xbc>)
 8000ffc:	691a      	ldr	r2, [r3, #16]
 8000ffe:	687b      	ldr	r3, [r7, #4]
 8001000:	4313      	orrs	r3, r2
 8001002:	f043 0302 	orr.w	r3, r3, #2
 8001006:	610b      	str	r3, [r1, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:376
    FLASH->CR |= FLASH_CR_STRT;
 8001008:	4a0d      	ldr	r2, [pc, #52]	; (8001040 <FLASH_EraseSector+0xbc>)
 800100a:	4b0d      	ldr	r3, [pc, #52]	; (8001040 <FLASH_EraseSector+0xbc>)
 800100c:	691b      	ldr	r3, [r3, #16]
 800100e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001012:	6113      	str	r3, [r2, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:379
    status = FLASH_WaitForLastOperation();
 8001014:	f7ff fa48 	bl	80004a8 <FLASH_WaitForLastOperation>
 8001018:	4603      	mov	r3, r0
 800101a:	72fb      	strb	r3, [r7, #11]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:382
    FLASH->CR &= (~FLASH_CR_SER);
 800101c:	4a08      	ldr	r2, [pc, #32]	; (8001040 <FLASH_EraseSector+0xbc>)
 800101e:	4b08      	ldr	r3, [pc, #32]	; (8001040 <FLASH_EraseSector+0xbc>)
 8001020:	691b      	ldr	r3, [r3, #16]
 8001022:	f023 0302 	bic.w	r3, r3, #2
 8001026:	6113      	str	r3, [r2, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:383
    FLASH->CR &= SECTOR_MASK; 
 8001028:	4a05      	ldr	r2, [pc, #20]	; (8001040 <FLASH_EraseSector+0xbc>)
 800102a:	4b05      	ldr	r3, [pc, #20]	; (8001040 <FLASH_EraseSector+0xbc>)
 800102c:	691b      	ldr	r3, [r3, #16]
 800102e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8001032:	6113      	str	r3, [r2, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:386
  return status;
 8001034:	7afb      	ldrb	r3, [r7, #11]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:387
}
 8001036:	4618      	mov	r0, r3
 8001038:	3710      	adds	r7, #16
 800103a:	46bd      	mov	sp, r7
 800103c:	bd80      	pop	{r7, pc}
 800103e:	bf00      	nop
 8001040:	40023c00 	.word	0x40023c00

08001044 <FLASH_ProgramHalfWord>:
FLASH_ProgramHalfWord():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:536
{
 8001044:	b580      	push	{r7, lr}
 8001046:	b084      	sub	sp, #16
 8001048:	af00      	add	r7, sp, #0
 800104a:	6078      	str	r0, [r7, #4]
 800104c:	460b      	mov	r3, r1
 800104e:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:537
  FLASH_Status status = FLASH_COMPLETE;
 8001050:	2308      	movs	r3, #8
 8001052:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:543
  status = FLASH_WaitForLastOperation();
 8001054:	f7ff fa28 	bl	80004a8 <FLASH_WaitForLastOperation>
 8001058:	4603      	mov	r3, r0
 800105a:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:545
  if(status == FLASH_COMPLETE)
 800105c:	7bfb      	ldrb	r3, [r7, #15]
 800105e:	2b08      	cmp	r3, #8
 8001060:	d11e      	bne.n	80010a0 <FLASH_ProgramHalfWord+0x5c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:548
    FLASH->CR &= CR_PSIZE_MASK;
 8001062:	4a12      	ldr	r2, [pc, #72]	; (80010ac <FLASH_ProgramHalfWord+0x68>)
 8001064:	4b11      	ldr	r3, [pc, #68]	; (80010ac <FLASH_ProgramHalfWord+0x68>)
 8001066:	691b      	ldr	r3, [r3, #16]
 8001068:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800106c:	6113      	str	r3, [r2, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:549
    FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 800106e:	4a0f      	ldr	r2, [pc, #60]	; (80010ac <FLASH_ProgramHalfWord+0x68>)
 8001070:	4b0e      	ldr	r3, [pc, #56]	; (80010ac <FLASH_ProgramHalfWord+0x68>)
 8001072:	691b      	ldr	r3, [r3, #16]
 8001074:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001078:	6113      	str	r3, [r2, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:550
    FLASH->CR |= FLASH_CR_PG;
 800107a:	4a0c      	ldr	r2, [pc, #48]	; (80010ac <FLASH_ProgramHalfWord+0x68>)
 800107c:	4b0b      	ldr	r3, [pc, #44]	; (80010ac <FLASH_ProgramHalfWord+0x68>)
 800107e:	691b      	ldr	r3, [r3, #16]
 8001080:	f043 0301 	orr.w	r3, r3, #1
 8001084:	6113      	str	r3, [r2, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:552
    *(__IO uint16_t*)Address = Data;
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	887a      	ldrh	r2, [r7, #2]
 800108a:	801a      	strh	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:555
    status = FLASH_WaitForLastOperation();
 800108c:	f7ff fa0c 	bl	80004a8 <FLASH_WaitForLastOperation>
 8001090:	4603      	mov	r3, r0
 8001092:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:558
    FLASH->CR &= (~FLASH_CR_PG);
 8001094:	4a05      	ldr	r2, [pc, #20]	; (80010ac <FLASH_ProgramHalfWord+0x68>)
 8001096:	4b05      	ldr	r3, [pc, #20]	; (80010ac <FLASH_ProgramHalfWord+0x68>)
 8001098:	691b      	ldr	r3, [r3, #16]
 800109a:	f023 0301 	bic.w	r3, r3, #1
 800109e:	6113      	str	r3, [r2, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:561
  return status;
 80010a0:	7bfb      	ldrb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/stm32f4xx_flash.c:562
}
 80010a2:	4618      	mov	r0, r3
 80010a4:	3710      	adds	r7, #16
 80010a6:	46bd      	mov	sp, r7
 80010a8:	bd80      	pop	{r7, pc}
 80010aa:	bf00      	nop
 80010ac:	40023c00 	.word	0x40023c00

080010b0 <Sterownik::gotoSafePosition()>:
gotoSafePosition():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:112



	Praca * getPraca(){ return &praca;}

	bool gotoSafePosition(){
 80010b0:	b580      	push	{r7, lr}
 80010b2:	b082      	sub	sp, #8
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:113
		dmuchawa->turnOff();
 80010b8:	687b      	ldr	r3, [r7, #4]
 80010ba:	6a1b      	ldr	r3, [r3, #32]
 80010bc:	4618      	mov	r0, r3
 80010be:	f002 f98b 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:114
		podajnik->turnOff();
 80010c2:	687b      	ldr	r3, [r7, #4]
 80010c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80010c6:	4618      	mov	r0, r3
 80010c8:	f002 f986 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:115
		pompaCO->turnOn();
 80010cc:	687b      	ldr	r3, [r7, #4]
 80010ce:	699b      	ldr	r3, [r3, #24]
 80010d0:	4618      	mov	r0, r3
 80010d2:	f002 f975 	bl	80033c0 <Silnik::turnOn()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:116
		pompaCWU->turnOn();
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	69db      	ldr	r3, [r3, #28]
 80010da:	4618      	mov	r0, r3
 80010dc:	f002 f970 	bl	80033c0 <Silnik::turnOn()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:117
		return false;
 80010e0:	2300      	movs	r3, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:118
	}
 80010e2:	4618      	mov	r0, r3
 80010e4:	3708      	adds	r7, #8
 80010e6:	46bd      	mov	sp, r7
 80010e8:	bd80      	pop	{r7, pc}

080010ea <Sterownik::setAlarmPodajnik()>:
setAlarmPodajnik():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:120

	bool setAlarmPodajnik(){
 80010ea:	b580      	push	{r7, lr}
 80010ec:	b082      	sub	sp, #8
 80010ee:	af00      	add	r7, sp, #0
 80010f0:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:121
		alarmPodajnik = true;
 80010f2:	687b      	ldr	r3, [r7, #4]
 80010f4:	2201      	movs	r2, #1
 80010f6:	701a      	strb	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:122
		gotoSafePosition();
 80010f8:	6878      	ldr	r0, [r7, #4]
 80010fa:	f7ff ffd9 	bl	80010b0 <Sterownik::gotoSafePosition()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:123
		return true;
 80010fe:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:124
	}
 8001100:	4618      	mov	r0, r3
 8001102:	3708      	adds	r7, #8
 8001104:	46bd      	mov	sp, r7
 8001106:	bd80      	pop	{r7, pc}

08001108 <Sterownik::setAlarmSpadekTemp()>:
setAlarmSpadekTemp():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:126

	bool setAlarmSpadekTemp(){
 8001108:	b580      	push	{r7, lr}
 800110a:	b082      	sub	sp, #8
 800110c:	af00      	add	r7, sp, #0
 800110e:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:127
		alarmSpadkuTemp = true;
 8001110:	687b      	ldr	r3, [r7, #4]
 8001112:	2201      	movs	r2, #1
 8001114:	705a      	strb	r2, [r3, #1]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:128
		gotoSafePosition();
 8001116:	6878      	ldr	r0, [r7, #4]
 8001118:	f7ff ffca 	bl	80010b0 <Sterownik::gotoSafePosition()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:129
		return true;
 800111c:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:130
	}
 800111e:	4618      	mov	r0, r3
 8001120:	3708      	adds	r7, #8
 8001122:	46bd      	mov	sp, r7
 8001124:	bd80      	pop	{r7, pc}
	...

08001128 <praca_callback()>:
praca_callback():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:21

Praca praca  = Praca();


/** Wywolanie metody monitor() */
void static inline praca_callback(){  praca.pracuj(); }
 8001128:	b580      	push	{r7, lr}
 800112a:	af00      	add	r7, sp, #0
 800112c:	4801      	ldr	r0, [pc, #4]	; (8001134 <praca_callback()+0xc>)
 800112e:	f002 f91e 	bl	800336e <Praca::pracuj()>
 8001132:	bd80      	pop	{r7, pc}
 8001134:	20000398 	.word	0x20000398

08001138 <Praca::pracujManual()>:
_ZN5Praca12pracujManualEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:28

// periodycznie wykonywana funkcja monitor() opakowana w aku_callback()
QuickTask pracaQtsk(QuickTask::QT_PERIODIC, praca_callback, Praca::TIME_PERIOD_PRACUJ_MS);


void Praca::pracujManual(){
 8001138:	b580      	push	{r7, lr}
 800113a:	b082      	sub	sp, #8
 800113c:	af00      	add	r7, sp, #0
 800113e:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:29
	checkAlarmy();
 8001140:	6878      	ldr	r0, [r7, #4]
 8001142:	f000 f9d3 	bl	80014ec <Praca::checkAlarmy()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:30
}
 8001146:	3708      	adds	r7, #8
 8001148:	46bd      	mov	sp, r7
 800114a:	bd80      	pop	{r7, pc}

0800114c <Praca::pracujAutomat()>:
_ZN5Praca13pracujAutomatEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:32

void Praca::pracujAutomat(){
 800114c:	b590      	push	{r4, r7, lr}
 800114e:	b085      	sub	sp, #20
 8001150:	af00      	add	r7, sp, #0
 8001152:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:33
	checkPompy();
 8001154:	6878      	ldr	r0, [r7, #4]
 8001156:	f000 f971 	bl	800143c <Praca::checkPompy()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:34
	checkAlarmy();
 800115a:	6878      	ldr	r0, [r7, #4]
 800115c:	f000 f9c6 	bl	80014ec <Praca::checkAlarmy()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:35
	switch(mode){
 8001160:	687b      	ldr	r3, [r7, #4]
 8001162:	781b      	ldrb	r3, [r3, #0]
 8001164:	2b04      	cmp	r3, #4
 8001166:	f200 80b8 	bhi.w	80012da <Praca::pracujAutomat()+0x18e>
 800116a:	a201      	add	r2, pc, #4	; (adr r2, 8001170 <Praca::pracujAutomat()+0x24>)
 800116c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001170:	08001185 	.word	0x08001185
 8001174:	080011a1 	.word	0x080011a1
 8001178:	08001227 	.word	0x08001227
 800117c:	080012db 	.word	0x080012db
 8001180:	080012b3 	.word	0x080012b3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:37
	case START:	// tylko czeka na rozpalanie
		if (isModeTimeOut()) setMode(Praca::Mode::ROZPALANIE, MODE_ROZPALANIE_MS);
 8001184:	6878      	ldr	r0, [r7, #4]
 8001186:	f002 f8d2 	bl	800332e <Praca::isModeTimeOut()>
 800118a:	4603      	mov	r3, r0
 800118c:	2b00      	cmp	r3, #0
 800118e:	f000 809d 	beq.w	80012cc <Praca::pracujAutomat()+0x180>
 8001192:	f242 7210 	movw	r2, #10000	; 0x2710
 8001196:	2101      	movs	r1, #1
 8001198:	6878      	ldr	r0, [r7, #4]
 800119a:	f000 f8a3 	bl	80012e4 <Praca::setMode(Praca::Mode, unsigned long)>
 800119e:	e09c      	b.n	80012da <Praca::pracujAutomat()+0x18e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:40
		break;
	case ROZPALANIE:	// dmuchanie i podawanie co jakis czas
		if (sterCO->getTempCO() >= Parameter::getValue(Parameter::Nazwa::TEMPERATURA_CO)){	// czy juz rozpalone?
 80011a0:	4b4f      	ldr	r3, [pc, #316]	; (80012e0 <Praca::pracujAutomat()+0x194>)
 80011a2:	681b      	ldr	r3, [r3, #0]
 80011a4:	4618      	mov	r0, r3
 80011a6:	f003 fb3b 	bl	8004820 <Sterownik::getTempCO()>
 80011aa:	4604      	mov	r4, r0
 80011ac:	2002      	movs	r0, #2
 80011ae:	f003 fa1d 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 80011b2:	4603      	mov	r3, r0
 80011b4:	429c      	cmp	r4, r3
 80011b6:	bfac      	ite	ge
 80011b8:	2301      	movge	r3, #1
 80011ba:	2300      	movlt	r3, #0
 80011bc:	b2db      	uxtb	r3, r3
 80011be:	2b00      	cmp	r3, #0
 80011c0:	d004      	beq.n	80011cc <Praca::pracujAutomat()+0x80>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:41
			setMode(PODTRZYMANIE, 0);
 80011c2:	2200      	movs	r2, #0
 80011c4:	2102      	movs	r1, #2
 80011c6:	6878      	ldr	r0, [r7, #4]
 80011c8:	f000 f88c 	bl	80012e4 <Praca::setMode(Praca::Mode, unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:43
		}
		if (isPodajnikTimeOut()){		//
 80011cc:	6878      	ldr	r0, [r7, #4]
 80011ce:	f002 f8be 	bl	800334e <Praca::isPodajnikTimeOut()>
 80011d2:	4603      	mov	r3, r0
 80011d4:	2b00      	cmp	r3, #0
 80011d6:	d07b      	beq.n	80012d0 <Praca::pracujAutomat()+0x184>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:44
			if (sterCO->podajnik->isTurnedOn()){	// koniec podawania
 80011d8:	4b41      	ldr	r3, [pc, #260]	; (80012e0 <Praca::pracujAutomat()+0x194>)
 80011da:	681b      	ldr	r3, [r3, #0]
 80011dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80011de:	4618      	mov	r0, r3
 80011e0:	f002 f906 	bl	80033f0 <Silnik::isTurnedOn()>
 80011e4:	4603      	mov	r3, r0
 80011e6:	2b00      	cmp	r3, #0
 80011e8:	d00e      	beq.n	8001208 <Praca::pracujAutomat()+0xbc>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:45
				sterCO->podajnik->turnOff();
 80011ea:	4b3d      	ldr	r3, [pc, #244]	; (80012e0 <Praca::pracujAutomat()+0x194>)
 80011ec:	681b      	ldr	r3, [r3, #0]
 80011ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80011f0:	4618      	mov	r0, r3
 80011f2:	f002 f8f1 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:46
				setPodajnikTime(Parameter::getValue(Parameter::Nazwa::PODAJNIK_PRZERWA));	// ustaw czas przerwy
 80011f6:	2006      	movs	r0, #6
 80011f8:	f003 f9f8 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 80011fc:	4603      	mov	r3, r0
 80011fe:	4619      	mov	r1, r3
 8001200:	6878      	ldr	r0, [r7, #4]
 8001202:	f002 f888 	bl	8003316 <Praca::setPodajnikTime(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:49
			}else{
				sterCO->podajnik->turnOn();
				setPodajnikTime(Parameter::getValue(Parameter::Nazwa::PODAJNIK_PRACA));	// ustaw czas podawania
 8001206:	e063      	b.n	80012d0 <Praca::pracujAutomat()+0x184>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:48
				sterCO->podajnik->turnOn();
 8001208:	4b35      	ldr	r3, [pc, #212]	; (80012e0 <Praca::pracujAutomat()+0x194>)
 800120a:	681b      	ldr	r3, [r3, #0]
 800120c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800120e:	4618      	mov	r0, r3
 8001210:	f002 f8d6 	bl	80033c0 <Silnik::turnOn()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:49
				setPodajnikTime(Parameter::getValue(Parameter::Nazwa::PODAJNIK_PRACA));	// ustaw czas podawania
 8001214:	2005      	movs	r0, #5
 8001216:	f003 f9e9 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 800121a:	4603      	mov	r3, r0
 800121c:	4619      	mov	r1, r3
 800121e:	6878      	ldr	r0, [r7, #4]
 8001220:	f002 f879 	bl	8003316 <Praca::setPodajnikTime(unsigned long)>
 8001224:	e059      	b.n	80012da <Praca::pracujAutomat()+0x18e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:54
			}
		}
		break;
	case PODTRZYMANIE:{
		int32_t tempHi = sterCO->getTempCO();
 8001226:	4b2e      	ldr	r3, [pc, #184]	; (80012e0 <Praca::pracujAutomat()+0x194>)
 8001228:	681b      	ldr	r3, [r3, #0]
 800122a:	4618      	mov	r0, r3
 800122c:	f003 faf8 	bl	8004820 <Sterownik::getTempCO()>
 8001230:	60f8      	str	r0, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:55
		int32_t tempLo = tempHi - Parameter::getValue(Parameter::Nazwa::HISTEREZA_CO_TEMP);
 8001232:	2003      	movs	r0, #3
 8001234:	f003 f9da 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 8001238:	4602      	mov	r2, r0
 800123a:	68fb      	ldr	r3, [r7, #12]
 800123c:	1a9b      	subs	r3, r3, r2
 800123e:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:56
		if ( tempLo > Parameter::getValue(Parameter::Nazwa::TEMPERATURA_CO)){
 8001240:	2002      	movs	r0, #2
 8001242:	f003 f9d3 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 8001246:	4602      	mov	r2, r0
 8001248:	68bb      	ldr	r3, [r7, #8]
 800124a:	429a      	cmp	r2, r3
 800124c:	bfb4      	ite	lt
 800124e:	2301      	movlt	r3, #1
 8001250:	2300      	movge	r3, #0
 8001252:	b2db      	uxtb	r3, r3
 8001254:	2b00      	cmp	r3, #0
 8001256:	d140      	bne.n	80012da <Praca::pracujAutomat()+0x18e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:61
			break;
		}
		// ToDo sprawdzic jak to dziala dokladnie
		// temp ponizej histerezy
		if (isPodajnikTimeOut()){		//
 8001258:	6878      	ldr	r0, [r7, #4]
 800125a:	f002 f878 	bl	800334e <Praca::isPodajnikTimeOut()>
 800125e:	4603      	mov	r3, r0
 8001260:	2b00      	cmp	r3, #0
 8001262:	d037      	beq.n	80012d4 <Praca::pracujAutomat()+0x188>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:62
			if (sterCO->podajnik->isTurnedOn()){	// koniec podawania
 8001264:	4b1e      	ldr	r3, [pc, #120]	; (80012e0 <Praca::pracujAutomat()+0x194>)
 8001266:	681b      	ldr	r3, [r3, #0]
 8001268:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800126a:	4618      	mov	r0, r3
 800126c:	f002 f8c0 	bl	80033f0 <Silnik::isTurnedOn()>
 8001270:	4603      	mov	r3, r0
 8001272:	2b00      	cmp	r3, #0
 8001274:	d00e      	beq.n	8001294 <Praca::pracujAutomat()+0x148>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:63
				sterCO->podajnik->turnOff();
 8001276:	4b1a      	ldr	r3, [pc, #104]	; (80012e0 <Praca::pracujAutomat()+0x194>)
 8001278:	681b      	ldr	r3, [r3, #0]
 800127a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800127c:	4618      	mov	r0, r3
 800127e:	f002 f8ab 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:64
				setPodajnikTime(Parameter::getValue(Parameter::Nazwa::PODTRZYMANIE_PRZERWA));	// ustaw czas przerwy
 8001282:	2009      	movs	r0, #9
 8001284:	f003 f9b2 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 8001288:	4603      	mov	r3, r0
 800128a:	4619      	mov	r1, r3
 800128c:	6878      	ldr	r0, [r7, #4]
 800128e:	f002 f842 	bl	8003316 <Praca::setPodajnikTime(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:67
			}else{
				sterCO->podajnik->turnOn();
				setPodajnikTime(Parameter::getValue(Parameter::Nazwa::PODTRZYMANIE_PRACA));	// ustaw czas podawania
 8001292:	e01f      	b.n	80012d4 <Praca::pracujAutomat()+0x188>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:66
				sterCO->podajnik->turnOn();
 8001294:	4b12      	ldr	r3, [pc, #72]	; (80012e0 <Praca::pracujAutomat()+0x194>)
 8001296:	681b      	ldr	r3, [r3, #0]
 8001298:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800129a:	4618      	mov	r0, r3
 800129c:	f002 f890 	bl	80033c0 <Silnik::turnOn()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:67
				setPodajnikTime(Parameter::getValue(Parameter::Nazwa::PODTRZYMANIE_PRACA));	// ustaw czas podawania
 80012a0:	2008      	movs	r0, #8
 80012a2:	f003 f9a3 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 80012a6:	4603      	mov	r3, r0
 80012a8:	4619      	mov	r1, r3
 80012aa:	6878      	ldr	r0, [r7, #4]
 80012ac:	f002 f833 	bl	8003316 <Praca::setPodajnikTime(unsigned long)>
 80012b0:	e013      	b.n	80012da <Praca::pracujAutomat()+0x18e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:77
	break;
	case WYGASZANIE:
		//if (isModeTimeOut()) setMode(ROZPALANIE, MODE_ROZPALANIE_MS);
		break;
	case MANUAL:
		if (isModeTimeOut()) setMode(START, MODE_START_MS);
 80012b2:	6878      	ldr	r0, [r7, #4]
 80012b4:	f002 f83b 	bl	800332e <Praca::isModeTimeOut()>
 80012b8:	4603      	mov	r3, r0
 80012ba:	2b00      	cmp	r3, #0
 80012bc:	d00c      	beq.n	80012d8 <Praca::pracujAutomat()+0x18c>
 80012be:	f242 7210 	movw	r2, #10000	; 0x2710
 80012c2:	2100      	movs	r1, #0
 80012c4:	6878      	ldr	r0, [r7, #4]
 80012c6:	f000 f80d 	bl	80012e4 <Praca::setMode(Praca::Mode, unsigned long)>
 80012ca:	e006      	b.n	80012da <Praca::pracujAutomat()+0x18e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:37
		if (isModeTimeOut()) setMode(Praca::Mode::ROZPALANIE, MODE_ROZPALANIE_MS);
 80012cc:	bf00      	nop
 80012ce:	e004      	b.n	80012da <Praca::pracujAutomat()+0x18e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:49
				setPodajnikTime(Parameter::getValue(Parameter::Nazwa::PODAJNIK_PRACA));	// ustaw czas podawania
 80012d0:	bf00      	nop
 80012d2:	e002      	b.n	80012da <Praca::pracujAutomat()+0x18e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:67
				setPodajnikTime(Parameter::getValue(Parameter::Nazwa::PODTRZYMANIE_PRACA));	// ustaw czas podawania
 80012d4:	bf00      	nop
 80012d6:	e000      	b.n	80012da <Praca::pracujAutomat()+0x18e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:77
		if (isModeTimeOut()) setMode(START, MODE_START_MS);
 80012d8:	bf00      	nop
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:82
		break;
	default:
		break;
	}
}
 80012da:	3714      	adds	r7, #20
 80012dc:	46bd      	mov	sp, r7
 80012de:	bd90      	pop	{r4, r7, pc}
 80012e0:	20000020 	.word	0x20000020

080012e4 <Praca::setMode(Praca::Mode, unsigned long)>:
setMode():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:86



void Praca::setMode(Mode nowyTryb, uint32_t timeMs){
 80012e4:	b580      	push	{r7, lr}
 80012e6:	b084      	sub	sp, #16
 80012e8:	af00      	add	r7, sp, #0
 80012ea:	60f8      	str	r0, [r7, #12]
 80012ec:	460b      	mov	r3, r1
 80012ee:	607a      	str	r2, [r7, #4]
 80012f0:	72fb      	strb	r3, [r7, #11]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:87
	mode = nowyTryb;
 80012f2:	68fb      	ldr	r3, [r7, #12]
 80012f4:	7afa      	ldrb	r2, [r7, #11]
 80012f6:	701a      	strb	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:88
	modeTimeMs = timeMs;
 80012f8:	68fb      	ldr	r3, [r7, #12]
 80012fa:	687a      	ldr	r2, [r7, #4]
 80012fc:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:90

	switch (nowyTryb){
 80012fe:	7afb      	ldrb	r3, [r7, #11]
 8001300:	2b05      	cmp	r3, #5
 8001302:	f200 8090 	bhi.w	8001426 <Praca::setMode(Praca::Mode, unsigned long)+0x142>
 8001306:	a201      	add	r2, pc, #4	; (adr r2, 800130c <Praca::setMode(Praca::Mode, unsigned long)+0x28>)
 8001308:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800130c:	08001325 	.word	0x08001325
 8001310:	08001367 	.word	0x08001367
 8001314:	08001399 	.word	0x08001399
 8001318:	080013b3 	.word	0x080013b3
 800131c:	08001431 	.word	0x08001431
 8001320:	080013e5 	.word	0x080013e5
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:92
	case START:
		sterCO->dmuchawa->turnOff();
 8001324:	4b44      	ldr	r3, [pc, #272]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 8001326:	681b      	ldr	r3, [r3, #0]
 8001328:	6a1b      	ldr	r3, [r3, #32]
 800132a:	4618      	mov	r0, r3
 800132c:	f002 f854 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:93
		sterCO->pompaCO->turnOff();
 8001330:	4b41      	ldr	r3, [pc, #260]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 8001332:	681b      	ldr	r3, [r3, #0]
 8001334:	699b      	ldr	r3, [r3, #24]
 8001336:	4618      	mov	r0, r3
 8001338:	f002 f84e 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:94
		sterCO->pompaCWU->turnOff();
 800133c:	4b3e      	ldr	r3, [pc, #248]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	69db      	ldr	r3, [r3, #28]
 8001342:	4618      	mov	r0, r3
 8001344:	f002 f848 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:95
		sterCO->podajnik->turnOff();
 8001348:	4b3b      	ldr	r3, [pc, #236]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 800134a:	681b      	ldr	r3, [r3, #0]
 800134c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800134e:	4618      	mov	r0, r3
 8001350:	f002 f842 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:96
		setDmuchawaTime(0);
 8001354:	2100      	movs	r1, #0
 8001356:	68f8      	ldr	r0, [r7, #12]
 8001358:	f001 ffd1 	bl	80032fe <Praca::setDmuchawaTime(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:97
		setPodajnikTime(0);
 800135c:	2100      	movs	r1, #0
 800135e:	68f8      	ldr	r0, [r7, #12]
 8001360:	f001 ffd9 	bl	8003316 <Praca::setPodajnikTime(unsigned long)>
 8001364:	e064      	b.n	8001430 <Praca::setMode(Praca::Mode, unsigned long)+0x14c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:100
		break;
	case ROZPALANIE:
		sterCO->dmuchawa->turnOn();
 8001366:	4b34      	ldr	r3, [pc, #208]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 8001368:	681b      	ldr	r3, [r3, #0]
 800136a:	6a1b      	ldr	r3, [r3, #32]
 800136c:	4618      	mov	r0, r3
 800136e:	f002 f827 	bl	80033c0 <Silnik::turnOn()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:101
		sterCO->pompaCO->turnOff();
 8001372:	4b31      	ldr	r3, [pc, #196]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 8001374:	681b      	ldr	r3, [r3, #0]
 8001376:	699b      	ldr	r3, [r3, #24]
 8001378:	4618      	mov	r0, r3
 800137a:	f002 f82d 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:102
		sterCO->pompaCWU->turnOff();
 800137e:	4b2e      	ldr	r3, [pc, #184]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 8001380:	681b      	ldr	r3, [r3, #0]
 8001382:	69db      	ldr	r3, [r3, #28]
 8001384:	4618      	mov	r0, r3
 8001386:	f002 f827 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:103
		sterCO->podajnik->turnOff();
 800138a:	4b2b      	ldr	r3, [pc, #172]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 800138c:	681b      	ldr	r3, [r3, #0]
 800138e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001390:	4618      	mov	r0, r3
 8001392:	f002 f821 	bl	80033d8 <Silnik::turnOff()>
 8001396:	e04b      	b.n	8001430 <Praca::setMode(Praca::Mode, unsigned long)+0x14c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:106
		break;
	case PODTRZYMANIE:
		sterCO->dmuchawa->turnOff();
 8001398:	4b27      	ldr	r3, [pc, #156]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 800139a:	681b      	ldr	r3, [r3, #0]
 800139c:	6a1b      	ldr	r3, [r3, #32]
 800139e:	4618      	mov	r0, r3
 80013a0:	f002 f81a 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:107
		sterCO->podajnik->turnOff();
 80013a4:	4b24      	ldr	r3, [pc, #144]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 80013a6:	681b      	ldr	r3, [r3, #0]
 80013a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80013aa:	4618      	mov	r0, r3
 80013ac:	f002 f814 	bl	80033d8 <Silnik::turnOff()>
 80013b0:	e03e      	b.n	8001430 <Praca::setMode(Praca::Mode, unsigned long)+0x14c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:110
		break;
	case WYGASZANIE:
		sterCO->dmuchawa->turnOff();
 80013b2:	4b21      	ldr	r3, [pc, #132]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 80013b4:	681b      	ldr	r3, [r3, #0]
 80013b6:	6a1b      	ldr	r3, [r3, #32]
 80013b8:	4618      	mov	r0, r3
 80013ba:	f002 f80d 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:111
		sterCO->podajnik->turnOff();
 80013be:	4b1e      	ldr	r3, [pc, #120]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 80013c0:	681b      	ldr	r3, [r3, #0]
 80013c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80013c4:	4618      	mov	r0, r3
 80013c6:	f002 f807 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:112
		sterCO->pompaCO->turnOn();
 80013ca:	4b1b      	ldr	r3, [pc, #108]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 80013cc:	681b      	ldr	r3, [r3, #0]
 80013ce:	699b      	ldr	r3, [r3, #24]
 80013d0:	4618      	mov	r0, r3
 80013d2:	f001 fff5 	bl	80033c0 <Silnik::turnOn()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:113
		sterCO->pompaCWU->turnOn();
 80013d6:	4b18      	ldr	r3, [pc, #96]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 80013d8:	681b      	ldr	r3, [r3, #0]
 80013da:	69db      	ldr	r3, [r3, #28]
 80013dc:	4618      	mov	r0, r3
 80013de:	f001 ffef 	bl	80033c0 <Silnik::turnOn()>
 80013e2:	e025      	b.n	8001430 <Praca::setMode(Praca::Mode, unsigned long)+0x14c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:118
		break;
	case MANUAL:
		break;
	case STOP:
		sterCO->dmuchawa->turnOff();
 80013e4:	4b14      	ldr	r3, [pc, #80]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 80013e6:	681b      	ldr	r3, [r3, #0]
 80013e8:	6a1b      	ldr	r3, [r3, #32]
 80013ea:	4618      	mov	r0, r3
 80013ec:	f001 fff4 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:119
		sterCO->pompaCO->turnOff();
 80013f0:	4b11      	ldr	r3, [pc, #68]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 80013f2:	681b      	ldr	r3, [r3, #0]
 80013f4:	699b      	ldr	r3, [r3, #24]
 80013f6:	4618      	mov	r0, r3
 80013f8:	f001 ffee 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:120
		sterCO->pompaCWU->turnOff();
 80013fc:	4b0e      	ldr	r3, [pc, #56]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 80013fe:	681b      	ldr	r3, [r3, #0]
 8001400:	69db      	ldr	r3, [r3, #28]
 8001402:	4618      	mov	r0, r3
 8001404:	f001 ffe8 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:121
		sterCO->podajnik->turnOff();
 8001408:	4b0b      	ldr	r3, [pc, #44]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 800140a:	681b      	ldr	r3, [r3, #0]
 800140c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800140e:	4618      	mov	r0, r3
 8001410:	f001 ffe2 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:122
		setDmuchawaTime(0);
 8001414:	2100      	movs	r1, #0
 8001416:	68f8      	ldr	r0, [r7, #12]
 8001418:	f001 ff71 	bl	80032fe <Praca::setDmuchawaTime(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:123
		setPodajnikTime(0);
 800141c:	2100      	movs	r1, #0
 800141e:	68f8      	ldr	r0, [r7, #12]
 8001420:	f001 ff79 	bl	8003316 <Praca::setPodajnikTime(unsigned long)>
 8001424:	e004      	b.n	8001430 <Praca::setMode(Praca::Mode, unsigned long)+0x14c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:127
		break;

	default:
		sterCO->gotoSafePosition();
 8001426:	4b04      	ldr	r3, [pc, #16]	; (8001438 <Praca::setMode(Praca::Mode, unsigned long)+0x154>)
 8001428:	681b      	ldr	r3, [r3, #0]
 800142a:	4618      	mov	r0, r3
 800142c:	f7ff fe40 	bl	80010b0 <Sterownik::gotoSafePosition()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:131
		break;

	}
}
 8001430:	3710      	adds	r7, #16
 8001432:	46bd      	mov	sp, r7
 8001434:	bd80      	pop	{r7, pc}
 8001436:	bf00      	nop
 8001438:	20000020 	.word	0x20000020

0800143c <Praca::checkPompy()>:
checkPompy():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:136

/**
 * W zaleznosci od temperatury CO i CWU wlacza/wylacza pompy z ustawiona histereza.
 */
void Praca::checkPompy(){
 800143c:	b580      	push	{r7, lr}
 800143e:	b084      	sub	sp, #16
 8001440:	af00      	add	r7, sp, #0
 8001442:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:139
	int32_t temp;
	// CO
	temp = sterCO->getTempCO();
 8001444:	4b28      	ldr	r3, [pc, #160]	; (80014e8 <Praca::checkPompy()+0xac>)
 8001446:	681b      	ldr	r3, [r3, #0]
 8001448:	4618      	mov	r0, r3
 800144a:	f003 f9e9 	bl	8004820 <Sterownik::getTempCO()>
 800144e:	60f8      	str	r0, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:140
	uint16_t par = Parameter::getValue(Parameter::Nazwa::POMPA_CO_TEMP_ZALACZ);
 8001450:	2004      	movs	r0, #4
 8001452:	f003 f8cb 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 8001456:	4603      	mov	r3, r0
 8001458:	817b      	strh	r3, [r7, #10]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:141
	if (temp >= par){
 800145a:	897a      	ldrh	r2, [r7, #10]
 800145c:	68fb      	ldr	r3, [r7, #12]
 800145e:	429a      	cmp	r2, r3
 8001460:	dc06      	bgt.n	8001470 <Praca::checkPompy()+0x34>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:142
		sterCO->pompaCO->turnOn();
 8001462:	4b21      	ldr	r3, [pc, #132]	; (80014e8 <Praca::checkPompy()+0xac>)
 8001464:	681b      	ldr	r3, [r3, #0]
 8001466:	699b      	ldr	r3, [r3, #24]
 8001468:	4618      	mov	r0, r3
 800146a:	f001 ffa9 	bl	80033c0 <Silnik::turnOn()>
 800146e:	e010      	b.n	8001492 <Praca::checkPompy()+0x56>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:144
	}else{
		temp += Parameter::getValue(Parameter::Nazwa::HISTEREZA_CO_TEMP);
 8001470:	2003      	movs	r0, #3
 8001472:	f003 f8bb 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 8001476:	4602      	mov	r2, r0
 8001478:	68fb      	ldr	r3, [r7, #12]
 800147a:	4413      	add	r3, r2
 800147c:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:145
		if (temp < par){
 800147e:	897a      	ldrh	r2, [r7, #10]
 8001480:	68fb      	ldr	r3, [r7, #12]
 8001482:	429a      	cmp	r2, r3
 8001484:	dd05      	ble.n	8001492 <Praca::checkPompy()+0x56>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:146
			sterCO->pompaCO->turnOff();
 8001486:	4b18      	ldr	r3, [pc, #96]	; (80014e8 <Praca::checkPompy()+0xac>)
 8001488:	681b      	ldr	r3, [r3, #0]
 800148a:	699b      	ldr	r3, [r3, #24]
 800148c:	4618      	mov	r0, r3
 800148e:	f001 ffa3 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:150
		}
	}
	// CWU
	temp = sterCO->getTempCWU();
 8001492:	4b15      	ldr	r3, [pc, #84]	; (80014e8 <Praca::checkPompy()+0xac>)
 8001494:	681b      	ldr	r3, [r3, #0]
 8001496:	4618      	mov	r0, r3
 8001498:	f001 ffb8 	bl	800340c <Sterownik::getTempCWU()>
 800149c:	60f8      	str	r0, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:151
	par = Parameter::getValue(Parameter::Nazwa::POMPA_CWU_TEMP_ZALACZ);
 800149e:	200e      	movs	r0, #14
 80014a0:	f003 f8a4 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 80014a4:	4603      	mov	r3, r0
 80014a6:	817b      	strh	r3, [r7, #10]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:152
	if (temp >= par){
 80014a8:	897a      	ldrh	r2, [r7, #10]
 80014aa:	68fb      	ldr	r3, [r7, #12]
 80014ac:	429a      	cmp	r2, r3
 80014ae:	dc06      	bgt.n	80014be <Praca::checkPompy()+0x82>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:153
		sterCO->pompaCWU->turnOn();
 80014b0:	4b0d      	ldr	r3, [pc, #52]	; (80014e8 <Praca::checkPompy()+0xac>)
 80014b2:	681b      	ldr	r3, [r3, #0]
 80014b4:	69db      	ldr	r3, [r3, #28]
 80014b6:	4618      	mov	r0, r3
 80014b8:	f001 ff82 	bl	80033c0 <Silnik::turnOn()>
 80014bc:	e010      	b.n	80014e0 <Praca::checkPompy()+0xa4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:155
	}else{
		temp += Parameter::getValue(Parameter::Nazwa::HISTEREZA_CWU_TEMP);
 80014be:	200f      	movs	r0, #15
 80014c0:	f003 f894 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 80014c4:	4602      	mov	r2, r0
 80014c6:	68fb      	ldr	r3, [r7, #12]
 80014c8:	4413      	add	r3, r2
 80014ca:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:156
		if (temp < par){
 80014cc:	897a      	ldrh	r2, [r7, #10]
 80014ce:	68fb      	ldr	r3, [r7, #12]
 80014d0:	429a      	cmp	r2, r3
 80014d2:	dd05      	ble.n	80014e0 <Praca::checkPompy()+0xa4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:157
			sterCO->pompaCWU->turnOff();
 80014d4:	4b04      	ldr	r3, [pc, #16]	; (80014e8 <Praca::checkPompy()+0xac>)
 80014d6:	681b      	ldr	r3, [r3, #0]
 80014d8:	69db      	ldr	r3, [r3, #28]
 80014da:	4618      	mov	r0, r3
 80014dc:	f001 ff7c 	bl	80033d8 <Silnik::turnOff()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:160
		}
	}
}
 80014e0:	3710      	adds	r7, #16
 80014e2:	46bd      	mov	sp, r7
 80014e4:	bd80      	pop	{r7, pc}
 80014e6:	bf00      	nop
 80014e8:	20000020 	.word	0x20000020

080014ec <Praca::checkAlarmy()>:
checkAlarmy():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:162

void Praca::checkAlarmy(){
 80014ec:	b580      	push	{r7, lr}
 80014ee:	b086      	sub	sp, #24
 80014f0:	af00      	add	r7, sp, #0
 80014f2:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:163
	int32_t temp = sterCO->getTempCO();
 80014f4:	4b17      	ldr	r3, [pc, #92]	; (8001554 <Praca::checkAlarmy()+0x68>)
 80014f6:	681b      	ldr	r3, [r3, #0]
 80014f8:	4618      	mov	r0, r3
 80014fa:	f003 f991 	bl	8004820 <Sterownik::getTempCO()>
 80014fe:	6178      	str	r0, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:164
	uint32_t alarmSpadku = Parameter::getValue(Parameter::Nazwa::ALARM_SPADKU_TEMP);
 8001500:	200c      	movs	r0, #12
 8001502:	f003 f873 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 8001506:	4603      	mov	r3, r0
 8001508:	613b      	str	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:165
	uint32_t alarmPodajnik = Parameter::getValue(Parameter::Nazwa::ALARM_TEMP_PODAJNIKA);
 800150a:	200d      	movs	r0, #13
 800150c:	f003 f86e 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 8001510:	4603      	mov	r3, r0
 8001512:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:166
	if ( temp > alarmPodajnik ){
 8001514:	697a      	ldr	r2, [r7, #20]
 8001516:	68fb      	ldr	r3, [r7, #12]
 8001518:	429a      	cmp	r2, r3
 800151a:	d909      	bls.n	8001530 <Praca::checkAlarmy()+0x44>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:167
		setMode(WYGASZANIE,0);
 800151c:	2200      	movs	r2, #0
 800151e:	2103      	movs	r1, #3
 8001520:	6878      	ldr	r0, [r7, #4]
 8001522:	f7ff fedf 	bl	80012e4 <Praca::setMode(Praca::Mode, unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:168
		sterCO->setAlarmPodajnik();
 8001526:	4b0b      	ldr	r3, [pc, #44]	; (8001554 <Praca::checkAlarmy()+0x68>)
 8001528:	681b      	ldr	r3, [r3, #0]
 800152a:	4618      	mov	r0, r3
 800152c:	f7ff fddd 	bl	80010ea <Sterownik::setAlarmPodajnik()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:170
	}
	if ( temp > alarmSpadku ){
 8001530:	697a      	ldr	r2, [r7, #20]
 8001532:	693b      	ldr	r3, [r7, #16]
 8001534:	429a      	cmp	r2, r3
 8001536:	d909      	bls.n	800154c <Praca::checkAlarmy()+0x60>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:171
		setMode(WYGASZANIE,0);
 8001538:	2200      	movs	r2, #0
 800153a:	2103      	movs	r1, #3
 800153c:	6878      	ldr	r0, [r7, #4]
 800153e:	f7ff fed1 	bl	80012e4 <Praca::setMode(Praca::Mode, unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:172
		sterCO->setAlarmSpadekTemp();
 8001542:	4b04      	ldr	r3, [pc, #16]	; (8001554 <Praca::checkAlarmy()+0x68>)
 8001544:	681b      	ldr	r3, [r3, #0]
 8001546:	4618      	mov	r0, r3
 8001548:	f7ff fdde 	bl	8001108 <Sterownik::setAlarmSpadekTemp()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:175
	}

}
 800154c:	3718      	adds	r7, #24
 800154e:	46bd      	mov	sp, r7
 8001550:	bd80      	pop	{r7, pc}
 8001552:	bf00      	nop
 8001554:	20000020 	.word	0x20000020

08001558 <__static_initialization_and_destruction_0(int, int)>:
__static_initialization_and_destruction_0():
 8001558:	b580      	push	{r7, lr}
 800155a:	b082      	sub	sp, #8
 800155c:	af00      	add	r7, sp, #0
 800155e:	6078      	str	r0, [r7, #4]
 8001560:	6039      	str	r1, [r7, #0]
 8001562:	687b      	ldr	r3, [r7, #4]
 8001564:	2b01      	cmp	r3, #1
 8001566:	d10d      	bne.n	8001584 <__static_initialization_and_destruction_0(int, int)+0x2c>
 8001568:	683b      	ldr	r3, [r7, #0]
 800156a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800156e:	4293      	cmp	r3, r2
 8001570:	d108      	bne.n	8001584 <__static_initialization_and_destruction_0(int, int)+0x2c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:17
Praca praca  = Praca();
 8001572:	4806      	ldr	r0, [pc, #24]	; (800158c <__static_initialization_and_destruction_0(int, int)+0x34>)
 8001574:	f001 feaa 	bl	80032cc <Praca::Praca()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:25
QuickTask pracaQtsk(QuickTask::QT_PERIODIC, praca_callback, Praca::TIME_PERIOD_PRACUJ_MS);
 8001578:	2364      	movs	r3, #100	; 0x64
 800157a:	4a05      	ldr	r2, [pc, #20]	; (8001590 <__static_initialization_and_destruction_0(int, int)+0x38>)
 800157c:	2102      	movs	r1, #2
 800157e:	4805      	ldr	r0, [pc, #20]	; (8001594 <__static_initialization_and_destruction_0(int, int)+0x3c>)
 8001580:	f000 f878 	bl	8001674 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.cpp:175
}
 8001584:	3708      	adds	r7, #8
 8001586:	46bd      	mov	sp, r7
 8001588:	bd80      	pop	{r7, pc}
 800158a:	bf00      	nop
 800158c:	20000398 	.word	0x20000398
 8001590:	08001129 	.word	0x08001129
 8001594:	200003ac 	.word	0x200003ac

08001598 <_GLOBAL__sub_I_praca>:
_GLOBAL__sub_I_praca():
 8001598:	b580      	push	{r7, lr}
 800159a:	af00      	add	r7, sp, #0
 800159c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80015a0:	2001      	movs	r0, #1
 80015a2:	f7ff ffd9 	bl	8001558 <__static_initialization_and_destruction_0(int, int)>
 80015a6:	bd80      	pop	{r7, pc}

080015a8 <QuickTask::tick(unsigned long)>:
tick():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:20
#include "QuickTask.h"

QuickTask * taskbase = 0;
volatile uint32_t QuickTask::milisCounter;

void QuickTask::tick(uint32_t milis){
 80015a8:	b480      	push	{r7}
 80015aa:	b085      	sub	sp, #20
 80015ac:	af00      	add	r7, sp, #0
 80015ae:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:21
	QuickTask::milisCounter += milis;
 80015b0:	4b17      	ldr	r3, [pc, #92]	; (8001610 <QuickTask::tick(unsigned long)+0x68>)
 80015b2:	681a      	ldr	r2, [r3, #0]
 80015b4:	687b      	ldr	r3, [r7, #4]
 80015b6:	4413      	add	r3, r2
 80015b8:	4a15      	ldr	r2, [pc, #84]	; (8001610 <QuickTask::tick(unsigned long)+0x68>)
 80015ba:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:22
	QuickTask * t = taskbase;
 80015bc:	4b15      	ldr	r3, [pc, #84]	; (8001614 <QuickTask::tick(unsigned long)+0x6c>)
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:23
	while (t != 0){
 80015c2:	68fb      	ldr	r3, [r7, #12]
 80015c4:	2b00      	cmp	r3, #0
 80015c6:	d01e      	beq.n	8001606 <QuickTask::tick(unsigned long)+0x5e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:24
		if (t->flags == QuickTask::QT_RUNNING){
 80015c8:	68fb      	ldr	r3, [r7, #12]
 80015ca:	7b5b      	ldrb	r3, [r3, #13]
 80015cc:	2b02      	cmp	r3, #2
 80015ce:	d116      	bne.n	80015fe <QuickTask::tick(unsigned long)+0x56>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:25
			if (t->timectr > milis) t->timectr -= milis;
 80015d0:	68fb      	ldr	r3, [r7, #12]
 80015d2:	681a      	ldr	r2, [r3, #0]
 80015d4:	687b      	ldr	r3, [r7, #4]
 80015d6:	429a      	cmp	r2, r3
 80015d8:	bf8c      	ite	hi
 80015da:	2301      	movhi	r3, #1
 80015dc:	2300      	movls	r3, #0
 80015de:	b2db      	uxtb	r3, r3
 80015e0:	2b00      	cmp	r3, #0
 80015e2:	d006      	beq.n	80015f2 <QuickTask::tick(unsigned long)+0x4a>
 80015e4:	68fb      	ldr	r3, [r7, #12]
 80015e6:	681a      	ldr	r2, [r3, #0]
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	1ad2      	subs	r2, r2, r3
 80015ec:	68fb      	ldr	r3, [r7, #12]
 80015ee:	601a      	str	r2, [r3, #0]
 80015f0:	e005      	b.n	80015fe <QuickTask::tick(unsigned long)+0x56>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:27
			else {
				t->flags = QuickTask::QT_STOPPED;
 80015f2:	68fb      	ldr	r3, [r7, #12]
 80015f4:	2201      	movs	r2, #1
 80015f6:	735a      	strb	r2, [r3, #13]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:28
				t->timectr = 0;
 80015f8:	68fb      	ldr	r3, [r7, #12]
 80015fa:	2200      	movs	r2, #0
 80015fc:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:31
			}
		}
		t = t->next;
 80015fe:	68fb      	ldr	r3, [r7, #12]
 8001600:	689b      	ldr	r3, [r3, #8]
 8001602:	60fb      	str	r3, [r7, #12]
 8001604:	e7dd      	b.n	80015c2 <QuickTask::tick(unsigned long)+0x1a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:33
	}
}
 8001606:	3714      	adds	r7, #20
 8001608:	46bd      	mov	sp, r7
 800160a:	bc80      	pop	{r7}
 800160c:	4770      	bx	lr
 800160e:	bf00      	nop
 8001610:	200003c4 	.word	0x200003c4
 8001614:	200003c0 	.word	0x200003c0

08001618 <QuickTask::runQuickTasks()>:
_ZN9QuickTask13runQuickTasksEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:35

void QuickTask::runQuickTasks(){
 8001618:	b580      	push	{r7, lr}
 800161a:	b082      	sub	sp, #8
 800161c:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:36
	QuickTask * tsk = taskbase;
 800161e:	4b14      	ldr	r3, [pc, #80]	; (8001670 <QuickTask::runQuickTasks()+0x58>)
 8001620:	681b      	ldr	r3, [r3, #0]
 8001622:	607b      	str	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:37
	while (tsk != nullptr){
 8001624:	687b      	ldr	r3, [r7, #4]
 8001626:	2b00      	cmp	r3, #0
 8001628:	d01e      	beq.n	8001668 <QuickTask::runQuickTasks()+0x50>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:38
		if (tsk->flags == QuickTask::QT_STOPPED){
 800162a:	687b      	ldr	r3, [r7, #4]
 800162c:	7b5b      	ldrb	r3, [r3, #13]
 800162e:	2b01      	cmp	r3, #1
 8001630:	d116      	bne.n	8001660 <QuickTask::runQuickTasks()+0x48>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:39
			switch (tsk->type){
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	7b1b      	ldrb	r3, [r3, #12]
 8001636:	2b01      	cmp	r3, #1
 8001638:	d00c      	beq.n	8001654 <QuickTask::runQuickTasks()+0x3c>
 800163a:	2b02      	cmp	r3, #2
 800163c:	d110      	bne.n	8001660 <QuickTask::runQuickTasks()+0x48>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:41
			case QuickTask::QT_PERIODIC:{
				tsk->timectr = tsk->updateValue;
 800163e:	687b      	ldr	r3, [r7, #4]
 8001640:	685a      	ldr	r2, [r3, #4]
 8001642:	687b      	ldr	r3, [r7, #4]
 8001644:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:42
				tsk->flags = QuickTask::QT_RUNNING;
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	2202      	movs	r2, #2
 800164a:	735a      	strb	r2, [r3, #13]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:43
				tsk->qCallback();// wykonanie zadania
 800164c:	687b      	ldr	r3, [r7, #4]
 800164e:	691b      	ldr	r3, [r3, #16]
 8001650:	4798      	blx	r3
 8001652:	e005      	b.n	8001660 <QuickTask::runQuickTasks()+0x48>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:48
				//t->task();
			}
				break;
			case QuickTask::QT_ONCE:{
				tsk->flags = QuickTask::QT_DISABLED;
 8001654:	687b      	ldr	r3, [r7, #4]
 8001656:	2200      	movs	r2, #0
 8001658:	735a      	strb	r2, [r3, #13]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:49
				tsk->qCallback();// wykonanie zadania
 800165a:	687b      	ldr	r3, [r7, #4]
 800165c:	691b      	ldr	r3, [r3, #16]
 800165e:	4798      	blx	r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:57
				break;
			default:
				break;
			}
		}
		tsk = tsk->next;
 8001660:	687b      	ldr	r3, [r7, #4]
 8001662:	689b      	ldr	r3, [r3, #8]
 8001664:	607b      	str	r3, [r7, #4]
 8001666:	e7dd      	b.n	8001624 <QuickTask::runQuickTasks()+0xc>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:59
	}
}
 8001668:	3708      	adds	r7, #8
 800166a:	46bd      	mov	sp, r7
 800166c:	bd80      	pop	{r7, pc}
 800166e:	bf00      	nop
 8001670:	200003c0 	.word	0x200003c0

08001674 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)>:
_ZN9QuickTaskC2ENS_6QTTypeEPFvvEm():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:61

QuickTask::QuickTask(QTType typ, void (*const task)(), const uint32_t updateMilis){
 8001674:	b480      	push	{r7}
 8001676:	b087      	sub	sp, #28
 8001678:	af00      	add	r7, sp, #0
 800167a:	60f8      	str	r0, [r7, #12]
 800167c:	607a      	str	r2, [r7, #4]
 800167e:	603b      	str	r3, [r7, #0]
 8001680:	460b      	mov	r3, r1
 8001682:	72fb      	strb	r3, [r7, #11]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:62
	flags = QT_DISABLED;
 8001684:	68fb      	ldr	r3, [r7, #12]
 8001686:	2200      	movs	r2, #0
 8001688:	735a      	strb	r2, [r3, #13]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:63
	type = typ;
 800168a:	68fb      	ldr	r3, [r7, #12]
 800168c:	7afa      	ldrb	r2, [r7, #11]
 800168e:	731a      	strb	r2, [r3, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:64
	qCallback = task;
 8001690:	68fb      	ldr	r3, [r7, #12]
 8001692:	687a      	ldr	r2, [r7, #4]
 8001694:	611a      	str	r2, [r3, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:65
	updateValue = updateMilis;
 8001696:	68fb      	ldr	r3, [r7, #12]
 8001698:	683a      	ldr	r2, [r7, #0]
 800169a:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:66
	if (taskbase == 0){	// jeszcze nie ma zadnych timemeterow, wiec ten jest pierwszy
 800169c:	4b18      	ldr	r3, [pc, #96]	; (8001700 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)+0x8c>)
 800169e:	681b      	ldr	r3, [r3, #0]
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d10a      	bne.n	80016ba <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)+0x46>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:67
		taskbase = this;
 80016a4:	4a16      	ldr	r2, [pc, #88]	; (8001700 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)+0x8c>)
 80016a6:	68fb      	ldr	r3, [r7, #12]
 80016a8:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:68
		taskbase->next = 0;
 80016aa:	4b15      	ldr	r3, [pc, #84]	; (8001700 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)+0x8c>)
 80016ac:	681b      	ldr	r3, [r3, #0]
 80016ae:	2200      	movs	r2, #0
 80016b0:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:69
		flags = QT_RUNNING;
 80016b2:	68fb      	ldr	r3, [r7, #12]
 80016b4:	2202      	movs	r2, #2
 80016b6:	735a      	strb	r2, [r3, #13]
 80016b8:	e01b      	b.n	80016f2 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)+0x7e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:73
		return;
	}

	QuickTask * tmp = taskbase;	// kolejka timemeterow
 80016ba:	4b11      	ldr	r3, [pc, #68]	; (8001700 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)+0x8c>)
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:75

	for(; tmp->next != 0; tmp = tmp->next) {
 80016c0:	697b      	ldr	r3, [r7, #20]
 80016c2:	689b      	ldr	r3, [r3, #8]
 80016c4:	2b00      	cmp	r3, #0
 80016c6:	d007      	beq.n	80016d8 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)+0x64>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:76
		if (tmp == this) return;	// jest juz w kolejce timerow
 80016c8:	697a      	ldr	r2, [r7, #20]
 80016ca:	68fb      	ldr	r3, [r7, #12]
 80016cc:	429a      	cmp	r2, r3
 80016ce:	d010      	beq.n	80016f2 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)+0x7e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:75
	for(; tmp->next != 0; tmp = tmp->next) {
 80016d0:	697b      	ldr	r3, [r7, #20]
 80016d2:	689b      	ldr	r3, [r3, #8]
 80016d4:	617b      	str	r3, [r7, #20]
 80016d6:	e7f3      	b.n	80016c0 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)+0x4c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:79
	}

	if (tmp == this) return;	// dodatkowy test dla ostatniego
 80016d8:	697a      	ldr	r2, [r7, #20]
 80016da:	68fb      	ldr	r3, [r7, #12]
 80016dc:	429a      	cmp	r2, r3
 80016de:	d008      	beq.n	80016f2 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)+0x7e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:81
	// Jednak ten timer nie jest na liscie - trzeba go dolozyc
	next = 0;
 80016e0:	68fb      	ldr	r3, [r7, #12]
 80016e2:	2200      	movs	r2, #0
 80016e4:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:82
	tmp->next = this;
 80016e6:	697b      	ldr	r3, [r7, #20]
 80016e8:	68fa      	ldr	r2, [r7, #12]
 80016ea:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:83
	flags = QT_RUNNING;
 80016ec:	68fb      	ldr	r3, [r7, #12]
 80016ee:	2202      	movs	r2, #2
 80016f0:	735a      	strb	r2, [r3, #13]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:84
}
 80016f2:	68fb      	ldr	r3, [r7, #12]
 80016f4:	4618      	mov	r0, r3
 80016f6:	371c      	adds	r7, #28
 80016f8:	46bd      	mov	sp, r7
 80016fa:	bc80      	pop	{r7}
 80016fc:	4770      	bx	lr
 80016fe:	bf00      	nop
 8001700:	200003c0 	.word	0x200003c0

08001704 <SysTick_Handler>:
SysTick_Handler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:98
//-------------------------------------------------------

#ifdef USE_HAL_DRIVER
void HAL_SYSTICK_Callback(){
#else
void SysTick_Handler(void){
 8001704:	4668      	mov	r0, sp
 8001706:	f020 0107 	bic.w	r1, r0, #7
 800170a:	468d      	mov	sp, r1
 800170c:	b589      	push	{r0, r3, r7, lr}
 800170e:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:101
#endif

	QuickTask::tick(QuickTask::DEFAULT_TICK_INTERVAL_MILIS);
 8001710:	2001      	movs	r0, #1
 8001712:	f7ff ff49 	bl	80015a8 <QuickTask::tick(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.cpp:102
}
 8001716:	46bd      	mov	sp, r7
 8001718:	e8bd 4089 	ldmia.w	sp!, {r0, r3, r7, lr}
 800171c:	4685      	mov	sp, r0
 800171e:	4770      	bx	lr

08001720 <TextLcd::print(char const*)>:
_ZN7TextLcd5printEPKc():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:43
		return driver->gotoXY(rowNr,columnNr);
	}
	bool print(char znak){
		return driver->print(znak);
	}
	bool print(const char * str){
 8001720:	b580      	push	{r7, lr}
 8001722:	b082      	sub	sp, #8
 8001724:	af00      	add	r7, sp, #0
 8001726:	6078      	str	r0, [r7, #4]
 8001728:	6039      	str	r1, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:44
		return driver->print(str);
 800172a:	687b      	ldr	r3, [r7, #4]
 800172c:	681b      	ldr	r3, [r3, #0]
 800172e:	6839      	ldr	r1, [r7, #0]
 8001730:	4618      	mov	r0, r3
 8001732:	f7ff fbb0 	bl	8000e96 <ST7032I::print(char const*)>
 8001736:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:45
	}
 8001738:	4618      	mov	r0, r3
 800173a:	3708      	adds	r7, #8
 800173c:	46bd      	mov	sp, r7
 800173e:	bd80      	pop	{r7, pc}

08001740 <TextLcd::printNumbersWithPattern(char const*, unsigned long)>:
_ZN7TextLcd23printNumbersWithPatternEPKcm():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.cpp:35

/**
 * Wyswietla liczby według wzorca
 * np.pattern= "000:00.00" i initValue=123456 wyswietli "012:34.56"
 */
bool TextLcd::printNumbersWithPattern(const char * pattern, uint32_t initValue){
 8001740:	b580      	push	{r7, lr}
 8001742:	b08a      	sub	sp, #40	; 0x28
 8001744:	af00      	add	r7, sp, #0
 8001746:	60f8      	str	r0, [r7, #12]
 8001748:	60b9      	str	r1, [r7, #8]
 800174a:	607a      	str	r2, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.cpp:37
	char bufor [20];
	my_strcpy(bufor, pattern, false);	// skopiowanie wzoru
 800174c:	f107 0314 	add.w	r3, r7, #20
 8001750:	2200      	movs	r2, #0
 8001752:	68b9      	ldr	r1, [r7, #8]
 8001754:	4618      	mov	r0, r3
 8001756:	f7ff f875 	bl	8000844 <my_strcpy>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.cpp:38
	itoaWithPattern(bufor, initValue);
 800175a:	f107 0314 	add.w	r3, r7, #20
 800175e:	6879      	ldr	r1, [r7, #4]
 8001760:	4618      	mov	r0, r3
 8001762:	f7ff f80d 	bl	8000780 <itoaWithPattern>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.cpp:39
	print(bufor);
 8001766:	f107 0314 	add.w	r3, r7, #20
 800176a:	4619      	mov	r1, r3
 800176c:	68f8      	ldr	r0, [r7, #12]
 800176e:	f7ff ffd7 	bl	8001720 <TextLcd::print(char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.cpp:40
	return true;
 8001772:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.cpp:41
}
 8001774:	4618      	mov	r0, r3
 8001776:	3728      	adds	r7, #40	; 0x28
 8001778:	46bd      	mov	sp, r7
 800177a:	bd80      	pop	{r7, pc}

0800177c <EE_Init>:
EE_Init():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:55
  * @param  None.
  * @retval - Flash error code: on write Flash error
  *         - FLASH_COMPLETE: on success
  */
uint16_t EE_Init(void)
{
 800177c:	b580      	push	{r7, lr}
 800177e:	b084      	sub	sp, #16
 8001780:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:56
  uint16_t PageStatus0 = 6, PageStatus1 = 6;
 8001782:	2306      	movs	r3, #6
 8001784:	817b      	strh	r3, [r7, #10]
 8001786:	2306      	movs	r3, #6
 8001788:	813b      	strh	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:57
  uint16_t VarIdx = 0;
 800178a:	2300      	movs	r3, #0
 800178c:	81fb      	strh	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:58
  uint16_t EepromStatus = 0, ReadStatus = 0;
 800178e:	2300      	movs	r3, #0
 8001790:	80fb      	strh	r3, [r7, #6]
 8001792:	2300      	movs	r3, #0
 8001794:	80bb      	strh	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:59
  int16_t x = -1;
 8001796:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800179a:	81bb      	strh	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:63
  uint16_t  FlashStatus;

  /* Get Page0 status */
  PageStatus0 = (*(__IO uint16_t*)PAGE0_BASE_ADDRESS);
 800179c:	4b9c      	ldr	r3, [pc, #624]	; (8001a10 <EE_Init+0x294>)
 800179e:	881b      	ldrh	r3, [r3, #0]
 80017a0:	817b      	strh	r3, [r7, #10]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:65
  /* Get Page1 status */
  PageStatus1 = (*(__IO uint16_t*)PAGE1_BASE_ADDRESS);
 80017a2:	4b9c      	ldr	r3, [pc, #624]	; (8001a14 <EE_Init+0x298>)
 80017a4:	881b      	ldrh	r3, [r3, #0]
 80017a6:	813b      	strh	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:68

  /* Check for invalid header states and repair if necessary */
  switch (PageStatus0)
 80017a8:	897b      	ldrh	r3, [r7, #10]
 80017aa:	f64e 62ee 	movw	r2, #61166	; 0xeeee
 80017ae:	4293      	cmp	r3, r2
 80017b0:	d03c      	beq.n	800182c <EE_Init+0xb0>
 80017b2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80017b6:	4293      	cmp	r3, r2
 80017b8:	d003      	beq.n	80017c2 <EE_Init+0x46>
 80017ba:	2b00      	cmp	r3, #0
 80017bc:	f000 80ab 	beq.w	8001916 <EE_Init+0x19a>
 80017c0:	e112      	b.n	80019e8 <EE_Init+0x26c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:71
  {
    case ERASED:
      if (PageStatus1 == VALID_PAGE) /* Page0 erased, Page1 valid */
 80017c2:	893b      	ldrh	r3, [r7, #8]
 80017c4:	2b00      	cmp	r3, #0
 80017c6:	d10b      	bne.n	80017e0 <EE_Init+0x64>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:74
      {
        /* Erase Page0 */
        FlashStatus = FLASH_EraseSector(PAGE0_ID,VOLTAGE_RANGE);
 80017c8:	2102      	movs	r1, #2
 80017ca:	2010      	movs	r0, #16
 80017cc:	f7ff fbda 	bl	8000f84 <FLASH_EraseSector>
 80017d0:	4603      	mov	r3, r0
 80017d2:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:76
        /* If erase operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 80017d4:	887b      	ldrh	r3, [r7, #2]
 80017d6:	2b08      	cmp	r3, #8
 80017d8:	f000 810f 	beq.w	80019fa <EE_Init+0x27e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:78
        {
          return FlashStatus;
 80017dc:	887b      	ldrh	r3, [r7, #2]
 80017de:	e112      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:81
        }
      }
      else if (PageStatus1 == RECEIVE_DATA) /* Page0 erased, Page1 receive */
 80017e0:	893b      	ldrh	r3, [r7, #8]
 80017e2:	f64e 62ee 	movw	r2, #61166	; 0xeeee
 80017e6:	4293      	cmp	r3, r2
 80017e8:	d116      	bne.n	8001818 <EE_Init+0x9c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:84
      {
        /* Erase Page0 */
        FlashStatus = FLASH_EraseSector(PAGE0_ID, VOLTAGE_RANGE);
 80017ea:	2102      	movs	r1, #2
 80017ec:	2010      	movs	r0, #16
 80017ee:	f7ff fbc9 	bl	8000f84 <FLASH_EraseSector>
 80017f2:	4603      	mov	r3, r0
 80017f4:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:86
        /* If erase operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 80017f6:	887b      	ldrh	r3, [r7, #2]
 80017f8:	2b08      	cmp	r3, #8
 80017fa:	d001      	beq.n	8001800 <EE_Init+0x84>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:88
        {
          return FlashStatus;
 80017fc:	887b      	ldrh	r3, [r7, #2]
 80017fe:	e102      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:91
        }
        /* Mark Page1 as valid */
        FlashStatus = FLASH_ProgramHalfWord(PAGE1_BASE_ADDRESS, VALID_PAGE);
 8001800:	2100      	movs	r1, #0
 8001802:	4884      	ldr	r0, [pc, #528]	; (8001a14 <EE_Init+0x298>)
 8001804:	f7ff fc1e 	bl	8001044 <FLASH_ProgramHalfWord>
 8001808:	4603      	mov	r3, r0
 800180a:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:93
        /* If program operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 800180c:	887b      	ldrh	r3, [r7, #2]
 800180e:	2b08      	cmp	r3, #8
 8001810:	f000 80f3 	beq.w	80019fa <EE_Init+0x27e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:95
        {
          return FlashStatus;
 8001814:	887b      	ldrh	r3, [r7, #2]
 8001816:	e0f6      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:101
        }
      }
      else /* First EEPROM access (Page0&1 are erased) or invalid state -> format EEPROM */
      {
        /* Erase both Page0 and Page1 and set Page0 as valid page */
        FlashStatus = EE_Format();
 8001818:	f000 f972 	bl	8001b00 <EE_Format>
 800181c:	4603      	mov	r3, r0
 800181e:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:103
        /* If erase/program operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 8001820:	887b      	ldrh	r3, [r7, #2]
 8001822:	2b08      	cmp	r3, #8
 8001824:	f000 80e9 	beq.w	80019fa <EE_Init+0x27e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:105
        {
          return FlashStatus;
 8001828:	887b      	ldrh	r3, [r7, #2]
 800182a:	e0ec      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:111
        }
      }
      break;

    case RECEIVE_DATA:
      if (PageStatus1 == VALID_PAGE) /* Page0 receive, Page1 valid */
 800182c:	893b      	ldrh	r3, [r7, #8]
 800182e:	2b00      	cmp	r3, #0
 8001830:	d14d      	bne.n	80018ce <EE_Init+0x152>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:114
      {
        /* Transfer data from Page1 to Page0 */
        for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 8001832:	2300      	movs	r3, #0
 8001834:	81fb      	strh	r3, [r7, #14]
 8001836:	e030      	b.n	800189a <EE_Init+0x11e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:116
        {
          if (( *(__IO uint16_t*)(PAGE0_BASE_ADDRESS + 6)) == VirtAddVarTab[VarIdx])
 8001838:	4b77      	ldr	r3, [pc, #476]	; (8001a18 <EE_Init+0x29c>)
 800183a:	881b      	ldrh	r3, [r3, #0]
 800183c:	b29a      	uxth	r2, r3
 800183e:	89fb      	ldrh	r3, [r7, #14]
 8001840:	4976      	ldr	r1, [pc, #472]	; (8001a1c <EE_Init+0x2a0>)
 8001842:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8001846:	429a      	cmp	r2, r3
 8001848:	d101      	bne.n	800184e <EE_Init+0xd2>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:118
          {
            x = VarIdx;
 800184a:	89fb      	ldrh	r3, [r7, #14]
 800184c:	81bb      	strh	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:120
          }
          if (VarIdx != x)
 800184e:	89fa      	ldrh	r2, [r7, #14]
 8001850:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8001854:	429a      	cmp	r2, r3
 8001856:	d01d      	beq.n	8001894 <EE_Init+0x118>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:123
          {
            /* Read the last variables' updates */
            ReadStatus = EE_ReadVariable(VirtAddVarTab[VarIdx], &DataVar);
 8001858:	89fb      	ldrh	r3, [r7, #14]
 800185a:	4a70      	ldr	r2, [pc, #448]	; (8001a1c <EE_Init+0x2a0>)
 800185c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001860:	496f      	ldr	r1, [pc, #444]	; (8001a20 <EE_Init+0x2a4>)
 8001862:	4618      	mov	r0, r3
 8001864:	f000 f8e0 	bl	8001a28 <EE_ReadVariable>
 8001868:	4603      	mov	r3, r0
 800186a:	80bb      	strh	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:125
            /* In case variable corresponding to the virtual address was found */
            if (ReadStatus != 0x1)
 800186c:	88bb      	ldrh	r3, [r7, #4]
 800186e:	2b01      	cmp	r3, #1
 8001870:	d010      	beq.n	8001894 <EE_Init+0x118>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:128
            {
              /* Transfer the variable to the Page0 */
              EepromStatus = EE_VerifyPageFullWriteVariable(VirtAddVarTab[VarIdx], DataVar);
 8001872:	89fb      	ldrh	r3, [r7, #14]
 8001874:	4a69      	ldr	r2, [pc, #420]	; (8001a1c <EE_Init+0x2a0>)
 8001876:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 800187a:	4b69      	ldr	r3, [pc, #420]	; (8001a20 <EE_Init+0x2a4>)
 800187c:	881b      	ldrh	r3, [r3, #0]
 800187e:	4619      	mov	r1, r3
 8001880:	4610      	mov	r0, r2
 8001882:	f000 f9a9 	bl	8001bd8 <EE_VerifyPageFullWriteVariable>
 8001886:	4603      	mov	r3, r0
 8001888:	80fb      	strh	r3, [r7, #6]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:130
              /* If program operation was failed, a Flash error code is returned */
              if (EepromStatus != FLASH_COMPLETE)
 800188a:	88fb      	ldrh	r3, [r7, #6]
 800188c:	2b08      	cmp	r3, #8
 800188e:	d001      	beq.n	8001894 <EE_Init+0x118>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:132
              {
                return EepromStatus;
 8001890:	88fb      	ldrh	r3, [r7, #6]
 8001892:	e0b8      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:114
        for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 8001894:	89fb      	ldrh	r3, [r7, #14]
 8001896:	3301      	adds	r3, #1
 8001898:	81fb      	strh	r3, [r7, #14]
 800189a:	89fb      	ldrh	r3, [r7, #14]
 800189c:	2b1d      	cmp	r3, #29
 800189e:	d9cb      	bls.n	8001838 <EE_Init+0xbc>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:138
              }
            }
          }
        }
        /* Mark Page0 as valid */
        FlashStatus = FLASH_ProgramHalfWord(PAGE0_BASE_ADDRESS, VALID_PAGE);
 80018a0:	2100      	movs	r1, #0
 80018a2:	485b      	ldr	r0, [pc, #364]	; (8001a10 <EE_Init+0x294>)
 80018a4:	f7ff fbce 	bl	8001044 <FLASH_ProgramHalfWord>
 80018a8:	4603      	mov	r3, r0
 80018aa:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:140
        /* If program operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 80018ac:	887b      	ldrh	r3, [r7, #2]
 80018ae:	2b08      	cmp	r3, #8
 80018b0:	d001      	beq.n	80018b6 <EE_Init+0x13a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:142
        {
          return FlashStatus;
 80018b2:	887b      	ldrh	r3, [r7, #2]
 80018b4:	e0a7      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:145
        }
        /* Erase Page1 */
        FlashStatus = FLASH_EraseSector(PAGE1_ID, VOLTAGE_RANGE);
 80018b6:	2102      	movs	r1, #2
 80018b8:	2018      	movs	r0, #24
 80018ba:	f7ff fb63 	bl	8000f84 <FLASH_EraseSector>
 80018be:	4603      	mov	r3, r0
 80018c0:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:147
        /* If erase operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 80018c2:	887b      	ldrh	r3, [r7, #2]
 80018c4:	2b08      	cmp	r3, #8
 80018c6:	f000 809a 	beq.w	80019fe <EE_Init+0x282>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:149
        {
          return FlashStatus;
 80018ca:	887b      	ldrh	r3, [r7, #2]
 80018cc:	e09b      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:152
        }
      }
      else if (PageStatus1 == ERASED) /* Page0 receive, Page1 erased */
 80018ce:	893b      	ldrh	r3, [r7, #8]
 80018d0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80018d4:	4293      	cmp	r3, r2
 80018d6:	d115      	bne.n	8001904 <EE_Init+0x188>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:155
      {
        /* Erase Page1 */
        FlashStatus = FLASH_EraseSector(PAGE1_ID, VOLTAGE_RANGE);
 80018d8:	2102      	movs	r1, #2
 80018da:	2018      	movs	r0, #24
 80018dc:	f7ff fb52 	bl	8000f84 <FLASH_EraseSector>
 80018e0:	4603      	mov	r3, r0
 80018e2:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:157
        /* If erase operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 80018e4:	887b      	ldrh	r3, [r7, #2]
 80018e6:	2b08      	cmp	r3, #8
 80018e8:	d001      	beq.n	80018ee <EE_Init+0x172>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:159
        {
          return FlashStatus;
 80018ea:	887b      	ldrh	r3, [r7, #2]
 80018ec:	e08b      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:162
        }
        /* Mark Page0 as valid */
        FlashStatus = FLASH_ProgramHalfWord(PAGE0_BASE_ADDRESS, VALID_PAGE);
 80018ee:	2100      	movs	r1, #0
 80018f0:	4847      	ldr	r0, [pc, #284]	; (8001a10 <EE_Init+0x294>)
 80018f2:	f7ff fba7 	bl	8001044 <FLASH_ProgramHalfWord>
 80018f6:	4603      	mov	r3, r0
 80018f8:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:164
        /* If program operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 80018fa:	887b      	ldrh	r3, [r7, #2]
 80018fc:	2b08      	cmp	r3, #8
 80018fe:	d07e      	beq.n	80019fe <EE_Init+0x282>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:166
        {
          return FlashStatus;
 8001900:	887b      	ldrh	r3, [r7, #2]
 8001902:	e080      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:172
        }
      }
      else /* Invalid state -> format eeprom */
      {
        /* Erase both Page0 and Page1 and set Page0 as valid page */
        FlashStatus = EE_Format();
 8001904:	f000 f8fc 	bl	8001b00 <EE_Format>
 8001908:	4603      	mov	r3, r0
 800190a:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:174
        /* If erase/program operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 800190c:	887b      	ldrh	r3, [r7, #2]
 800190e:	2b08      	cmp	r3, #8
 8001910:	d075      	beq.n	80019fe <EE_Init+0x282>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:176
        {
          return FlashStatus;
 8001912:	887b      	ldrh	r3, [r7, #2]
 8001914:	e077      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:182
        }
      }
      break;

    case VALID_PAGE:
      if (PageStatus1 == VALID_PAGE) /* Invalid state -> format eeprom */
 8001916:	893b      	ldrh	r3, [r7, #8]
 8001918:	2b00      	cmp	r3, #0
 800191a:	d108      	bne.n	800192e <EE_Init+0x1b2>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:185
      {
        /* Erase both Page0 and Page1 and set Page0 as valid page */
        FlashStatus = EE_Format();
 800191c:	f000 f8f0 	bl	8001b00 <EE_Format>
 8001920:	4603      	mov	r3, r0
 8001922:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:187
        /* If erase/program operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 8001924:	887b      	ldrh	r3, [r7, #2]
 8001926:	2b08      	cmp	r3, #8
 8001928:	d06b      	beq.n	8001a02 <EE_Init+0x286>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:189
        {
          return FlashStatus;
 800192a:	887b      	ldrh	r3, [r7, #2]
 800192c:	e06b      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:192
        }
      }
      else if (PageStatus1 == ERASED) /* Page0 valid, Page1 erased */
 800192e:	893b      	ldrh	r3, [r7, #8]
 8001930:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001934:	4293      	cmp	r3, r2
 8001936:	d10a      	bne.n	800194e <EE_Init+0x1d2>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:195
      {
        /* Erase Page1 */
        FlashStatus = FLASH_EraseSector(PAGE1_ID, VOLTAGE_RANGE);
 8001938:	2102      	movs	r1, #2
 800193a:	2018      	movs	r0, #24
 800193c:	f7ff fb22 	bl	8000f84 <FLASH_EraseSector>
 8001940:	4603      	mov	r3, r0
 8001942:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:197
        /* If erase operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 8001944:	887b      	ldrh	r3, [r7, #2]
 8001946:	2b08      	cmp	r3, #8
 8001948:	d05b      	beq.n	8001a02 <EE_Init+0x286>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:199
        {
          return FlashStatus;
 800194a:	887b      	ldrh	r3, [r7, #2]
 800194c:	e05b      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:205
        }
      }
      else /* Page0 valid, Page1 receive */
      {
        /* Transfer data from Page0 to Page1 */
        for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 800194e:	2300      	movs	r3, #0
 8001950:	81fb      	strh	r3, [r7, #14]
 8001952:	e030      	b.n	80019b6 <EE_Init+0x23a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:207
        {
          if ((*(__IO uint16_t*)(PAGE1_BASE_ADDRESS + 6)) == VirtAddVarTab[VarIdx])
 8001954:	4b33      	ldr	r3, [pc, #204]	; (8001a24 <EE_Init+0x2a8>)
 8001956:	881b      	ldrh	r3, [r3, #0]
 8001958:	b29a      	uxth	r2, r3
 800195a:	89fb      	ldrh	r3, [r7, #14]
 800195c:	492f      	ldr	r1, [pc, #188]	; (8001a1c <EE_Init+0x2a0>)
 800195e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8001962:	429a      	cmp	r2, r3
 8001964:	d101      	bne.n	800196a <EE_Init+0x1ee>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:209
          {
            x = VarIdx;
 8001966:	89fb      	ldrh	r3, [r7, #14]
 8001968:	81bb      	strh	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:211
          }
          if (VarIdx != x)
 800196a:	89fa      	ldrh	r2, [r7, #14]
 800196c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8001970:	429a      	cmp	r2, r3
 8001972:	d01d      	beq.n	80019b0 <EE_Init+0x234>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:214
          {
            /* Read the last variables' updates */
            ReadStatus = EE_ReadVariable(VirtAddVarTab[VarIdx], &DataVar);
 8001974:	89fb      	ldrh	r3, [r7, #14]
 8001976:	4a29      	ldr	r2, [pc, #164]	; (8001a1c <EE_Init+0x2a0>)
 8001978:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800197c:	4928      	ldr	r1, [pc, #160]	; (8001a20 <EE_Init+0x2a4>)
 800197e:	4618      	mov	r0, r3
 8001980:	f000 f852 	bl	8001a28 <EE_ReadVariable>
 8001984:	4603      	mov	r3, r0
 8001986:	80bb      	strh	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:216
            /* In case variable corresponding to the virtual address was found */
            if (ReadStatus != 0x1)
 8001988:	88bb      	ldrh	r3, [r7, #4]
 800198a:	2b01      	cmp	r3, #1
 800198c:	d010      	beq.n	80019b0 <EE_Init+0x234>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:219
            {
              /* Transfer the variable to the Page1 */
              EepromStatus = EE_VerifyPageFullWriteVariable(VirtAddVarTab[VarIdx], DataVar);
 800198e:	89fb      	ldrh	r3, [r7, #14]
 8001990:	4a22      	ldr	r2, [pc, #136]	; (8001a1c <EE_Init+0x2a0>)
 8001992:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8001996:	4b22      	ldr	r3, [pc, #136]	; (8001a20 <EE_Init+0x2a4>)
 8001998:	881b      	ldrh	r3, [r3, #0]
 800199a:	4619      	mov	r1, r3
 800199c:	4610      	mov	r0, r2
 800199e:	f000 f91b 	bl	8001bd8 <EE_VerifyPageFullWriteVariable>
 80019a2:	4603      	mov	r3, r0
 80019a4:	80fb      	strh	r3, [r7, #6]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:221
              /* If program operation was failed, a Flash error code is returned */
              if (EepromStatus != FLASH_COMPLETE)
 80019a6:	88fb      	ldrh	r3, [r7, #6]
 80019a8:	2b08      	cmp	r3, #8
 80019aa:	d001      	beq.n	80019b0 <EE_Init+0x234>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:223
              {
                return EepromStatus;
 80019ac:	88fb      	ldrh	r3, [r7, #6]
 80019ae:	e02a      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:205
        for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 80019b0:	89fb      	ldrh	r3, [r7, #14]
 80019b2:	3301      	adds	r3, #1
 80019b4:	81fb      	strh	r3, [r7, #14]
 80019b6:	89fb      	ldrh	r3, [r7, #14]
 80019b8:	2b1d      	cmp	r3, #29
 80019ba:	d9cb      	bls.n	8001954 <EE_Init+0x1d8>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:229
              }
            }
          }
        }
        /* Mark Page1 as valid */
        FlashStatus = FLASH_ProgramHalfWord(PAGE1_BASE_ADDRESS, VALID_PAGE);
 80019bc:	2100      	movs	r1, #0
 80019be:	4815      	ldr	r0, [pc, #84]	; (8001a14 <EE_Init+0x298>)
 80019c0:	f7ff fb40 	bl	8001044 <FLASH_ProgramHalfWord>
 80019c4:	4603      	mov	r3, r0
 80019c6:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:231
        /* If program operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 80019c8:	887b      	ldrh	r3, [r7, #2]
 80019ca:	2b08      	cmp	r3, #8
 80019cc:	d001      	beq.n	80019d2 <EE_Init+0x256>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:233
        {
          return FlashStatus;
 80019ce:	887b      	ldrh	r3, [r7, #2]
 80019d0:	e019      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:236
        }
        /* Erase Page0 */
        FlashStatus = FLASH_EraseSector(PAGE0_ID, VOLTAGE_RANGE);
 80019d2:	2102      	movs	r1, #2
 80019d4:	2010      	movs	r0, #16
 80019d6:	f7ff fad5 	bl	8000f84 <FLASH_EraseSector>
 80019da:	4603      	mov	r3, r0
 80019dc:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:238
        /* If erase operation was failed, a Flash error code is returned */
        if (FlashStatus != FLASH_COMPLETE)
 80019de:	887b      	ldrh	r3, [r7, #2]
 80019e0:	2b08      	cmp	r3, #8
 80019e2:	d00e      	beq.n	8001a02 <EE_Init+0x286>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:240
        {
          return FlashStatus;
 80019e4:	887b      	ldrh	r3, [r7, #2]
 80019e6:	e00e      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:247
      }
      break;

    default:  /* Any other state -> format eeprom */
      /* Erase both Page0 and Page1 and set Page0 as valid page */
      FlashStatus = EE_Format();
 80019e8:	f000 f88a 	bl	8001b00 <EE_Format>
 80019ec:	4603      	mov	r3, r0
 80019ee:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:249
      /* If erase/program operation was failed, a Flash error code is returned */
      if (FlashStatus != FLASH_COMPLETE)
 80019f0:	887b      	ldrh	r3, [r7, #2]
 80019f2:	2b08      	cmp	r3, #8
 80019f4:	d006      	beq.n	8001a04 <EE_Init+0x288>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:251
      {
        return FlashStatus;
 80019f6:	887b      	ldrh	r3, [r7, #2]
 80019f8:	e005      	b.n	8001a06 <EE_Init+0x28a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:105
          return FlashStatus;
 80019fa:	bf00      	nop
 80019fc:	e002      	b.n	8001a04 <EE_Init+0x288>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:176
          return FlashStatus;
 80019fe:	bf00      	nop
 8001a00:	e000      	b.n	8001a04 <EE_Init+0x288>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:240
          return FlashStatus;
 8001a02:	bf00      	nop
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:256
      }
      break;
  }

  return FLASH_COMPLETE;
 8001a04:	2308      	movs	r3, #8
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:257
}
 8001a06:	4618      	mov	r0, r3
 8001a08:	3710      	adds	r7, #16
 8001a0a:	46bd      	mov	sp, r7
 8001a0c:	bd80      	pop	{r7, pc}
 8001a0e:	bf00      	nop
 8001a10:	08008000 	.word	0x08008000
 8001a14:	0800c000 	.word	0x0800c000
 8001a18:	08008006 	.word	0x08008006
 8001a1c:	20000328 	.word	0x20000328
 8001a20:	200003c8 	.word	0x200003c8
 8001a24:	0800c006 	.word	0x0800c006

08001a28 <EE_ReadVariable>:
EE_ReadVariable():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:270
  *           - 0: if variable was found
  *           - 1: if the variable was not found
  *           - NO_VALID_PAGE: if no valid page was found.
  */
uint16_t EE_ReadVariable(uint16_t VirtAddress, uint16_t* Data)
{
 8001a28:	b580      	push	{r7, lr}
 8001a2a:	b086      	sub	sp, #24
 8001a2c:	af00      	add	r7, sp, #0
 8001a2e:	4603      	mov	r3, r0
 8001a30:	6039      	str	r1, [r7, #0]
 8001a32:	80fb      	strh	r3, [r7, #6]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:271
  uint16_t ValidPage = PAGE0;
 8001a34:	2300      	movs	r3, #0
 8001a36:	81fb      	strh	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:272
  uint16_t AddressValue = 0x5555, ReadStatus = 1;
 8001a38:	f245 5355 	movw	r3, #21845	; 0x5555
 8001a3c:	81bb      	strh	r3, [r7, #12]
 8001a3e:	2301      	movs	r3, #1
 8001a40:	82fb      	strh	r3, [r7, #22]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:273
  uint32_t Address = EEPROM_START_ADDRESS, PageStartAddress = EEPROM_START_ADDRESS;
 8001a42:	4b1c      	ldr	r3, [pc, #112]	; (8001ab4 <EE_ReadVariable+0x8c>)
 8001a44:	613b      	str	r3, [r7, #16]
 8001a46:	4b1b      	ldr	r3, [pc, #108]	; (8001ab4 <EE_ReadVariable+0x8c>)
 8001a48:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:276

  /* Get active Page for read operation */
  ValidPage = EE_FindValidPage(READ_FROM_VALID_PAGE);
 8001a4a:	2000      	movs	r0, #0
 8001a4c:	f000 f880 	bl	8001b50 <EE_FindValidPage>
 8001a50:	4603      	mov	r3, r0
 8001a52:	81fb      	strh	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:279

  /* Check if there is no valid page */
  if (ValidPage == NO_VALID_PAGE)
 8001a54:	89fb      	ldrh	r3, [r7, #14]
 8001a56:	2bab      	cmp	r3, #171	; 0xab
 8001a58:	d101      	bne.n	8001a5e <EE_ReadVariable+0x36>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:281
  {
    return  NO_VALID_PAGE;
 8001a5a:	23ab      	movs	r3, #171	; 0xab
 8001a5c:	e025      	b.n	8001aaa <EE_ReadVariable+0x82>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:285
  }

  /* Get the valid Page start Address */
  PageStartAddress = (uint32_t)(EEPROM_START_ADDRESS + (uint32_t)(ValidPage * PAGE_SIZE));
 8001a5e:	89fb      	ldrh	r3, [r7, #14]
 8001a60:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8001a64:	3302      	adds	r3, #2
 8001a66:	039b      	lsls	r3, r3, #14
 8001a68:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:288

  /* Get the valid Page end Address */
  Address = (uint32_t)((EEPROM_START_ADDRESS - 2) + (uint32_t)((1 + ValidPage) * PAGE_SIZE));
 8001a6a:	89fb      	ldrh	r3, [r7, #14]
 8001a6c:	3301      	adds	r3, #1
 8001a6e:	039a      	lsls	r2, r3, #14
 8001a70:	4b11      	ldr	r3, [pc, #68]	; (8001ab8 <EE_ReadVariable+0x90>)
 8001a72:	4413      	add	r3, r2
 8001a74:	613b      	str	r3, [r7, #16]
 8001a76:	e012      	b.n	8001a9e <EE_ReadVariable+0x76>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:294

  /* Check each active page address starting from end */
  while (Address > (PageStartAddress + 2))
  {
    /* Get the current location content to be compared with virtual address */
    AddressValue = (*(__IO uint16_t*)Address);
 8001a78:	693b      	ldr	r3, [r7, #16]
 8001a7a:	881b      	ldrh	r3, [r3, #0]
 8001a7c:	81bb      	strh	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:297

    /* Compare the read address with the virtual address */
    if (AddressValue == VirtAddress)
 8001a7e:	89ba      	ldrh	r2, [r7, #12]
 8001a80:	88fb      	ldrh	r3, [r7, #6]
 8001a82:	429a      	cmp	r2, r3
 8001a84:	d108      	bne.n	8001a98 <EE_ReadVariable+0x70>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:300
    {
      /* Get content of Address-2 which is variable value */
      *Data = (*(__IO uint16_t*)(Address - 2));
 8001a86:	693b      	ldr	r3, [r7, #16]
 8001a88:	3b02      	subs	r3, #2
 8001a8a:	881b      	ldrh	r3, [r3, #0]
 8001a8c:	b29a      	uxth	r2, r3
 8001a8e:	683b      	ldr	r3, [r7, #0]
 8001a90:	801a      	strh	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:303

      /* In case variable value is read, reset ReadStatus flag */
      ReadStatus = 0;
 8001a92:	2300      	movs	r3, #0
 8001a94:	82fb      	strh	r3, [r7, #22]
 8001a96:	e007      	b.n	8001aa8 <EE_ReadVariable+0x80>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:310
      break;
    }
    else
    {
      /* Next address location */
      Address = Address - 4;
 8001a98:	693b      	ldr	r3, [r7, #16]
 8001a9a:	3b04      	subs	r3, #4
 8001a9c:	613b      	str	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:291
  while (Address > (PageStartAddress + 2))
 8001a9e:	68bb      	ldr	r3, [r7, #8]
 8001aa0:	1c9a      	adds	r2, r3, #2
 8001aa2:	693b      	ldr	r3, [r7, #16]
 8001aa4:	429a      	cmp	r2, r3
 8001aa6:	d3e7      	bcc.n	8001a78 <EE_ReadVariable+0x50>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:315
    }
  }

  /* Return ReadStatus value: (0: variable exist, 1: variable doesn't exist) */
  return ReadStatus;
 8001aa8:	8afb      	ldrh	r3, [r7, #22]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:316
}
 8001aaa:	4618      	mov	r0, r3
 8001aac:	3718      	adds	r7, #24
 8001aae:	46bd      	mov	sp, r7
 8001ab0:	bd80      	pop	{r7, pc}
 8001ab2:	bf00      	nop
 8001ab4:	08008000 	.word	0x08008000
 8001ab8:	08007ffe 	.word	0x08007ffe

08001abc <EE_WriteVariable>:
EE_WriteVariable():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:329
  *           - PAGE_FULL: if valid page is full
  *           - NO_VALID_PAGE: if no valid page was found
  *           - Flash error code: on write Flash error
  */
uint16_t EE_WriteVariable(uint16_t VirtAddress, uint16_t Data)
{
 8001abc:	b580      	push	{r7, lr}
 8001abe:	b084      	sub	sp, #16
 8001ac0:	af00      	add	r7, sp, #0
 8001ac2:	4603      	mov	r3, r0
 8001ac4:	460a      	mov	r2, r1
 8001ac6:	80fb      	strh	r3, [r7, #6]
 8001ac8:	4613      	mov	r3, r2
 8001aca:	80bb      	strh	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:330
  uint16_t Status = 0;
 8001acc:	2300      	movs	r3, #0
 8001ace:	81fb      	strh	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:333

  /* Write the variable virtual address and value in the EEPROM */
  Status = EE_VerifyPageFullWriteVariable(VirtAddress, Data);
 8001ad0:	88ba      	ldrh	r2, [r7, #4]
 8001ad2:	88fb      	ldrh	r3, [r7, #6]
 8001ad4:	4611      	mov	r1, r2
 8001ad6:	4618      	mov	r0, r3
 8001ad8:	f000 f87e 	bl	8001bd8 <EE_VerifyPageFullWriteVariable>
 8001adc:	4603      	mov	r3, r0
 8001ade:	81fb      	strh	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:336

  /* In case the EEPROM active page is full */
  if (Status == PAGE_FULL)
 8001ae0:	89fb      	ldrh	r3, [r7, #14]
 8001ae2:	2b80      	cmp	r3, #128	; 0x80
 8001ae4:	d107      	bne.n	8001af6 <EE_WriteVariable+0x3a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:339
  {
    /* Perform Page transfer */
    Status = EE_PageTransfer(VirtAddress, Data);
 8001ae6:	88ba      	ldrh	r2, [r7, #4]
 8001ae8:	88fb      	ldrh	r3, [r7, #6]
 8001aea:	4611      	mov	r1, r2
 8001aec:	4618      	mov	r0, r3
 8001aee:	f000 f8cb 	bl	8001c88 <EE_PageTransfer>
 8001af2:	4603      	mov	r3, r0
 8001af4:	81fb      	strh	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:343
  }

  /* Return last operation status */
  return Status;
 8001af6:	89fb      	ldrh	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:344
}
 8001af8:	4618      	mov	r0, r3
 8001afa:	3710      	adds	r7, #16
 8001afc:	46bd      	mov	sp, r7
 8001afe:	bd80      	pop	{r7, pc}

08001b00 <EE_Format>:
EE_Format():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:353
  * @param  None
  * @retval Status of the last operation (Flash write or erase) done during
  *         EEPROM formating
  */
static FLASH_Status EE_Format(void)
{
 8001b00:	b580      	push	{r7, lr}
 8001b02:	b082      	sub	sp, #8
 8001b04:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:354
  FLASH_Status FlashStatus = FLASH_COMPLETE;
 8001b06:	2308      	movs	r3, #8
 8001b08:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:357

  /* Erase Page0 */
  FlashStatus = FLASH_EraseSector(PAGE0_ID, VOLTAGE_RANGE);
 8001b0a:	2102      	movs	r1, #2
 8001b0c:	2010      	movs	r0, #16
 8001b0e:	f7ff fa39 	bl	8000f84 <FLASH_EraseSector>
 8001b12:	4603      	mov	r3, r0
 8001b14:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:360

  /* If erase operation was failed, a Flash error code is returned */
  if (FlashStatus != FLASH_COMPLETE)
 8001b16:	79fb      	ldrb	r3, [r7, #7]
 8001b18:	2b08      	cmp	r3, #8
 8001b1a:	d001      	beq.n	8001b20 <EE_Format+0x20>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:362
  {
    return FlashStatus;
 8001b1c:	79fb      	ldrb	r3, [r7, #7]
 8001b1e:	e011      	b.n	8001b44 <EE_Format+0x44>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:366
  }

  /* Set Page0 as valid page: Write VALID_PAGE at Page0 base address */
  FlashStatus = FLASH_ProgramHalfWord(PAGE0_BASE_ADDRESS, VALID_PAGE);
 8001b20:	2100      	movs	r1, #0
 8001b22:	480a      	ldr	r0, [pc, #40]	; (8001b4c <EE_Format+0x4c>)
 8001b24:	f7ff fa8e 	bl	8001044 <FLASH_ProgramHalfWord>
 8001b28:	4603      	mov	r3, r0
 8001b2a:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:369

  /* If program operation was failed, a Flash error code is returned */
  if (FlashStatus != FLASH_COMPLETE)
 8001b2c:	79fb      	ldrb	r3, [r7, #7]
 8001b2e:	2b08      	cmp	r3, #8
 8001b30:	d001      	beq.n	8001b36 <EE_Format+0x36>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:371
  {
    return FlashStatus;
 8001b32:	79fb      	ldrb	r3, [r7, #7]
 8001b34:	e006      	b.n	8001b44 <EE_Format+0x44>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:375
  }

  /* Erase Page1 */
  FlashStatus = FLASH_EraseSector(PAGE1_ID, VOLTAGE_RANGE);
 8001b36:	2102      	movs	r1, #2
 8001b38:	2018      	movs	r0, #24
 8001b3a:	f7ff fa23 	bl	8000f84 <FLASH_EraseSector>
 8001b3e:	4603      	mov	r3, r0
 8001b40:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:378

  /* Return Page1 erase operation status */
  return FlashStatus;
 8001b42:	79fb      	ldrb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:379
}
 8001b44:	4618      	mov	r0, r3
 8001b46:	3708      	adds	r7, #8
 8001b48:	46bd      	mov	sp, r7
 8001b4a:	bd80      	pop	{r7, pc}
 8001b4c:	08008000 	.word	0x08008000

08001b50 <EE_FindValidPage>:
EE_FindValidPage():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:391
  *     @arg WRITE_IN_VALID_PAGE: write operation from valid page
  * @retval Valid page number (PAGE or PAGE1) or NO_VALID_PAGE in case
  *   of no valid page was found
  */
static uint16_t EE_FindValidPage(uint8_t Operation)
{
 8001b50:	b480      	push	{r7}
 8001b52:	b085      	sub	sp, #20
 8001b54:	af00      	add	r7, sp, #0
 8001b56:	4603      	mov	r3, r0
 8001b58:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:392
  uint16_t PageStatus0 = 6, PageStatus1 = 6;
 8001b5a:	2306      	movs	r3, #6
 8001b5c:	81fb      	strh	r3, [r7, #14]
 8001b5e:	2306      	movs	r3, #6
 8001b60:	81bb      	strh	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:395

  /* Get Page0 actual status */
  PageStatus0 = (*(__IO uint16_t*)PAGE0_BASE_ADDRESS);
 8001b62:	4b1b      	ldr	r3, [pc, #108]	; (8001bd0 <EE_FindValidPage+0x80>)
 8001b64:	881b      	ldrh	r3, [r3, #0]
 8001b66:	81fb      	strh	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:398

  /* Get Page1 actual status */
  PageStatus1 = (*(__IO uint16_t*)PAGE1_BASE_ADDRESS);
 8001b68:	4b1a      	ldr	r3, [pc, #104]	; (8001bd4 <EE_FindValidPage+0x84>)
 8001b6a:	881b      	ldrh	r3, [r3, #0]
 8001b6c:	81bb      	strh	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:401

  /* Write or read operation */
  switch (Operation)
 8001b6e:	79fb      	ldrb	r3, [r7, #7]
 8001b70:	2b00      	cmp	r3, #0
 8001b72:	d01b      	beq.n	8001bac <EE_FindValidPage+0x5c>
 8001b74:	2b01      	cmp	r3, #1
 8001b76:	d125      	bne.n	8001bc4 <EE_FindValidPage+0x74>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:404
  {
    case WRITE_IN_VALID_PAGE:   /* ---- Write operation ---- */
      if (PageStatus1 == VALID_PAGE)
 8001b78:	89bb      	ldrh	r3, [r7, #12]
 8001b7a:	2b00      	cmp	r3, #0
 8001b7c:	d108      	bne.n	8001b90 <EE_FindValidPage+0x40>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:407
      {
        /* Page0 receiving data */
        if (PageStatus0 == RECEIVE_DATA)
 8001b7e:	89fb      	ldrh	r3, [r7, #14]
 8001b80:	f64e 62ee 	movw	r2, #61166	; 0xeeee
 8001b84:	4293      	cmp	r3, r2
 8001b86:	d101      	bne.n	8001b8c <EE_FindValidPage+0x3c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:409
        {
          return PAGE0;         /* Page0 valid */
 8001b88:	2300      	movs	r3, #0
 8001b8a:	e01c      	b.n	8001bc6 <EE_FindValidPage+0x76>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:413
        }
        else
        {
          return PAGE1;         /* Page1 valid */
 8001b8c:	2301      	movs	r3, #1
 8001b8e:	e01a      	b.n	8001bc6 <EE_FindValidPage+0x76>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:416
        }
      }
      else if (PageStatus0 == VALID_PAGE)
 8001b90:	89fb      	ldrh	r3, [r7, #14]
 8001b92:	2b00      	cmp	r3, #0
 8001b94:	d108      	bne.n	8001ba8 <EE_FindValidPage+0x58>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:419
      {
        /* Page1 receiving data */
        if (PageStatus1 == RECEIVE_DATA)
 8001b96:	89bb      	ldrh	r3, [r7, #12]
 8001b98:	f64e 62ee 	movw	r2, #61166	; 0xeeee
 8001b9c:	4293      	cmp	r3, r2
 8001b9e:	d101      	bne.n	8001ba4 <EE_FindValidPage+0x54>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:421
        {
          return PAGE1;         /* Page1 valid */
 8001ba0:	2301      	movs	r3, #1
 8001ba2:	e010      	b.n	8001bc6 <EE_FindValidPage+0x76>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:425
        }
        else
        {
          return PAGE0;         /* Page0 valid */
 8001ba4:	2300      	movs	r3, #0
 8001ba6:	e00e      	b.n	8001bc6 <EE_FindValidPage+0x76>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:430
        }
      }
      else
      {
        return NO_VALID_PAGE;   /* No valid Page */
 8001ba8:	23ab      	movs	r3, #171	; 0xab
 8001baa:	e00c      	b.n	8001bc6 <EE_FindValidPage+0x76>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:434
      }

    case READ_FROM_VALID_PAGE:  /* ---- Read operation ---- */
      if (PageStatus0 == VALID_PAGE)
 8001bac:	89fb      	ldrh	r3, [r7, #14]
 8001bae:	2b00      	cmp	r3, #0
 8001bb0:	d101      	bne.n	8001bb6 <EE_FindValidPage+0x66>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:436
      {
        return PAGE0;           /* Page0 valid */
 8001bb2:	2300      	movs	r3, #0
 8001bb4:	e007      	b.n	8001bc6 <EE_FindValidPage+0x76>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:438
      }
      else if (PageStatus1 == VALID_PAGE)
 8001bb6:	89bb      	ldrh	r3, [r7, #12]
 8001bb8:	2b00      	cmp	r3, #0
 8001bba:	d101      	bne.n	8001bc0 <EE_FindValidPage+0x70>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:440
      {
        return PAGE1;           /* Page1 valid */
 8001bbc:	2301      	movs	r3, #1
 8001bbe:	e002      	b.n	8001bc6 <EE_FindValidPage+0x76>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:444
      }
      else
      {
        return NO_VALID_PAGE ;  /* No valid Page */
 8001bc0:	23ab      	movs	r3, #171	; 0xab
 8001bc2:	e000      	b.n	8001bc6 <EE_FindValidPage+0x76>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:448
      }

    default:
      return PAGE0;             /* Page0 valid */
 8001bc4:	2300      	movs	r3, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:450
  }
}
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	3714      	adds	r7, #20
 8001bca:	46bd      	mov	sp, r7
 8001bcc:	bc80      	pop	{r7}
 8001bce:	4770      	bx	lr
 8001bd0:	08008000 	.word	0x08008000
 8001bd4:	0800c000 	.word	0x0800c000

08001bd8 <EE_VerifyPageFullWriteVariable>:
EE_VerifyPageFullWriteVariable():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:463
  *           - PAGE_FULL: if valid page is full
  *           - NO_VALID_PAGE: if no valid page was found
  *           - Flash error code: on write Flash error
  */
static uint16_t EE_VerifyPageFullWriteVariable(uint16_t VirtAddress, uint16_t Data)
{
 8001bd8:	b580      	push	{r7, lr}
 8001bda:	b086      	sub	sp, #24
 8001bdc:	af00      	add	r7, sp, #0
 8001bde:	4603      	mov	r3, r0
 8001be0:	460a      	mov	r2, r1
 8001be2:	80fb      	strh	r3, [r7, #6]
 8001be4:	4613      	mov	r3, r2
 8001be6:	80bb      	strh	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:464
  FLASH_Status FlashStatus = FLASH_COMPLETE;
 8001be8:	2308      	movs	r3, #8
 8001bea:	74fb      	strb	r3, [r7, #19]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:465
  uint16_t ValidPage = PAGE0;
 8001bec:	2300      	movs	r3, #0
 8001bee:	823b      	strh	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:466
  uint32_t Address = EEPROM_START_ADDRESS, PageEndAddress = EEPROM_START_ADDRESS+PAGE_SIZE;
 8001bf0:	4b22      	ldr	r3, [pc, #136]	; (8001c7c <EE_VerifyPageFullWriteVariable+0xa4>)
 8001bf2:	617b      	str	r3, [r7, #20]
 8001bf4:	4b22      	ldr	r3, [pc, #136]	; (8001c80 <EE_VerifyPageFullWriteVariable+0xa8>)
 8001bf6:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:469

  /* Get valid Page for write operation */
  ValidPage = EE_FindValidPage(WRITE_IN_VALID_PAGE);
 8001bf8:	2001      	movs	r0, #1
 8001bfa:	f7ff ffa9 	bl	8001b50 <EE_FindValidPage>
 8001bfe:	4603      	mov	r3, r0
 8001c00:	823b      	strh	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:472

  /* Check if there is no valid page */
  if (ValidPage == NO_VALID_PAGE)
 8001c02:	8a3b      	ldrh	r3, [r7, #16]
 8001c04:	2bab      	cmp	r3, #171	; 0xab
 8001c06:	d101      	bne.n	8001c0c <EE_VerifyPageFullWriteVariable+0x34>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:474
  {
    return  NO_VALID_PAGE;
 8001c08:	23ab      	movs	r3, #171	; 0xab
 8001c0a:	e032      	b.n	8001c72 <EE_VerifyPageFullWriteVariable+0x9a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:478
  }

  /* Get the valid Page start Address */
  Address = (uint32_t)(EEPROM_START_ADDRESS + (uint32_t)(ValidPage * PAGE_SIZE));
 8001c0c:	8a3b      	ldrh	r3, [r7, #16]
 8001c0e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8001c12:	3302      	adds	r3, #2
 8001c14:	039b      	lsls	r3, r3, #14
 8001c16:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:481

  /* Get the valid Page end Address */
  PageEndAddress = (uint32_t)((EEPROM_START_ADDRESS - 2) + (uint32_t)((1 + ValidPage) * PAGE_SIZE));
 8001c18:	8a3b      	ldrh	r3, [r7, #16]
 8001c1a:	3301      	adds	r3, #1
 8001c1c:	039a      	lsls	r2, r3, #14
 8001c1e:	4b19      	ldr	r3, [pc, #100]	; (8001c84 <EE_VerifyPageFullWriteVariable+0xac>)
 8001c20:	4413      	add	r3, r2
 8001c22:	60fb      	str	r3, [r7, #12]
 8001c24:	e020      	b.n	8001c68 <EE_VerifyPageFullWriteVariable+0x90>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:487

  /* Check each active page address starting from begining */
  while (Address < PageEndAddress)
  {
    /* Verify if Address and Address+2 contents are 0xFFFFFFFF */
    if ((*(__IO uint32_t*)Address) == 0xFFFFFFFF)
 8001c26:	697b      	ldr	r3, [r7, #20]
 8001c28:	681b      	ldr	r3, [r3, #0]
 8001c2a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8001c2e:	d118      	bne.n	8001c62 <EE_VerifyPageFullWriteVariable+0x8a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:490
    {
      /* Set variable data */
      FlashStatus = FLASH_ProgramHalfWord(Address, Data);
 8001c30:	88bb      	ldrh	r3, [r7, #4]
 8001c32:	4619      	mov	r1, r3
 8001c34:	6978      	ldr	r0, [r7, #20]
 8001c36:	f7ff fa05 	bl	8001044 <FLASH_ProgramHalfWord>
 8001c3a:	4603      	mov	r3, r0
 8001c3c:	74fb      	strb	r3, [r7, #19]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:492
      /* If program operation was failed, a Flash error code is returned */
      if (FlashStatus != FLASH_COMPLETE)
 8001c3e:	7cfb      	ldrb	r3, [r7, #19]
 8001c40:	2b08      	cmp	r3, #8
 8001c42:	d002      	beq.n	8001c4a <EE_VerifyPageFullWriteVariable+0x72>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:494
      {
        return FlashStatus;
 8001c44:	7cfb      	ldrb	r3, [r7, #19]
 8001c46:	b29b      	uxth	r3, r3
 8001c48:	e013      	b.n	8001c72 <EE_VerifyPageFullWriteVariable+0x9a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:497
      }
      /* Set variable virtual address */
      FlashStatus = FLASH_ProgramHalfWord(Address + 2, VirtAddress);
 8001c4a:	697b      	ldr	r3, [r7, #20]
 8001c4c:	3302      	adds	r3, #2
 8001c4e:	88fa      	ldrh	r2, [r7, #6]
 8001c50:	4611      	mov	r1, r2
 8001c52:	4618      	mov	r0, r3
 8001c54:	f7ff f9f6 	bl	8001044 <FLASH_ProgramHalfWord>
 8001c58:	4603      	mov	r3, r0
 8001c5a:	74fb      	strb	r3, [r7, #19]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:499
      /* Return program operation status */
      return FlashStatus;
 8001c5c:	7cfb      	ldrb	r3, [r7, #19]
 8001c5e:	b29b      	uxth	r3, r3
 8001c60:	e007      	b.n	8001c72 <EE_VerifyPageFullWriteVariable+0x9a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:504
    }
    else
    {
      /* Next address location */
      Address = Address + 4;
 8001c62:	697b      	ldr	r3, [r7, #20]
 8001c64:	3304      	adds	r3, #4
 8001c66:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:484
  while (Address < PageEndAddress)
 8001c68:	697a      	ldr	r2, [r7, #20]
 8001c6a:	68fb      	ldr	r3, [r7, #12]
 8001c6c:	429a      	cmp	r2, r3
 8001c6e:	d3da      	bcc.n	8001c26 <EE_VerifyPageFullWriteVariable+0x4e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:509
    }
  }

  /* Return PAGE_FULL in case the valid page is full */
  return PAGE_FULL;
 8001c70:	2380      	movs	r3, #128	; 0x80
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:510
}
 8001c72:	4618      	mov	r0, r3
 8001c74:	3718      	adds	r7, #24
 8001c76:	46bd      	mov	sp, r7
 8001c78:	bd80      	pop	{r7, pc}
 8001c7a:	bf00      	nop
 8001c7c:	08008000 	.word	0x08008000
 8001c80:	0800c000 	.word	0x0800c000
 8001c84:	08007ffe 	.word	0x08007ffe

08001c88 <EE_PageTransfer>:
EE_PageTransfer():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:524
  *           - PAGE_FULL: if valid page is full
  *           - NO_VALID_PAGE: if no valid page was found
  *           - Flash error code: on write Flash error
  */
static uint16_t EE_PageTransfer(uint16_t VirtAddress, uint16_t Data)
{
 8001c88:	b580      	push	{r7, lr}
 8001c8a:	b086      	sub	sp, #24
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	4603      	mov	r3, r0
 8001c90:	460a      	mov	r2, r1
 8001c92:	80fb      	strh	r3, [r7, #6]
 8001c94:	4613      	mov	r3, r2
 8001c96:	80bb      	strh	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:525
  FLASH_Status FlashStatus = FLASH_COMPLETE;
 8001c98:	2308      	movs	r3, #8
 8001c9a:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:526
  uint32_t NewPageAddress = EEPROM_START_ADDRESS;
 8001c9c:	4b44      	ldr	r3, [pc, #272]	; (8001db0 <EE_PageTransfer+0x128>)
 8001c9e:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:527
  uint16_t OldPageId=0;
 8001ca0:	2300      	movs	r3, #0
 8001ca2:	827b      	strh	r3, [r7, #18]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:528
  uint16_t ValidPage = PAGE0, VarIdx = 0;
 8001ca4:	2300      	movs	r3, #0
 8001ca6:	81bb      	strh	r3, [r7, #12]
 8001ca8:	2300      	movs	r3, #0
 8001caa:	823b      	strh	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:529
  uint16_t EepromStatus = 0, ReadStatus = 0;
 8001cac:	2300      	movs	r3, #0
 8001cae:	817b      	strh	r3, [r7, #10]
 8001cb0:	2300      	movs	r3, #0
 8001cb2:	813b      	strh	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:532

  /* Get active Page for read operation */
  ValidPage = EE_FindValidPage(READ_FROM_VALID_PAGE);
 8001cb4:	2000      	movs	r0, #0
 8001cb6:	f7ff ff4b 	bl	8001b50 <EE_FindValidPage>
 8001cba:	4603      	mov	r3, r0
 8001cbc:	81bb      	strh	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:534

  if (ValidPage == PAGE1)       /* Page1 valid */
 8001cbe:	89bb      	ldrh	r3, [r7, #12]
 8001cc0:	2b01      	cmp	r3, #1
 8001cc2:	d104      	bne.n	8001cce <EE_PageTransfer+0x46>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:537
  {
    /* New page address where variable will be moved to */
    NewPageAddress = PAGE0_BASE_ADDRESS;
 8001cc4:	4b3a      	ldr	r3, [pc, #232]	; (8001db0 <EE_PageTransfer+0x128>)
 8001cc6:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:540

    /* Old page ID where variable will be taken from */
    OldPageId = PAGE1_ID;
 8001cc8:	2318      	movs	r3, #24
 8001cca:	827b      	strh	r3, [r7, #18]
 8001ccc:	e009      	b.n	8001ce2 <EE_PageTransfer+0x5a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:542
  }
  else if (ValidPage == PAGE0)  /* Page0 valid */
 8001cce:	89bb      	ldrh	r3, [r7, #12]
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d104      	bne.n	8001cde <EE_PageTransfer+0x56>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:545
  {
    /* New page address  where variable will be moved to */
    NewPageAddress = PAGE1_BASE_ADDRESS;
 8001cd4:	4b37      	ldr	r3, [pc, #220]	; (8001db4 <EE_PageTransfer+0x12c>)
 8001cd6:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:548

    /* Old page ID where variable will be taken from */
    OldPageId = PAGE0_ID;
 8001cd8:	2310      	movs	r3, #16
 8001cda:	827b      	strh	r3, [r7, #18]
 8001cdc:	e001      	b.n	8001ce2 <EE_PageTransfer+0x5a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:552
  }
  else
  {
    return NO_VALID_PAGE;       /* No valid Page */
 8001cde:	23ab      	movs	r3, #171	; 0xab
 8001ce0:	e062      	b.n	8001da8 <EE_PageTransfer+0x120>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:556
  }

  /* Set the new Page status to RECEIVE_DATA status */
  FlashStatus = FLASH_ProgramHalfWord(NewPageAddress, RECEIVE_DATA);
 8001ce2:	f64e 61ee 	movw	r1, #61166	; 0xeeee
 8001ce6:	6978      	ldr	r0, [r7, #20]
 8001ce8:	f7ff f9ac 	bl	8001044 <FLASH_ProgramHalfWord>
 8001cec:	4603      	mov	r3, r0
 8001cee:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:558
  /* If program operation was failed, a Flash error code is returned */
  if (FlashStatus != FLASH_COMPLETE)
 8001cf0:	7bfb      	ldrb	r3, [r7, #15]
 8001cf2:	2b08      	cmp	r3, #8
 8001cf4:	d002      	beq.n	8001cfc <EE_PageTransfer+0x74>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:560
  {
    return FlashStatus;
 8001cf6:	7bfb      	ldrb	r3, [r7, #15]
 8001cf8:	b29b      	uxth	r3, r3
 8001cfa:	e055      	b.n	8001da8 <EE_PageTransfer+0x120>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:564
  }

  /* Write the variable passed as parameter in the new active page */
  EepromStatus = EE_VerifyPageFullWriteVariable(VirtAddress, Data);
 8001cfc:	88ba      	ldrh	r2, [r7, #4]
 8001cfe:	88fb      	ldrh	r3, [r7, #6]
 8001d00:	4611      	mov	r1, r2
 8001d02:	4618      	mov	r0, r3
 8001d04:	f7ff ff68 	bl	8001bd8 <EE_VerifyPageFullWriteVariable>
 8001d08:	4603      	mov	r3, r0
 8001d0a:	817b      	strh	r3, [r7, #10]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:566
  /* If program operation was failed, a Flash error code is returned */
  if (EepromStatus != FLASH_COMPLETE)
 8001d0c:	897b      	ldrh	r3, [r7, #10]
 8001d0e:	2b08      	cmp	r3, #8
 8001d10:	d001      	beq.n	8001d16 <EE_PageTransfer+0x8e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:568
  {
    return EepromStatus;
 8001d12:	897b      	ldrh	r3, [r7, #10]
 8001d14:	e048      	b.n	8001da8 <EE_PageTransfer+0x120>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:572
  }

  /* Transfer process: transfer variables from old to the new active page */
  for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 8001d16:	2300      	movs	r3, #0
 8001d18:	823b      	strh	r3, [r7, #16]
 8001d1a:	e027      	b.n	8001d6c <EE_PageTransfer+0xe4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:574
  {
    if (VirtAddVarTab[VarIdx] != VirtAddress)  /* Check each variable except the one passed as parameter */
 8001d1c:	8a3b      	ldrh	r3, [r7, #16]
 8001d1e:	4a26      	ldr	r2, [pc, #152]	; (8001db8 <EE_PageTransfer+0x130>)
 8001d20:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001d24:	88fa      	ldrh	r2, [r7, #6]
 8001d26:	429a      	cmp	r2, r3
 8001d28:	d01d      	beq.n	8001d66 <EE_PageTransfer+0xde>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:577
    {
      /* Read the other last variable updates */
      ReadStatus = EE_ReadVariable(VirtAddVarTab[VarIdx], &DataVar);
 8001d2a:	8a3b      	ldrh	r3, [r7, #16]
 8001d2c:	4a22      	ldr	r2, [pc, #136]	; (8001db8 <EE_PageTransfer+0x130>)
 8001d2e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001d32:	4922      	ldr	r1, [pc, #136]	; (8001dbc <EE_PageTransfer+0x134>)
 8001d34:	4618      	mov	r0, r3
 8001d36:	f7ff fe77 	bl	8001a28 <EE_ReadVariable>
 8001d3a:	4603      	mov	r3, r0
 8001d3c:	813b      	strh	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:579
      /* In case variable corresponding to the virtual address was found */
      if (ReadStatus != 0x1)
 8001d3e:	893b      	ldrh	r3, [r7, #8]
 8001d40:	2b01      	cmp	r3, #1
 8001d42:	d010      	beq.n	8001d66 <EE_PageTransfer+0xde>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:582
      {
        /* Transfer the variable to the new active page */
        EepromStatus = EE_VerifyPageFullWriteVariable(VirtAddVarTab[VarIdx], DataVar);
 8001d44:	8a3b      	ldrh	r3, [r7, #16]
 8001d46:	4a1c      	ldr	r2, [pc, #112]	; (8001db8 <EE_PageTransfer+0x130>)
 8001d48:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8001d4c:	4b1b      	ldr	r3, [pc, #108]	; (8001dbc <EE_PageTransfer+0x134>)
 8001d4e:	881b      	ldrh	r3, [r3, #0]
 8001d50:	4619      	mov	r1, r3
 8001d52:	4610      	mov	r0, r2
 8001d54:	f7ff ff40 	bl	8001bd8 <EE_VerifyPageFullWriteVariable>
 8001d58:	4603      	mov	r3, r0
 8001d5a:	817b      	strh	r3, [r7, #10]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:584
        /* If program operation was failed, a Flash error code is returned */
        if (EepromStatus != FLASH_COMPLETE)
 8001d5c:	897b      	ldrh	r3, [r7, #10]
 8001d5e:	2b08      	cmp	r3, #8
 8001d60:	d001      	beq.n	8001d66 <EE_PageTransfer+0xde>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:586
        {
          return EepromStatus;
 8001d62:	897b      	ldrh	r3, [r7, #10]
 8001d64:	e020      	b.n	8001da8 <EE_PageTransfer+0x120>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:572
  for (VarIdx = 0; VarIdx < NB_OF_VAR; VarIdx++)
 8001d66:	8a3b      	ldrh	r3, [r7, #16]
 8001d68:	3301      	adds	r3, #1
 8001d6a:	823b      	strh	r3, [r7, #16]
 8001d6c:	8a3b      	ldrh	r3, [r7, #16]
 8001d6e:	2b1d      	cmp	r3, #29
 8001d70:	d9d4      	bls.n	8001d1c <EE_PageTransfer+0x94>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:593
      }
    }
  }

  /* Erase the old Page: Set old Page status to ERASED status */
  FlashStatus = FLASH_EraseSector(OldPageId, VOLTAGE_RANGE);
 8001d72:	8a7b      	ldrh	r3, [r7, #18]
 8001d74:	2102      	movs	r1, #2
 8001d76:	4618      	mov	r0, r3
 8001d78:	f7ff f904 	bl	8000f84 <FLASH_EraseSector>
 8001d7c:	4603      	mov	r3, r0
 8001d7e:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:595
  /* If erase operation was failed, a Flash error code is returned */
  if (FlashStatus != FLASH_COMPLETE)
 8001d80:	7bfb      	ldrb	r3, [r7, #15]
 8001d82:	2b08      	cmp	r3, #8
 8001d84:	d002      	beq.n	8001d8c <EE_PageTransfer+0x104>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:597
  {
    return FlashStatus;
 8001d86:	7bfb      	ldrb	r3, [r7, #15]
 8001d88:	b29b      	uxth	r3, r3
 8001d8a:	e00d      	b.n	8001da8 <EE_PageTransfer+0x120>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:601
  }

  /* Set new Page status to VALID_PAGE status */
  FlashStatus = FLASH_ProgramHalfWord(NewPageAddress, VALID_PAGE);
 8001d8c:	2100      	movs	r1, #0
 8001d8e:	6978      	ldr	r0, [r7, #20]
 8001d90:	f7ff f958 	bl	8001044 <FLASH_ProgramHalfWord>
 8001d94:	4603      	mov	r3, r0
 8001d96:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:603
  /* If program operation was failed, a Flash error code is returned */
  if (FlashStatus != FLASH_COMPLETE)
 8001d98:	7bfb      	ldrb	r3, [r7, #15]
 8001d9a:	2b08      	cmp	r3, #8
 8001d9c:	d002      	beq.n	8001da4 <EE_PageTransfer+0x11c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:605
  {
    return FlashStatus;
 8001d9e:	7bfb      	ldrb	r3, [r7, #15]
 8001da0:	b29b      	uxth	r3, r3
 8001da2:	e001      	b.n	8001da8 <EE_PageTransfer+0x120>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:609
  }

  /* Return last operation flash status */
  return FlashStatus;
 8001da4:	7bfb      	ldrb	r3, [r7, #15]
 8001da6:	b29b      	uxth	r3, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/eeprom.c:610
}
 8001da8:	4618      	mov	r0, r3
 8001daa:	3718      	adds	r7, #24
 8001dac:	46bd      	mov	sp, r7
 8001dae:	bd80      	pop	{r7, pc}
 8001db0:	08008000 	.word	0x08008000
 8001db4:	0800c000 	.word	0x0800c000
 8001db8:	20000328 	.word	0x20000328
 8001dbc:	200003c8 	.word	0x200003c8

08001dc0 <Gpio::getInputValue()>:
getInputValue():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:117
	}

	inline void toggleOutput(){ getOutputValue()? pinSetDown() : pinSetUp(); }


	inline bool getInputValue(){
 8001dc0:	b480      	push	{r7}
 8001dc2:	b083      	sub	sp, #12
 8001dc4:	af00      	add	r7, sp, #0
 8001dc6:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:118
		return (gpio->IDR & (1<<pinNr));
 8001dc8:	687b      	ldr	r3, [r7, #4]
 8001dca:	681b      	ldr	r3, [r3, #0]
 8001dcc:	691b      	ldr	r3, [r3, #16]
 8001dce:	687a      	ldr	r2, [r7, #4]
 8001dd0:	8892      	ldrh	r2, [r2, #4]
 8001dd2:	4611      	mov	r1, r2
 8001dd4:	2201      	movs	r2, #1
 8001dd6:	408a      	lsls	r2, r1
 8001dd8:	4013      	ands	r3, r2
 8001dda:	2b00      	cmp	r3, #0
 8001ddc:	bf14      	ite	ne
 8001dde:	2301      	movne	r3, #1
 8001de0:	2300      	moveq	r3, #0
 8001de2:	b2db      	uxtb	r3, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:119
	}
 8001de4:	4618      	mov	r0, r3
 8001de6:	370c      	adds	r7, #12
 8001de8:	46bd      	mov	sp, r7
 8001dea:	bc80      	pop	{r7}
 8001dec:	4770      	bx	lr

08001dee <Silnik::Silnik(Gpio*)>:
_ZN6SilnikC2EP4Gpio.lto_priv.3():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Silnik.h:17

class Silnik{
private:
	Gpio * gpio;
public:
	Silnik(Gpio * gpioPtr){
 8001dee:	b480      	push	{r7}
 8001df0:	b083      	sub	sp, #12
 8001df2:	af00      	add	r7, sp, #0
 8001df4:	6078      	str	r0, [r7, #4]
 8001df6:	6039      	str	r1, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Silnik.h:18
		gpio = gpioPtr;
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	683a      	ldr	r2, [r7, #0]
 8001dfc:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Silnik.h:19
	}
 8001dfe:	687b      	ldr	r3, [r7, #4]
 8001e00:	4618      	mov	r0, r3
 8001e02:	370c      	adds	r7, #12
 8001e04:	46bd      	mov	sp, r7
 8001e06:	bc80      	pop	{r7}
 8001e08:	4770      	bx	lr

08001e0a <Button::Button(unsigned short)>:
__base_ctor ():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:31
		setup(keyGpio, activeTypeInit);
//		gpio = keyGpio;
//		setActiveType(activeTypeInit);
	}

	Button(uint16_t keyID){
 8001e0a:	b480      	push	{r7}
 8001e0c:	b083      	sub	sp, #12
 8001e0e:	af00      	add	r7, sp, #0
 8001e10:	6078      	str	r0, [r7, #4]
 8001e12:	460b      	mov	r3, r1
 8001e14:	807b      	strh	r3, [r7, #2]
 8001e16:	687b      	ldr	r3, [r7, #4]
 8001e18:	2200      	movs	r2, #0
 8001e1a:	601a      	str	r2, [r3, #0]
 8001e1c:	687b      	ldr	r3, [r7, #4]
 8001e1e:	2200      	movs	r2, #0
 8001e20:	719a      	strb	r2, [r3, #6]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:32
		id = keyID;
 8001e22:	687b      	ldr	r3, [r7, #4]
 8001e24:	887a      	ldrh	r2, [r7, #2]
 8001e26:	809a      	strh	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:33
	}
 8001e28:	687b      	ldr	r3, [r7, #4]
 8001e2a:	4618      	mov	r0, r3
 8001e2c:	370c      	adds	r7, #12
 8001e2e:	46bd      	mov	sp, r7
 8001e30:	bc80      	pop	{r7}
 8001e32:	4770      	bx	lr

08001e34 <Button::setup(Gpio*, Button::ActiveType)>:
setup():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:35

	void setup(Gpio * keyGpio, ActiveType activeTypeInit){
 8001e34:	b580      	push	{r7, lr}
 8001e36:	b084      	sub	sp, #16
 8001e38:	af00      	add	r7, sp, #0
 8001e3a:	60f8      	str	r0, [r7, #12]
 8001e3c:	60b9      	str	r1, [r7, #8]
 8001e3e:	4613      	mov	r3, r2
 8001e40:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:36
		gpio = keyGpio;
 8001e42:	68fb      	ldr	r3, [r7, #12]
 8001e44:	68ba      	ldr	r2, [r7, #8]
 8001e46:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:37
		setActiveType(activeTypeInit);
 8001e48:	79fb      	ldrb	r3, [r7, #7]
 8001e4a:	4619      	mov	r1, r3
 8001e4c:	68f8      	ldr	r0, [r7, #12]
 8001e4e:	f000 f803 	bl	8001e58 <Button::setActiveType(Button::ActiveType)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:38
	}
 8001e52:	3710      	adds	r7, #16
 8001e54:	46bd      	mov	sp, r7
 8001e56:	bd80      	pop	{r7, pc}

08001e58 <Button::setActiveType(Button::ActiveType)>:
setActiveType():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:40

	void setActiveType(ActiveType newActiveType){
 8001e58:	b580      	push	{r7, lr}
 8001e5a:	b084      	sub	sp, #16
 8001e5c:	af02      	add	r7, sp, #8
 8001e5e:	6078      	str	r0, [r7, #4]
 8001e60:	460b      	mov	r3, r1
 8001e62:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:41
		activeType = newActiveType;
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	78fa      	ldrb	r2, [r7, #3]
 8001e68:	719a      	strb	r2, [r3, #6]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:42
		if (gpio == nullptr) return;
 8001e6a:	687b      	ldr	r3, [r7, #4]
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	2b00      	cmp	r3, #0
 8001e70:	d016      	beq.n	8001ea0 <Button::setActiveType(Button::ActiveType)+0x48>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:43
		if (activeType == ACTIVE_LOW)
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	799b      	ldrb	r3, [r3, #6]
 8001e76:	2b01      	cmp	r3, #1
 8001e78:	d109      	bne.n	8001e8e <Button::setActiveType(Button::ActiveType)+0x36>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:44
			gpio->setup(Gpio::GpioMode::INPUT, Gpio::GpioOType::PushPull, Gpio::GpioPuPd::PullUp, Gpio::GpioSpeed::MediumSpeed);
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	6818      	ldr	r0, [r3, #0]
 8001e7e:	2301      	movs	r3, #1
 8001e80:	9300      	str	r3, [sp, #0]
 8001e82:	2301      	movs	r3, #1
 8001e84:	2200      	movs	r2, #0
 8001e86:	2100      	movs	r1, #0
 8001e88:	f001 fd9d 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
 8001e8c:	e008      	b.n	8001ea0 <Button::setActiveType(Button::ActiveType)+0x48>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:46
		else
			gpio->setup(Gpio::GpioMode::INPUT, Gpio::GpioOType::PushPull, Gpio::GpioPuPd::PullDown, Gpio::GpioSpeed::MediumSpeed);
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	6818      	ldr	r0, [r3, #0]
 8001e92:	2301      	movs	r3, #1
 8001e94:	9300      	str	r3, [sp, #0]
 8001e96:	2302      	movs	r3, #2
 8001e98:	2200      	movs	r2, #0
 8001e9a:	2100      	movs	r1, #0
 8001e9c:	f001 fd93 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:47
	}
 8001ea0:	3708      	adds	r7, #8
 8001ea2:	46bd      	mov	sp, r7
 8001ea4:	bd80      	pop	{r7, pc}

08001ea6 <Button::isPressed()>:
isPressed():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:51



	bool isPressed(){
 8001ea6:	b590      	push	{r4, r7, lr}
 8001ea8:	b083      	sub	sp, #12
 8001eaa:	af00      	add	r7, sp, #0
 8001eac:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:52
		if (gpio == nullptr) return false;
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	681b      	ldr	r3, [r3, #0]
 8001eb2:	2b00      	cmp	r3, #0
 8001eb4:	d101      	bne.n	8001eba <Button::isPressed()+0x14>
 8001eb6:	2300      	movs	r3, #0
 8001eb8:	e012      	b.n	8001ee0 <Button::isPressed()+0x3a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:53
		return ((activeType == ACTIVE_LOW) xor (gpio->getInputValue()));
 8001eba:	687b      	ldr	r3, [r7, #4]
 8001ebc:	799b      	ldrb	r3, [r3, #6]
 8001ebe:	2b01      	cmp	r3, #1
 8001ec0:	bf0c      	ite	eq
 8001ec2:	2301      	moveq	r3, #1
 8001ec4:	2300      	movne	r3, #0
 8001ec6:	b2db      	uxtb	r3, r3
 8001ec8:	461c      	mov	r4, r3
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	681b      	ldr	r3, [r3, #0]
 8001ece:	4618      	mov	r0, r3
 8001ed0:	f7ff ff76 	bl	8001dc0 <Gpio::getInputValue()>
 8001ed4:	4603      	mov	r3, r0
 8001ed6:	429c      	cmp	r4, r3
 8001ed8:	bf14      	ite	ne
 8001eda:	2301      	movne	r3, #1
 8001edc:	2300      	moveq	r3, #0
 8001ede:	b2db      	uxtb	r3, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Button.h:54
	}
 8001ee0:	4618      	mov	r0, r3
 8001ee2:	370c      	adds	r7, #12
 8001ee4:	46bd      	mov	sp, r7
 8001ee6:	bd90      	pop	{r4, r7, pc}

08001ee8 <Impulsator::getTurnNow()>:
getTurnNow():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:32


	/**
	 * sprawdzenie czy byl obrot - sprawdzac czesto, zeby nie przeoczyc
	 */
	Move	getTurnNow(){
 8001ee8:	b580      	push	{r7, lr}
 8001eea:	b084      	sub	sp, #16
 8001eec:	af00      	add	r7, sp, #0
 8001eee:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:34
		static bool	lState = false;	//leftGpio->getInputValue();
		bool left = leftGpio->getInputValue();
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	4618      	mov	r0, r3
 8001ef6:	f7ff ff63 	bl	8001dc0 <Gpio::getInputValue()>
 8001efa:	4603      	mov	r3, r0
 8001efc:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:35
		bool right = rightGpio->getInputValue(); //pobranie stanu
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	685b      	ldr	r3, [r3, #4]
 8001f02:	4618      	mov	r0, r3
 8001f04:	f7ff ff5c 	bl	8001dc0 <Gpio::getInputValue()>
 8001f08:	4603      	mov	r3, r0
 8001f0a:	73bb      	strb	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:36
		if (lState != left){	// zmiana stanu
 8001f0c:	4b0a      	ldr	r3, [pc, #40]	; (8001f38 <Impulsator::getTurnNow()+0x50>)
 8001f0e:	781b      	ldrb	r3, [r3, #0]
 8001f10:	7bfa      	ldrb	r2, [r7, #15]
 8001f12:	429a      	cmp	r2, r3
 8001f14:	d00a      	beq.n	8001f2c <Impulsator::getTurnNow()+0x44>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:37
			lState = left;		// zapamietanie poprzedniego
 8001f16:	4a08      	ldr	r2, [pc, #32]	; (8001f38 <Impulsator::getTurnNow()+0x50>)
 8001f18:	7bfb      	ldrb	r3, [r7, #15]
 8001f1a:	7013      	strb	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:38
			if (right == left) return LEFT;	// Jesli lewy przeskoczyl, a prawy juz byl w tym stanie, to w lewo
 8001f1c:	7bba      	ldrb	r2, [r7, #14]
 8001f1e:	7bfb      	ldrb	r3, [r7, #15]
 8001f20:	429a      	cmp	r2, r3
 8001f22:	d101      	bne.n	8001f28 <Impulsator::getTurnNow()+0x40>
 8001f24:	2301      	movs	r3, #1
 8001f26:	e002      	b.n	8001f2e <Impulsator::getTurnNow()+0x46>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:39
			else return RIGHT;				// Jesli lewy przeskoczyl, a prawy jeszcze nie, to obrot w prawo
 8001f28:	2302      	movs	r3, #2
 8001f2a:	e000      	b.n	8001f2e <Impulsator::getTurnNow()+0x46>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:41
		}
		return NONE;
 8001f2c:	2300      	movs	r3, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:42
	}
 8001f2e:	4618      	mov	r0, r3
 8001f30:	3710      	adds	r7, #16
 8001f32:	46bd      	mov	sp, r7
 8001f34:	bd80      	pop	{r7, pc}
 8001f36:	bf00      	nop
 8001f38:	200003ca 	.word	0x200003ca

08001f3c <Impulsator::Impulsator()>:
__base_ctor ():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:51

	Impulsator(Gpio * left, Gpio * right, Button * push){
		setup(left, right, push);
	}

	Impulsator(){};
 8001f3c:	b480      	push	{r7}
 8001f3e:	b083      	sub	sp, #12
 8001f40:	af00      	add	r7, sp, #0
 8001f42:	6078      	str	r0, [r7, #4]
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	2200      	movs	r2, #0
 8001f48:	601a      	str	r2, [r3, #0]
 8001f4a:	687b      	ldr	r3, [r7, #4]
 8001f4c:	2200      	movs	r2, #0
 8001f4e:	605a      	str	r2, [r3, #4]
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	2200      	movs	r2, #0
 8001f54:	609a      	str	r2, [r3, #8]
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	2200      	movs	r2, #0
 8001f5a:	731a      	strb	r2, [r3, #12]
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	2200      	movs	r2, #0
 8001f60:	735a      	strb	r2, [r3, #13]
 8001f62:	687b      	ldr	r3, [r7, #4]
 8001f64:	4618      	mov	r0, r3
 8001f66:	370c      	adds	r7, #12
 8001f68:	46bd      	mov	sp, r7
 8001f6a:	bc80      	pop	{r7}
 8001f6c:	4770      	bx	lr

08001f6e <Impulsator::isPressed()>:
isPressed():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:53

	inline bool isPressed(){ return pushBtn->isPressed();	}
 8001f6e:	b580      	push	{r7, lr}
 8001f70:	b082      	sub	sp, #8
 8001f72:	af00      	add	r7, sp, #0
 8001f74:	6078      	str	r0, [r7, #4]
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	689b      	ldr	r3, [r3, #8]
 8001f7a:	4618      	mov	r0, r3
 8001f7c:	f7ff ff93 	bl	8001ea6 <Button::isPressed()>
 8001f80:	4603      	mov	r3, r0
 8001f82:	4618      	mov	r0, r3
 8001f84:	3708      	adds	r7, #8
 8001f86:	46bd      	mov	sp, r7
 8001f88:	bd80      	pop	{r7, pc}

08001f8a <Impulsator::setup(Gpio*, Gpio*, Button*)>:
setup():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:55

	inline void setup(Gpio * left, Gpio * right, Button * push){
 8001f8a:	b480      	push	{r7}
 8001f8c:	b085      	sub	sp, #20
 8001f8e:	af00      	add	r7, sp, #0
 8001f90:	60f8      	str	r0, [r7, #12]
 8001f92:	60b9      	str	r1, [r7, #8]
 8001f94:	607a      	str	r2, [r7, #4]
 8001f96:	603b      	str	r3, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:56
		leftGpio = left;
 8001f98:	68fb      	ldr	r3, [r7, #12]
 8001f9a:	68ba      	ldr	r2, [r7, #8]
 8001f9c:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:57
		rightGpio = right;
 8001f9e:	68fb      	ldr	r3, [r7, #12]
 8001fa0:	687a      	ldr	r2, [r7, #4]
 8001fa2:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:58
		pushBtn = push;
 8001fa4:	68fb      	ldr	r3, [r7, #12]
 8001fa6:	683a      	ldr	r2, [r7, #0]
 8001fa8:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:59
	}
 8001faa:	3714      	adds	r7, #20
 8001fac:	46bd      	mov	sp, r7
 8001fae:	bc80      	pop	{r7}
 8001fb0:	4770      	bx	lr

08001fb2 <Impulsator::getMove()>:
getMove():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:61

	Move getMove(){
 8001fb2:	b480      	push	{r7}
 8001fb4:	b085      	sub	sp, #20
 8001fb6:	af00      	add	r7, sp, #0
 8001fb8:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:62
		semafor = true;
 8001fba:	687b      	ldr	r3, [r7, #4]
 8001fbc:	2201      	movs	r2, #1
 8001fbe:	735a      	strb	r2, [r3, #13]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:63
		Move result = move;
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	7b1b      	ldrb	r3, [r3, #12]
 8001fc4:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:64
		move = NONE;
 8001fc6:	687b      	ldr	r3, [r7, #4]
 8001fc8:	2200      	movs	r2, #0
 8001fca:	731a      	strb	r2, [r3, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:65
		semafor = false;
 8001fcc:	687b      	ldr	r3, [r7, #4]
 8001fce:	2200      	movs	r2, #0
 8001fd0:	735a      	strb	r2, [r3, #13]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:66
		return result;
 8001fd2:	7bfb      	ldrb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:67
	}
 8001fd4:	4618      	mov	r0, r3
 8001fd6:	3714      	adds	r7, #20
 8001fd8:	46bd      	mov	sp, r7
 8001fda:	bc80      	pop	{r7}
 8001fdc:	4770      	bx	lr
	...

08001fe0 <Impulsator::co10ms()>:
co10ms():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:69

	void co10ms(){
 8001fe0:	b580      	push	{r7, lr}
 8001fe2:	b084      	sub	sp, #16
 8001fe4:	af00      	add	r7, sp, #0
 8001fe6:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:70
		if (semafor) return;
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	7b5b      	ldrb	r3, [r3, #13]
 8001fec:	b2db      	uxtb	r3, r3
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	d129      	bne.n	8002046 <Impulsator::co10ms()+0x66>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:72
		static bool lastPush = false;
		Move turn = getTurnNow();
 8001ff2:	6878      	ldr	r0, [r7, #4]
 8001ff4:	f7ff ff78 	bl	8001ee8 <Impulsator::getTurnNow()>
 8001ff8:	4603      	mov	r3, r0
 8001ffa:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:73
		if (turn != NONE){		// czy jest obrot?
 8001ffc:	7bfb      	ldrb	r3, [r7, #15]
 8001ffe:	2b00      	cmp	r3, #0
 8002000:	d003      	beq.n	800200a <Impulsator::co10ms()+0x2a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:74
			move = turn;		// nowy obrot
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	7bfa      	ldrb	r2, [r7, #15]
 8002006:	731a      	strb	r2, [r3, #12]
 8002008:	e01d      	b.n	8002046 <Impulsator::co10ms()+0x66>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:77
			return;
		}
		if (isPressed() != lastPush){	// czy nacisniety?
 800200a:	6878      	ldr	r0, [r7, #4]
 800200c:	f7ff ffaf 	bl	8001f6e <Impulsator::isPressed()>
 8002010:	4603      	mov	r3, r0
 8002012:	461a      	mov	r2, r3
 8002014:	4b0d      	ldr	r3, [pc, #52]	; (800204c <Impulsator::co10ms()+0x6c>)
 8002016:	781b      	ldrb	r3, [r3, #0]
 8002018:	429a      	cmp	r2, r3
 800201a:	bf14      	ite	ne
 800201c:	2301      	movne	r3, #1
 800201e:	2300      	moveq	r3, #0
 8002020:	b2db      	uxtb	r3, r3
 8002022:	2b00      	cmp	r3, #0
 8002024:	d00f      	beq.n	8002046 <Impulsator::co10ms()+0x66>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:78
			lastPush = !lastPush;
 8002026:	4b09      	ldr	r3, [pc, #36]	; (800204c <Impulsator::co10ms()+0x6c>)
 8002028:	781b      	ldrb	r3, [r3, #0]
 800202a:	f083 0301 	eor.w	r3, r3, #1
 800202e:	b2da      	uxtb	r2, r3
 8002030:	4b06      	ldr	r3, [pc, #24]	; (800204c <Impulsator::co10ms()+0x6c>)
 8002032:	701a      	strb	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:79
			move = lastPush ? PUSH : RELEASE;	// nacisniety czy puszczony
 8002034:	4b05      	ldr	r3, [pc, #20]	; (800204c <Impulsator::co10ms()+0x6c>)
 8002036:	781b      	ldrb	r3, [r3, #0]
 8002038:	2b00      	cmp	r3, #0
 800203a:	d001      	beq.n	8002040 <Impulsator::co10ms()+0x60>
 800203c:	2203      	movs	r2, #3
 800203e:	e000      	b.n	8002042 <Impulsator::co10ms()+0x62>
 8002040:	2204      	movs	r2, #4
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	731a      	strb	r2, [r3, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Impulsator.h:83
			return;
		}
		return;
	}
 8002046:	3710      	adds	r7, #16
 8002048:	46bd      	mov	sp, r7
 800204a:	bd80      	pop	{r7, pc}
 800204c:	200003cb 	.word	0x200003cb

08002050 <Keyboard::addToBuffer(Keyboard::Key)>:
addToBuffer():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:41
	Fifo fifo = Fifo(buffer, BUFFERSIZE);

	/**
	 * kasuje ostatni znak, przesuwa wszystkie o jeden i wpisuje najnowszy na koniec
	 */
	void addToBuffer(Key key){
 8002050:	b580      	push	{r7, lr}
 8002052:	b082      	sub	sp, #8
 8002054:	af00      	add	r7, sp, #0
 8002056:	6078      	str	r0, [r7, #4]
 8002058:	460b      	mov	r3, r1
 800205a:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:42
		if (key == NONE) return;
 800205c:	78fb      	ldrb	r3, [r7, #3]
 800205e:	2b00      	cmp	r3, #0
 8002060:	d006      	beq.n	8002070 <Keyboard::addToBuffer(Keyboard::Key)+0x20>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:43
		fifo.put((uint8_t)key);
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	3304      	adds	r3, #4
 8002066:	78fa      	ldrb	r2, [r7, #3]
 8002068:	4611      	mov	r1, r2
 800206a:	4618      	mov	r0, r3
 800206c:	f7fe fb00 	bl	8000670 <Fifo::put(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:44
	}
 8002070:	3708      	adds	r7, #8
 8002072:	46bd      	mov	sp, r7
 8002074:	bd80      	pop	{r7, pc}

08002076 <Keyboard::getPressedKey()>:
getPressedKey():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:89
	Button buttonPush = Button(0x01);	// = Button(0x01, impPush, Button::ActiveType::ACTIVE_LOW);

	Impulsator imp = Impulsator(); // = Impulsator(&gpioImpLeft, &gpioImpRight, &buttonPush);

	// unbuffered key state
	Key getPressedKey(){
 8002076:	b580      	push	{r7, lr}
 8002078:	b082      	sub	sp, #8
 800207a:	af00      	add	r7, sp, #0
 800207c:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:90
		if (!key1->getInputValue()) return Key::RIGHT;
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	69db      	ldr	r3, [r3, #28]
 8002082:	4618      	mov	r0, r3
 8002084:	f7ff fe9c 	bl	8001dc0 <Gpio::getInputValue()>
 8002088:	4603      	mov	r3, r0
 800208a:	f083 0301 	eor.w	r3, r3, #1
 800208e:	b2db      	uxtb	r3, r3
 8002090:	2b00      	cmp	r3, #0
 8002092:	d001      	beq.n	8002098 <Keyboard::getPressedKey()+0x22>
 8002094:	2303      	movs	r3, #3
 8002096:	e027      	b.n	80020e8 <Keyboard::getPressedKey()+0x72>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:91
		if (!key2->getInputValue()) return Key::ENTER;
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	6a1b      	ldr	r3, [r3, #32]
 800209c:	4618      	mov	r0, r3
 800209e:	f7ff fe8f 	bl	8001dc0 <Gpio::getInputValue()>
 80020a2:	4603      	mov	r3, r0
 80020a4:	f083 0301 	eor.w	r3, r3, #1
 80020a8:	b2db      	uxtb	r3, r3
 80020aa:	2b00      	cmp	r3, #0
 80020ac:	d001      	beq.n	80020b2 <Keyboard::getPressedKey()+0x3c>
 80020ae:	2301      	movs	r3, #1
 80020b0:	e01a      	b.n	80020e8 <Keyboard::getPressedKey()+0x72>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:92
		if (!key3->getInputValue()) return Key::CANCEL;
 80020b2:	687b      	ldr	r3, [r7, #4]
 80020b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020b6:	4618      	mov	r0, r3
 80020b8:	f7ff fe82 	bl	8001dc0 <Gpio::getInputValue()>
 80020bc:	4603      	mov	r3, r0
 80020be:	f083 0301 	eor.w	r3, r3, #1
 80020c2:	b2db      	uxtb	r3, r3
 80020c4:	2b00      	cmp	r3, #0
 80020c6:	d001      	beq.n	80020cc <Keyboard::getPressedKey()+0x56>
 80020c8:	2302      	movs	r3, #2
 80020ca:	e00d      	b.n	80020e8 <Keyboard::getPressedKey()+0x72>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:93
		if (!key4->getInputValue()) return Key::LEFT;
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80020d0:	4618      	mov	r0, r3
 80020d2:	f7ff fe75 	bl	8001dc0 <Gpio::getInputValue()>
 80020d6:	4603      	mov	r3, r0
 80020d8:	f083 0301 	eor.w	r3, r3, #1
 80020dc:	b2db      	uxtb	r3, r3
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d001      	beq.n	80020e6 <Keyboard::getPressedKey()+0x70>
 80020e2:	2304      	movs	r3, #4
 80020e4:	e000      	b.n	80020e8 <Keyboard::getPressedKey()+0x72>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:94
		return Key::NONE;
 80020e6:	2300      	movs	r3, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:95
	}
 80020e8:	4618      	mov	r0, r3
 80020ea:	3708      	adds	r7, #8
 80020ec:	46bd      	mov	sp, r7
 80020ee:	bd80      	pop	{r7, pc}

080020f0 <Keyboard::getImpulsatorKey()>:
getImpulsatorKey():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:98

	// Zamiana Move na Key
	Key getImpulsatorKey(){
 80020f0:	b580      	push	{r7, lr}
 80020f2:	b084      	sub	sp, #16
 80020f4:	af00      	add	r7, sp, #0
 80020f6:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:99
		Impulsator::Move move = imp.getMove();
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	3340      	adds	r3, #64	; 0x40
 80020fc:	4618      	mov	r0, r3
 80020fe:	f7ff ff58 	bl	8001fb2 <Impulsator::getMove()>
 8002102:	4603      	mov	r3, r0
 8002104:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:100
		switch(move){
 8002106:	7bfb      	ldrb	r3, [r7, #15]
 8002108:	2b04      	cmp	r3, #4
 800210a:	d815      	bhi.n	8002138 <Keyboard::getImpulsatorKey()+0x48>
 800210c:	a201      	add	r2, pc, #4	; (adr r2, 8002114 <Keyboard::getImpulsatorKey()+0x24>)
 800210e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002112:	bf00      	nop
 8002114:	08002139 	.word	0x08002139
 8002118:	08002129 	.word	0x08002129
 800211c:	0800212d 	.word	0x0800212d
 8002120:	08002131 	.word	0x08002131
 8002124:	08002135 	.word	0x08002135
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:101
		case Impulsator::Move::LEFT: return Key::LEFT;
 8002128:	2304      	movs	r3, #4
 800212a:	e006      	b.n	800213a <Keyboard::getImpulsatorKey()+0x4a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:102
		case Impulsator::Move::RIGHT: return Key::RIGHT;
 800212c:	2303      	movs	r3, #3
 800212e:	e004      	b.n	800213a <Keyboard::getImpulsatorKey()+0x4a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:103
		case Impulsator::Move::PUSH: return Key::ENTER;
 8002130:	2301      	movs	r3, #1
 8002132:	e002      	b.n	800213a <Keyboard::getImpulsatorKey()+0x4a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:104
		case Impulsator::Move::RELEASE: return Key::CANCEL;
 8002134:	2302      	movs	r3, #2
 8002136:	e000      	b.n	800213a <Keyboard::getImpulsatorKey()+0x4a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:107
		case Impulsator::Move::NONE: break;
		}
		return Key::NONE;
 8002138:	2300      	movs	r3, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:108
	}
 800213a:	4618      	mov	r0, r3
 800213c:	3710      	adds	r7, #16
 800213e:	46bd      	mov	sp, r7
 8002140:	bd80      	pop	{r7, pc}
_ZN8Keyboard16getImpulsatorKeyEv():
 8002142:	bf00      	nop

08002144 <Keyboard::Keyboard(Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*)>:
_ZN8KeyboardC2EP4GpioS1_S1_S1_S1_S1_S1_.lto_priv.4():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:111

public:
	Keyboard(Gpio *key_1, Gpio *key_2, Gpio *key_3, Gpio *key_4, Gpio *ileft, Gpio *iright, Gpio *ipush) {
 8002144:	b580      	push	{r7, lr}
 8002146:	b086      	sub	sp, #24
 8002148:	af00      	add	r7, sp, #0
 800214a:	60f8      	str	r0, [r7, #12]
 800214c:	60b9      	str	r1, [r7, #8]
 800214e:	607a      	str	r2, [r7, #4]
 8002150:	603b      	str	r3, [r7, #0]
 8002152:	68fb      	ldr	r3, [r7, #12]
 8002154:	3304      	adds	r3, #4
 8002156:	68f9      	ldr	r1, [r7, #12]
 8002158:	2204      	movs	r2, #4
 800215a:	4618      	mov	r0, r3
 800215c:	f7fe fa68 	bl	8000630 <Fifo::Fifo(unsigned char*, unsigned long)>
 8002160:	68fb      	ldr	r3, [r7, #12]
 8002162:	3338      	adds	r3, #56	; 0x38
 8002164:	2101      	movs	r1, #1
 8002166:	4618      	mov	r0, r3
 8002168:	f7ff fe4f 	bl	8001e0a <Button::Button(unsigned short)>
 800216c:	68fb      	ldr	r3, [r7, #12]
 800216e:	3340      	adds	r3, #64	; 0x40
 8002170:	4618      	mov	r0, r3
 8002172:	f7ff fee3 	bl	8001f3c <Impulsator::Impulsator()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:112
		key1 = key_1;
 8002176:	68fb      	ldr	r3, [r7, #12]
 8002178:	68ba      	ldr	r2, [r7, #8]
 800217a:	61da      	str	r2, [r3, #28]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:113
		key2 = key_2;
 800217c:	68fb      	ldr	r3, [r7, #12]
 800217e:	687a      	ldr	r2, [r7, #4]
 8002180:	621a      	str	r2, [r3, #32]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:114
		key3 = key_3;
 8002182:	68fb      	ldr	r3, [r7, #12]
 8002184:	683a      	ldr	r2, [r7, #0]
 8002186:	625a      	str	r2, [r3, #36]	; 0x24
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:115
		key4 = key_4;
 8002188:	68fb      	ldr	r3, [r7, #12]
 800218a:	6a3a      	ldr	r2, [r7, #32]
 800218c:	629a      	str	r2, [r3, #40]	; 0x28
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:116
		impLeft = ileft;
 800218e:	68fb      	ldr	r3, [r7, #12]
 8002190:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002192:	631a      	str	r2, [r3, #48]	; 0x30
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:117
		impRight = iright;
 8002194:	68fb      	ldr	r3, [r7, #12]
 8002196:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002198:	635a      	str	r2, [r3, #52]	; 0x34
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:118
		impPush = ipush;
 800219a:	68fb      	ldr	r3, [r7, #12]
 800219c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800219e:	62da      	str	r2, [r3, #44]	; 0x2c
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:119
		buttonPush.setup(impPush, Button::ActiveType::ACTIVE_LOW);
 80021a0:	68fb      	ldr	r3, [r7, #12]
 80021a2:	f103 0038 	add.w	r0, r3, #56	; 0x38
 80021a6:	68fb      	ldr	r3, [r7, #12]
 80021a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80021aa:	2201      	movs	r2, #1
 80021ac:	4619      	mov	r1, r3
 80021ae:	f7ff fe41 	bl	8001e34 <Button::setup(Gpio*, Button::ActiveType)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:120
		imp.setup(impLeft, impRight, &buttonPush);
 80021b2:	68fb      	ldr	r3, [r7, #12]
 80021b4:	f103 0040 	add.w	r0, r3, #64	; 0x40
 80021b8:	68fb      	ldr	r3, [r7, #12]
 80021ba:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80021bc:	68fb      	ldr	r3, [r7, #12]
 80021be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80021c0:	68fb      	ldr	r3, [r7, #12]
 80021c2:	3338      	adds	r3, #56	; 0x38
 80021c4:	f7ff fee1 	bl	8001f8a <Impulsator::setup(Gpio*, Gpio*, Button*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:122

		for (uint16_t i = 0; i<BUFFERSIZE; i++)	buffer[i] = NONE;
 80021c8:	2300      	movs	r3, #0
 80021ca:	82fb      	strh	r3, [r7, #22]
 80021cc:	8afb      	ldrh	r3, [r7, #22]
 80021ce:	2b03      	cmp	r3, #3
 80021d0:	dc07      	bgt.n	80021e2 <Keyboard::Keyboard(Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*)+0x9e>
 80021d2:	8afb      	ldrh	r3, [r7, #22]
 80021d4:	68fa      	ldr	r2, [r7, #12]
 80021d6:	2100      	movs	r1, #0
 80021d8:	54d1      	strb	r1, [r2, r3]
 80021da:	8afb      	ldrh	r3, [r7, #22]
 80021dc:	3301      	adds	r3, #1
 80021de:	82fb      	strh	r3, [r7, #22]
 80021e0:	e7f4      	b.n	80021cc <Keyboard::Keyboard(Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*, Gpio*)+0x88>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:123
	}
 80021e2:	68fb      	ldr	r3, [r7, #12]
 80021e4:	4618      	mov	r0, r3
 80021e6:	3718      	adds	r7, #24
 80021e8:	46bd      	mov	sp, r7
 80021ea:	bd80      	pop	{r7, pc}

080021ec <Keyboard::co10ms()>:
_ZN8Keyboard6co10msEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:126


	void co10ms(){
 80021ec:	b580      	push	{r7, lr}
 80021ee:	b084      	sub	sp, #16
 80021f0:	af00      	add	r7, sp, #0
 80021f2:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:127
		imp.co10ms();	// teraz impulsator
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	3340      	adds	r3, #64	; 0x40
 80021f8:	4618      	mov	r0, r3
 80021fa:	f7ff fef1 	bl	8001fe0 <Impulsator::co10ms()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:129
		static Key oldKey = NONE;
		Key newKey = getUnbufferedKey();
 80021fe:	6878      	ldr	r0, [r7, #4]
 8002200:	f000 f818 	bl	8002234 <Keyboard::getUnbufferedKey()>
 8002204:	4603      	mov	r3, r0
 8002206:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:130
		if (oldKey != newKey){
 8002208:	4b09      	ldr	r3, [pc, #36]	; (8002230 <Keyboard::co10ms()+0x44>)
 800220a:	781b      	ldrb	r3, [r3, #0]
 800220c:	7bfa      	ldrb	r2, [r7, #15]
 800220e:	429a      	cmp	r2, r3
 8002210:	d00a      	beq.n	8002228 <Keyboard::co10ms()+0x3c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:131
			oldKey = newKey;
 8002212:	4a07      	ldr	r2, [pc, #28]	; (8002230 <Keyboard::co10ms()+0x44>)
 8002214:	7bfb      	ldrb	r3, [r7, #15]
 8002216:	7013      	strb	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:132
			if (newKey != NONE) addToBuffer(newKey);
 8002218:	7bfb      	ldrb	r3, [r7, #15]
 800221a:	2b00      	cmp	r3, #0
 800221c:	d004      	beq.n	8002228 <Keyboard::co10ms()+0x3c>
 800221e:	7bfb      	ldrb	r3, [r7, #15]
 8002220:	4619      	mov	r1, r3
 8002222:	6878      	ldr	r0, [r7, #4]
 8002224:	f7ff ff14 	bl	8002050 <Keyboard::addToBuffer(Keyboard::Key)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:134
		}
	}
 8002228:	3710      	adds	r7, #16
 800222a:	46bd      	mov	sp, r7
 800222c:	bd80      	pop	{r7, pc}
 800222e:	bf00      	nop
 8002230:	200003cc 	.word	0x200003cc

08002234 <Keyboard::getUnbufferedKey()>:
getUnbufferedKey():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:146

	Key getKey(){
		return getFromBuffer();
	}

	Key getUnbufferedKey(){
 8002234:	b580      	push	{r7, lr}
 8002236:	b084      	sub	sp, #16
 8002238:	af00      	add	r7, sp, #0
 800223a:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:147
		Key key = getImpulsatorKey();
 800223c:	6878      	ldr	r0, [r7, #4]
 800223e:	f7ff ff57 	bl	80020f0 <Keyboard::getImpulsatorKey()>
 8002242:	4603      	mov	r3, r0
 8002244:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:148
		if (key != Key::NONE) return key;
 8002246:	7bfb      	ldrb	r3, [r7, #15]
 8002248:	2b00      	cmp	r3, #0
 800224a:	d001      	beq.n	8002250 <Keyboard::getUnbufferedKey()+0x1c>
 800224c:	7bfb      	ldrb	r3, [r7, #15]
 800224e:	e003      	b.n	8002258 <Keyboard::getUnbufferedKey()+0x24>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:149
		return getPressedKey();
 8002250:	6878      	ldr	r0, [r7, #4]
 8002252:	f7ff ff10 	bl	8002076 <Keyboard::getPressedKey()>
 8002256:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:150
	}
 8002258:	4618      	mov	r0, r3
 800225a:	3710      	adds	r7, #16
 800225c:	46bd      	mov	sp, r7
 800225e:	bd80      	pop	{r7, pc}

08002260 <ST7032I::ST7032I()>:
_ZN7ST7032IC2Ev.lto_priv.2():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:84
	inline void delayMs(uint32_t milis){ Hardware::delayMs(milis); }

public:
	//	ST7032I(I2C_HandleTypeDef * i2cHandle){ hi2c = i2cHandle; };

	ST7032I(){;}
 8002260:	b480      	push	{r7}
 8002262:	b083      	sub	sp, #12
 8002264:	af00      	add	r7, sp, #0
 8002266:	6078      	str	r0, [r7, #4]
 8002268:	687b      	ldr	r3, [r7, #4]
 800226a:	4618      	mov	r0, r3
 800226c:	370c      	adds	r7, #12
 800226e:	46bd      	mov	sp, r7
 8002270:	bc80      	pop	{r7}
 8002272:	4770      	bx	lr

08002274 <TextLcd::TextLcd(ST7032I*)>:
_ZN7TextLcdC2EP7ST7032I.lto_priv.1():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:28
	TextLcd(ST7032I * lcdDriver) {
 8002274:	b580      	push	{r7, lr}
 8002276:	b082      	sub	sp, #8
 8002278:	af00      	add	r7, sp, #0
 800227a:	6078      	str	r0, [r7, #4]
 800227c:	6039      	str	r1, [r7, #0]
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	2200      	movs	r2, #0
 8002282:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:29
		init(lcdDriver);
 8002284:	6839      	ldr	r1, [r7, #0]
 8002286:	6878      	ldr	r0, [r7, #4]
 8002288:	f000 f805 	bl	8002296 <TextLcd::init(ST7032I*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:30
	}
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	4618      	mov	r0, r3
 8002290:	3708      	adds	r7, #8
 8002292:	46bd      	mov	sp, r7
 8002294:	bd80      	pop	{r7, pc}

08002296 <TextLcd::init(ST7032I*)>:
init():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:32
	void init(ST7032I * lcdDriver) {
 8002296:	b480      	push	{r7}
 8002298:	b083      	sub	sp, #12
 800229a:	af00      	add	r7, sp, #0
 800229c:	6078      	str	r0, [r7, #4]
 800229e:	6039      	str	r1, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:33
		driver = lcdDriver;
 80022a0:	687b      	ldr	r3, [r7, #4]
 80022a2:	683a      	ldr	r2, [r7, #0]
 80022a4:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:34
	}
 80022a6:	370c      	adds	r7, #12
 80022a8:	46bd      	mov	sp, r7
 80022aa:	bc80      	pop	{r7}
 80022ac:	4770      	bx	lr

080022ae <TextLcd::clrScrHome()>:
_ZN7TextLcd10clrScrHomeEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:82

	bool home(){
		return driver->homeScreen();
	}

	bool clrScrHome(){
 80022ae:	b580      	push	{r7, lr}
 80022b0:	b082      	sub	sp, #8
 80022b2:	af00      	add	r7, sp, #0
 80022b4:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:83
		return driver->clearScreen();
 80022b6:	687b      	ldr	r3, [r7, #4]
 80022b8:	681b      	ldr	r3, [r3, #0]
 80022ba:	4618      	mov	r0, r3
 80022bc:	f7fe fe46 	bl	8000f4c <ST7032I::clearScreen()>
 80022c0:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:84
	}
 80022c2:	4618      	mov	r0, r3
 80022c4:	3708      	adds	r7, #8
 80022c6:	46bd      	mov	sp, r7
 80022c8:	bd80      	pop	{r7, pc}

080022ca <TextLcd::lcd_ON()>:
_ZN7TextLcd6lcd_ONEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:86

	bool lcd_ON(){
 80022ca:	b580      	push	{r7, lr}
 80022cc:	b082      	sub	sp, #8
 80022ce:	af00      	add	r7, sp, #0
 80022d0:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:87
		return driver->lcd_ON();
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	4618      	mov	r0, r3
 80022d8:	f7fe fe47 	bl	8000f6a <ST7032I::lcd_ON()>
 80022dc:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:88
	}
 80022de:	4618      	mov	r0, r3
 80022e0:	3708      	adds	r7, #8
 80022e2:	46bd      	mov	sp, r7
 80022e4:	bd80      	pop	{r7, pc}

080022e6 <Sterownik::Sterownik(Silnik*, Silnik*, Silnik*, Silnik*)>:
_ZN9SterownikC2EP6SilnikS1_S1_S1_.lto_priv.0():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:42
	Sterownik(Silnik * sPompaCO, Silnik * gPompaCWU, Silnik * gDmuchawa, Silnik * gPodajnik
 80022e6:	b580      	push	{r7, lr}
 80022e8:	b084      	sub	sp, #16
 80022ea:	af00      	add	r7, sp, #0
 80022ec:	60f8      	str	r0, [r7, #12]
 80022ee:	60b9      	str	r1, [r7, #8]
 80022f0:	607a      	str	r2, [r7, #4]
 80022f2:	603b      	str	r3, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:44
			){
 80022f4:	68fb      	ldr	r3, [r7, #12]
 80022f6:	2200      	movs	r2, #0
 80022f8:	701a      	strb	r2, [r3, #0]
 80022fa:	68fb      	ldr	r3, [r7, #12]
 80022fc:	2200      	movs	r2, #0
 80022fe:	705a      	strb	r2, [r3, #1]
 8002300:	68fb      	ldr	r3, [r7, #12]
 8002302:	3304      	adds	r3, #4
 8002304:	4618      	mov	r0, r3
 8002306:	f000 ffe1 	bl	80032cc <Praca::Praca()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:45
		pompaCO = sPompaCO;
 800230a:	68fb      	ldr	r3, [r7, #12]
 800230c:	68ba      	ldr	r2, [r7, #8]
 800230e:	619a      	str	r2, [r3, #24]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:46
		pompaCWU = gPompaCWU;
 8002310:	68fb      	ldr	r3, [r7, #12]
 8002312:	687a      	ldr	r2, [r7, #4]
 8002314:	61da      	str	r2, [r3, #28]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:47
		dmuchawa = gDmuchawa;
 8002316:	68fb      	ldr	r3, [r7, #12]
 8002318:	683a      	ldr	r2, [r7, #0]
 800231a:	621a      	str	r2, [r3, #32]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:48
		podajnik = gPodajnik;
 800231c:	68fb      	ldr	r3, [r7, #12]
 800231e:	69ba      	ldr	r2, [r7, #24]
 8002320:	625a      	str	r2, [r3, #36]	; 0x24
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:49
		alarmPodajnik = false;
 8002322:	68fb      	ldr	r3, [r7, #12]
 8002324:	2200      	movs	r2, #0
 8002326:	701a      	strb	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:50
		alarmSpadkuTemp = false;
 8002328:	68fb      	ldr	r3, [r7, #12]
 800232a:	2200      	movs	r2, #0
 800232c:	705a      	strb	r2, [r3, #1]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:55
	}
 800232e:	68fb      	ldr	r3, [r7, #12]
 8002330:	4618      	mov	r0, r3
 8002332:	3710      	adds	r7, #16
 8002334:	46bd      	mov	sp, r7
 8002336:	bd80      	pop	{r7, pc}

08002338 <Sterownik::getPraca()>:
_ZN9Sterownik8getPracaEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:110
	Praca * getPraca(){ return &praca;}
 8002338:	b480      	push	{r7}
 800233a:	b083      	sub	sp, #12
 800233c:	af00      	add	r7, sp, #0
 800233e:	6078      	str	r0, [r7, #4]
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	3304      	adds	r3, #4
 8002344:	4618      	mov	r0, r3
 8002346:	370c      	adds	r7, #12
 8002348:	46bd      	mov	sp, r7
 800234a:	bc80      	pop	{r7}
 800234c:	4770      	bx	lr
	...

08002350 <Menu::poll()>:
_ZN4Menu4pollEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:16
#include "Keyboard.h"
#include "TextLcd.h"
#include "HMI.h"
#include "Parameter.h"

void Menu::poll(){
 8002350:	b590      	push	{r4, r7, lr}
 8002352:	b085      	sub	sp, #20
 8002354:	af00      	add	r7, sp, #0
 8002356:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:17
	Keyboard::Key key = keys->getKey();
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	685b      	ldr	r3, [r3, #4]
 800235c:	4618      	mov	r0, r3
 800235e:	f002 f8ee 	bl	800453e <Keyboard::getKey()>
 8002362:	4603      	mov	r3, r0
 8002364:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:18
	if (key == Keyboard::Key::NONE) return;
 8002366:	7bfb      	ldrb	r3, [r7, #15]
 8002368:	2b00      	cmp	r3, #0
 800236a:	f000 82c9 	beq.w	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:42
	//	//
	//	//
	//	//
	//	//		//*****************************

	if (editMode){
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	7d1b      	ldrb	r3, [r3, #20]
 8002372:	2b00      	cmp	r3, #0
 8002374:	d005      	beq.n	8002382 <Menu::poll()+0x32>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:43
		edit(key);
 8002376:	7bfb      	ldrb	r3, [r7, #15]
 8002378:	4619      	mov	r1, r3
 800237a:	6878      	ldr	r0, [r7, #4]
 800237c:	f000 fde4 	bl	8002f48 <Menu::edit(Keyboard::Key)>
 8002380:	e2be      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:49
		return;
	}

	// odrzucanie CANCEL z impulsatora  -zeby nie wychodzil od razu z opcji menu
	static bool enterToMem = false;
	if ((enterToMem)&&(key == Keyboard::Key::CANCEL)){
 8002382:	4bb1      	ldr	r3, [pc, #708]	; (8002648 <Menu::poll()+0x2f8>)
 8002384:	781b      	ldrb	r3, [r3, #0]
 8002386:	2b00      	cmp	r3, #0
 8002388:	d006      	beq.n	8002398 <Menu::poll()+0x48>
 800238a:	7bfb      	ldrb	r3, [r7, #15]
 800238c:	2b02      	cmp	r3, #2
 800238e:	d103      	bne.n	8002398 <Menu::poll()+0x48>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:50
		enterToMem = false;
 8002390:	4bad      	ldr	r3, [pc, #692]	; (8002648 <Menu::poll()+0x2f8>)
 8002392:	2200      	movs	r2, #0
 8002394:	701a      	strb	r2, [r3, #0]
 8002396:	e2b3      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:53
		return;
	}
	enterToMem = (key == Keyboard::Key::ENTER);
 8002398:	7bfb      	ldrb	r3, [r7, #15]
 800239a:	2b01      	cmp	r3, #1
 800239c:	bf0c      	ite	eq
 800239e:	2301      	moveq	r3, #1
 80023a0:	2300      	movne	r3, #0
 80023a2:	b2da      	uxtb	r2, r3
 80023a4:	4ba8      	ldr	r3, [pc, #672]	; (8002648 <Menu::poll()+0x2f8>)
 80023a6:	701a      	strb	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:55

	switch(ekran){
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	7c1b      	ldrb	r3, [r3, #16]
 80023ac:	2b14      	cmp	r3, #20
 80023ae:	f200 82a3 	bhi.w	80028f8 <Menu::poll()+0x5a8>
 80023b2:	a201      	add	r2, pc, #4	; (adr r2, 80023b8 <Menu::poll()+0x68>)
 80023b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80023b8:	0800240d 	.word	0x0800240d
 80023bc:	08002443 	.word	0x08002443
 80023c0:	08002497 	.word	0x08002497
 80023c4:	080024cd 	.word	0x080024cd
 80023c8:	08002503 	.word	0x08002503
 80023cc:	08002539 	.word	0x08002539
 80023d0:	0800256f 	.word	0x0800256f
 80023d4:	080025a5 	.word	0x080025a5
 80023d8:	080025db 	.word	0x080025db
 80023dc:	08002611 	.word	0x08002611
 80023e0:	0800264d 	.word	0x0800264d
 80023e4:	08002683 	.word	0x08002683
 80023e8:	080026b9 	.word	0x080026b9
 80023ec:	080026ef 	.word	0x080026ef
 80023f0:	08002725 	.word	0x08002725
 80023f4:	0800275b 	.word	0x0800275b
 80023f8:	08002791 	.word	0x08002791
 80023fc:	080027f3 	.word	0x080027f3
 8002400:	08002829 	.word	0x08002829
 8002404:	08002869 	.word	0x08002869
 8002408:	080028c3 	.word	0x080028c3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:58
	case e_AUTOMAT:
	{
		switch (key){
 800240c:	7bfb      	ldrb	r3, [r7, #15]
 800240e:	2b03      	cmp	r3, #3
 8002410:	d008      	beq.n	8002424 <Menu::poll()+0xd4>
 8002412:	2b04      	cmp	r3, #4
 8002414:	d00b      	beq.n	800242e <Menu::poll()+0xde>
 8002416:	2b01      	cmp	r3, #1
 8002418:	d10e      	bne.n	8002438 <Menu::poll()+0xe8>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:59
		case Keyboard::Key::ENTER:	goToEdit(Parameter::Nazwa::TEMPERATURA_CO); break;
 800241a:	2102      	movs	r1, #2
 800241c:	6878      	ldr	r0, [r7, #4]
 800241e:	f002 faa7 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:63
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e1_PRACA_RECZNA); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002422:	e26d      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:60
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e1_PRACA_RECZNA); break;
 8002424:	2101      	movs	r1, #1
 8002426:	6878      	ldr	r0, [r7, #4]
 8002428:	f002 fa06 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:63
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 800242c:	e268      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:61
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 800242e:	2111      	movs	r1, #17
 8002430:	6878      	ldr	r0, [r7, #4]
 8002432:	f002 fa01 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:63
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002436:	e263      	b.n	8002900 <Menu::poll()+0x5b0>
 8002438:	2100      	movs	r1, #0
 800243a:	6878      	ldr	r0, [r7, #4]
 800243c:	f002 f9fc 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 8002440:	e25e      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:68
		}
	}break;
	case e1_PRACA_RECZNA:
	{
		switch (key){
 8002442:	7bfb      	ldrb	r3, [r7, #15]
 8002444:	2b03      	cmp	r3, #3
 8002446:	d017      	beq.n	8002478 <Menu::poll()+0x128>
 8002448:	2b04      	cmp	r3, #4
 800244a:	d01a      	beq.n	8002482 <Menu::poll()+0x132>
 800244c:	2b01      	cmp	r3, #1
 800244e:	d11d      	bne.n	800248c <Menu::poll()+0x13c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:70
		case Keyboard::Key::ENTER:
			praca->setManualMode(!praca->isInManualMode());
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	68dc      	ldr	r4, [r3, #12]
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	68db      	ldr	r3, [r3, #12]
 8002458:	4618      	mov	r0, r3
 800245a:	f002 f9d1 	bl	8004800 <Praca::isInManualMode()>
 800245e:	4603      	mov	r3, r0
 8002460:	f083 0301 	eor.w	r3, r3, #1
 8002464:	b2db      	uxtb	r3, r3
 8002466:	4619      	mov	r1, r3
 8002468:	4620      	mov	r0, r4
 800246a:	f002 f9b7 	bl	80047dc <Praca::setManualMode(bool)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:71
			goToEkran(EKRAN::e1_PRACA_RECZNA);
 800246e:	2101      	movs	r1, #1
 8002470:	6878      	ldr	r0, [r7, #4]
 8002472:	f002 f9e1 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:76
			break;
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002476:	e243      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:73
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
 8002478:	2102      	movs	r1, #2
 800247a:	6878      	ldr	r0, [r7, #4]
 800247c:	f002 f9dc 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:76
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002480:	e23e      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:74
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 8002482:	2111      	movs	r1, #17
 8002484:	6878      	ldr	r0, [r7, #4]
 8002486:	f002 f9d7 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:76
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 800248a:	e239      	b.n	8002900 <Menu::poll()+0x5b0>
 800248c:	2100      	movs	r1, #0
 800248e:	6878      	ldr	r0, [r7, #4]
 8002490:	f002 f9d2 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 8002494:	e234      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:81
		}
	}break;
	case e2_PODAJNIK_OPALU:
	{
		switch (key){
 8002496:	7bfb      	ldrb	r3, [r7, #15]
 8002498:	2b03      	cmp	r3, #3
 800249a:	d008      	beq.n	80024ae <Menu::poll()+0x15e>
 800249c:	2b04      	cmp	r3, #4
 800249e:	d00b      	beq.n	80024b8 <Menu::poll()+0x168>
 80024a0:	2b01      	cmp	r3, #1
 80024a2:	d10e      	bne.n	80024c2 <Menu::poll()+0x172>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:82
		case Keyboard::Key::ENTER:	goToEkran(EKRAN::e2_1_PODAJNIK_PRACA); break;
 80024a4:	2103      	movs	r1, #3
 80024a6:	6878      	ldr	r0, [r7, #4]
 80024a8:	f002 f9c6 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:86
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e1_PRACA_RECZNA); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 80024ac:	e228      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:83
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
 80024ae:	2106      	movs	r1, #6
 80024b0:	6878      	ldr	r0, [r7, #4]
 80024b2:	f002 f9c1 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:86
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 80024b6:	e223      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:84
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e1_PRACA_RECZNA); break;
 80024b8:	2101      	movs	r1, #1
 80024ba:	6878      	ldr	r0, [r7, #4]
 80024bc:	f002 f9bc 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:86
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 80024c0:	e21e      	b.n	8002900 <Menu::poll()+0x5b0>
 80024c2:	2100      	movs	r1, #0
 80024c4:	6878      	ldr	r0, [r7, #4]
 80024c6:	f002 f9b7 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 80024ca:	e219      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:91
		}
	}break;
	case e2_1_PODAJNIK_PRACA:
	{
		switch (key){
 80024cc:	7bfb      	ldrb	r3, [r7, #15]
 80024ce:	2b03      	cmp	r3, #3
 80024d0:	d008      	beq.n	80024e4 <Menu::poll()+0x194>
 80024d2:	2b04      	cmp	r3, #4
 80024d4:	d00b      	beq.n	80024ee <Menu::poll()+0x19e>
 80024d6:	2b01      	cmp	r3, #1
 80024d8:	d10e      	bne.n	80024f8 <Menu::poll()+0x1a8>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:92
		case Keyboard::Key::ENTER:	goToEdit(Parameter::Nazwa::PODAJNIK_PRACA); break;
 80024da:	2105      	movs	r1, #5
 80024dc:	6878      	ldr	r0, [r7, #4]
 80024de:	f002 fa47 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:96
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e2_2_PODAJNIK_PRZERWA); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e2_3_PODAJNIK_OPOZNIENIE); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
 80024e2:	e20d      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:93
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e2_2_PODAJNIK_PRZERWA); break;
 80024e4:	2104      	movs	r1, #4
 80024e6:	6878      	ldr	r0, [r7, #4]
 80024e8:	f002 f9a6 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:96
		default:					goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
 80024ec:	e208      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:94
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e2_3_PODAJNIK_OPOZNIENIE); break;
 80024ee:	2105      	movs	r1, #5
 80024f0:	6878      	ldr	r0, [r7, #4]
 80024f2:	f002 f9a1 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:96
		default:					goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
 80024f6:	e203      	b.n	8002900 <Menu::poll()+0x5b0>
 80024f8:	2102      	movs	r1, #2
 80024fa:	6878      	ldr	r0, [r7, #4]
 80024fc:	f002 f99c 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 8002500:	e1fe      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:101
		}
	}break;
	case e2_2_PODAJNIK_PRZERWA:
	{
		switch (key){
 8002502:	7bfb      	ldrb	r3, [r7, #15]
 8002504:	2b03      	cmp	r3, #3
 8002506:	d008      	beq.n	800251a <Menu::poll()+0x1ca>
 8002508:	2b04      	cmp	r3, #4
 800250a:	d00b      	beq.n	8002524 <Menu::poll()+0x1d4>
 800250c:	2b01      	cmp	r3, #1
 800250e:	d10e      	bne.n	800252e <Menu::poll()+0x1de>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:102
		case Keyboard::Key::ENTER:	goToEdit(Parameter::PODAJNIK_PRZERWA);  break;	//(5 min:  break; sek):  ;
 8002510:	2106      	movs	r1, #6
 8002512:	6878      	ldr	r0, [r7, #4]
 8002514:	f002 fa2c 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:106
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e2_3_PODAJNIK_OPOZNIENIE); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e2_1_PODAJNIK_PRACA); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
 8002518:	e1f2      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:103
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e2_3_PODAJNIK_OPOZNIENIE); break;
 800251a:	2105      	movs	r1, #5
 800251c:	6878      	ldr	r0, [r7, #4]
 800251e:	f002 f98b 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:106
		default:					goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
 8002522:	e1ed      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:104
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e2_1_PODAJNIK_PRACA); break;
 8002524:	2103      	movs	r1, #3
 8002526:	6878      	ldr	r0, [r7, #4]
 8002528:	f002 f986 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:106
		default:					goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
 800252c:	e1e8      	b.n	8002900 <Menu::poll()+0x5b0>
 800252e:	2102      	movs	r1, #2
 8002530:	6878      	ldr	r0, [r7, #4]
 8002532:	f002 f981 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 8002536:	e1e3      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:111
		}
	}break;
	case e2_3_PODAJNIK_OPOZNIENIE:
	{
		switch (key){
 8002538:	7bfb      	ldrb	r3, [r7, #15]
 800253a:	2b03      	cmp	r3, #3
 800253c:	d008      	beq.n	8002550 <Menu::poll()+0x200>
 800253e:	2b04      	cmp	r3, #4
 8002540:	d00b      	beq.n	800255a <Menu::poll()+0x20a>
 8002542:	2b01      	cmp	r3, #1
 8002544:	d10e      	bne.n	8002564 <Menu::poll()+0x214>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:112
		case Keyboard::Key::ENTER:	goToEdit(Parameter::PODAJNIK_OPOZNIENIE); break;  //(min:  break; 30 sek):  ;
 8002546:	2107      	movs	r1, #7
 8002548:	6878      	ldr	r0, [r7, #4]
 800254a:	f002 fa11 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:116
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e2_1_PODAJNIK_PRACA); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e2_2_PODAJNIK_PRZERWA); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
 800254e:	e1d7      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:113
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e2_1_PODAJNIK_PRACA); break;
 8002550:	2103      	movs	r1, #3
 8002552:	6878      	ldr	r0, [r7, #4]
 8002554:	f002 f970 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:116
		default:					goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
 8002558:	e1d2      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:114
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e2_2_PODAJNIK_PRZERWA); break;
 800255a:	2104      	movs	r1, #4
 800255c:	6878      	ldr	r0, [r7, #4]
 800255e:	f002 f96b 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:116
		default:					goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
 8002562:	e1cd      	b.n	8002900 <Menu::poll()+0x5b0>
 8002564:	2102      	movs	r1, #2
 8002566:	6878      	ldr	r0, [r7, #4]
 8002568:	f002 f966 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 800256c:	e1c8      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:121
		}
	}break;
	case e3_PODTRZYMANIE_PALENIA:
	{
		switch (key){
 800256e:	7bfb      	ldrb	r3, [r7, #15]
 8002570:	2b03      	cmp	r3, #3
 8002572:	d008      	beq.n	8002586 <Menu::poll()+0x236>
 8002574:	2b04      	cmp	r3, #4
 8002576:	d00b      	beq.n	8002590 <Menu::poll()+0x240>
 8002578:	2b01      	cmp	r3, #1
 800257a:	d10e      	bne.n	800259a <Menu::poll()+0x24a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:122
		case Keyboard::Key::ENTER:	goToEkran(EKRAN::e3_1_PODTRZYMANIE_PRACA); break;  //(min:  break; 30 sek):  ;
 800257c:	2107      	movs	r1, #7
 800257e:	6878      	ldr	r0, [r7, #4]
 8002580:	f002 f95a 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:126
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e4_POMPA_CO); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002584:	e1bc      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:123
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e4_POMPA_CO); break;
 8002586:	210a      	movs	r1, #10
 8002588:	6878      	ldr	r0, [r7, #4]
 800258a:	f002 f955 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:126
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 800258e:	e1b7      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:124
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e2_PODAJNIK_OPALU); break;
 8002590:	2102      	movs	r1, #2
 8002592:	6878      	ldr	r0, [r7, #4]
 8002594:	f002 f950 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:126
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002598:	e1b2      	b.n	8002900 <Menu::poll()+0x5b0>
 800259a:	2100      	movs	r1, #0
 800259c:	6878      	ldr	r0, [r7, #4]
 800259e:	f002 f94b 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 80025a2:	e1ad      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:131
		}
	}break;
	case e3_1_PODTRZYMANIE_PRACA:
	{
		switch (key){
 80025a4:	7bfb      	ldrb	r3, [r7, #15]
 80025a6:	2b03      	cmp	r3, #3
 80025a8:	d008      	beq.n	80025bc <Menu::poll()+0x26c>
 80025aa:	2b04      	cmp	r3, #4
 80025ac:	d00b      	beq.n	80025c6 <Menu::poll()+0x276>
 80025ae:	2b01      	cmp	r3, #1
 80025b0:	d10e      	bne.n	80025d0 <Menu::poll()+0x280>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:132
		case Keyboard::Key::ENTER:	goToEdit(Parameter::PODTRZYMANIE_PRACA); break;  // ( 3 sek) 1-59:  ;
 80025b2:	2108      	movs	r1, #8
 80025b4:	6878      	ldr	r0, [r7, #4]
 80025b6:	f002 f9db 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:136
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e3_2_PODTRZYMANIE_PRZERWA); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e3_3_OPOZNIENIE_WLACZENIA_DMUCHAWY); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
 80025ba:	e1a1      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:133
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e3_2_PODTRZYMANIE_PRZERWA); break;
 80025bc:	2108      	movs	r1, #8
 80025be:	6878      	ldr	r0, [r7, #4]
 80025c0:	f002 f93a 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:136
		default:					goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
 80025c4:	e19c      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:134
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e3_3_OPOZNIENIE_WLACZENIA_DMUCHAWY); break;
 80025c6:	2109      	movs	r1, #9
 80025c8:	6878      	ldr	r0, [r7, #4]
 80025ca:	f002 f935 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:136
		default:					goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
 80025ce:	e197      	b.n	8002900 <Menu::poll()+0x5b0>
 80025d0:	2106      	movs	r1, #6
 80025d2:	6878      	ldr	r0, [r7, #4]
 80025d4:	f002 f930 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 80025d8:	e192      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:141
		}
	}break;
	case e3_2_PODTRZYMANIE_PRZERWA:
	{
		switch (key){
 80025da:	7bfb      	ldrb	r3, [r7, #15]
 80025dc:	2b03      	cmp	r3, #3
 80025de:	d008      	beq.n	80025f2 <Menu::poll()+0x2a2>
 80025e0:	2b04      	cmp	r3, #4
 80025e2:	d00b      	beq.n	80025fc <Menu::poll()+0x2ac>
 80025e4:	2b01      	cmp	r3, #1
 80025e6:	d10e      	bne.n	8002606 <Menu::poll()+0x2b6>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:142
		case Keyboard::Key::ENTER:	goToEdit(Parameter::PODTRZYMANIE_PRZERWA); break;  //( 29 min ):  ;
 80025e8:	2109      	movs	r1, #9
 80025ea:	6878      	ldr	r0, [r7, #4]
 80025ec:	f002 f9c0 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:146
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e3_3_OPOZNIENIE_WLACZENIA_DMUCHAWY); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e3_1_PODTRZYMANIE_PRACA); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
 80025f0:	e186      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:143
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e3_3_OPOZNIENIE_WLACZENIA_DMUCHAWY); break;
 80025f2:	2109      	movs	r1, #9
 80025f4:	6878      	ldr	r0, [r7, #4]
 80025f6:	f002 f91f 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:146
		default:					goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
 80025fa:	e181      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:144
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e3_1_PODTRZYMANIE_PRACA); break;
 80025fc:	2107      	movs	r1, #7
 80025fe:	6878      	ldr	r0, [r7, #4]
 8002600:	f002 f91a 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:146
		default:					goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
 8002604:	e17c      	b.n	8002900 <Menu::poll()+0x5b0>
 8002606:	2106      	movs	r1, #6
 8002608:	6878      	ldr	r0, [r7, #4]
 800260a:	f002 f915 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 800260e:	e177      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:151
		}
	}break;
	case e3_3_OPOZNIENIE_WLACZENIA_DMUCHAWY:
	{
		switch (key){
 8002610:	7bfb      	ldrb	r3, [r7, #15]
 8002612:	2b03      	cmp	r3, #3
 8002614:	d008      	beq.n	8002628 <Menu::poll()+0x2d8>
 8002616:	2b04      	cmp	r3, #4
 8002618:	d00b      	beq.n	8002632 <Menu::poll()+0x2e2>
 800261a:	2b01      	cmp	r3, #1
 800261c:	d10e      	bne.n	800263c <Menu::poll()+0x2ec>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:152
		case Keyboard::Key::ENTER:	goToEdit(Parameter::OPOZNIENIE_DMUCHAWY); break;  //(25 sek):  ;
 800261e:	210a      	movs	r1, #10
 8002620:	6878      	ldr	r0, [r7, #4]
 8002622:	f002 f9a5 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:156
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e3_1_PODTRZYMANIE_PRACA); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e3_2_PODTRZYMANIE_PRZERWA); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
 8002626:	e16b      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:153
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e3_1_PODTRZYMANIE_PRACA); break;
 8002628:	2107      	movs	r1, #7
 800262a:	6878      	ldr	r0, [r7, #4]
 800262c:	f002 f904 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:156
		default:					goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
 8002630:	e166      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:154
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e3_2_PODTRZYMANIE_PRZERWA); break;
 8002632:	2108      	movs	r1, #8
 8002634:	6878      	ldr	r0, [r7, #4]
 8002636:	f002 f8ff 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:156
		default:					goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
 800263a:	e161      	b.n	8002900 <Menu::poll()+0x5b0>
 800263c:	2106      	movs	r1, #6
 800263e:	6878      	ldr	r0, [r7, #4]
 8002640:	f002 f8fa 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 8002644:	e15c      	b.n	8002900 <Menu::poll()+0x5b0>
 8002646:	bf00      	nop
 8002648:	20000324 	.word	0x20000324
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:161
		}
	}break;
	case e4_POMPA_CO:
	{
		switch (key){
 800264c:	7bfb      	ldrb	r3, [r7, #15]
 800264e:	2b03      	cmp	r3, #3
 8002650:	d008      	beq.n	8002664 <Menu::poll()+0x314>
 8002652:	2b04      	cmp	r3, #4
 8002654:	d00b      	beq.n	800266e <Menu::poll()+0x31e>
 8002656:	2b01      	cmp	r3, #1
 8002658:	d10e      	bne.n	8002678 <Menu::poll()+0x328>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:162
		case Keyboard::Key::ENTER:	goToEdit(Parameter::POMPA_CO_TEMP_ZALACZ); break; 	//Temp zal. 40 oC 50-80:  ;
 800265a:	2104      	movs	r1, #4
 800265c:	6878      	ldr	r0, [r7, #4]
 800265e:	f002 f987 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:166
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e5_ALARM_SPADKU_TEMPERATURY); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002662:	e14d      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:163
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e5_ALARM_SPADKU_TEMPERATURY); break;
 8002664:	210b      	movs	r1, #11
 8002666:	6878      	ldr	r0, [r7, #4]
 8002668:	f002 f8e6 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:166
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 800266c:	e148      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:164
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e3_PODTRZYMANIE_PALENIA); break;
 800266e:	2106      	movs	r1, #6
 8002670:	6878      	ldr	r0, [r7, #4]
 8002672:	f002 f8e1 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:166
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002676:	e143      	b.n	8002900 <Menu::poll()+0x5b0>
 8002678:	2100      	movs	r1, #0
 800267a:	6878      	ldr	r0, [r7, #4]
 800267c:	f002 f8dc 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 8002680:	e13e      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:171
		}
	}break;
	case e5_ALARM_SPADKU_TEMPERATURY:
	{
		switch (key){
 8002682:	7bfb      	ldrb	r3, [r7, #15]
 8002684:	2b03      	cmp	r3, #3
 8002686:	d008      	beq.n	800269a <Menu::poll()+0x34a>
 8002688:	2b04      	cmp	r3, #4
 800268a:	d00b      	beq.n	80026a4 <Menu::poll()+0x354>
 800268c:	2b01      	cmp	r3, #1
 800268e:	d10e      	bne.n	80026ae <Menu::poll()+0x35e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:172
		case Keyboard::Key::ENTER:	goToEdit(Parameter::Nazwa::ALARM_SPADKU_TEMP); break; //:  ; godz min:  ;
 8002690:	210c      	movs	r1, #12
 8002692:	6878      	ldr	r0, [r7, #4]
 8002694:	f002 f96c 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:176
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e6_Dmuchawa); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e4_POMPA_CO); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002698:	e132      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:173
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e6_Dmuchawa); break;
 800269a:	210c      	movs	r1, #12
 800269c:	6878      	ldr	r0, [r7, #4]
 800269e:	f002 f8cb 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:176
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 80026a2:	e12d      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:174
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e4_POMPA_CO); break;
 80026a4:	210a      	movs	r1, #10
 80026a6:	6878      	ldr	r0, [r7, #4]
 80026a8:	f002 f8c6 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:176
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 80026ac:	e128      	b.n	8002900 <Menu::poll()+0x5b0>
 80026ae:	2100      	movs	r1, #0
 80026b0:	6878      	ldr	r0, [r7, #4]
 80026b2:	f002 f8c1 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 80026b6:	e123      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:181
		}
	}break;
	case e6_Dmuchawa:
	{
		switch (key){
 80026b8:	7bfb      	ldrb	r3, [r7, #15]
 80026ba:	2b03      	cmp	r3, #3
 80026bc:	d008      	beq.n	80026d0 <Menu::poll()+0x380>
 80026be:	2b04      	cmp	r3, #4
 80026c0:	d00b      	beq.n	80026da <Menu::poll()+0x38a>
 80026c2:	2b01      	cmp	r3, #1
 80026c4:	d10e      	bne.n	80026e4 <Menu::poll()+0x394>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:182
		case Keyboard::Key::ENTER:	goToEdit(Parameter::Nazwa::DMUCHAWA_MOC); break;  //moc 1-4:
 80026c6:	210b      	movs	r1, #11
 80026c8:	6878      	ldr	r0, [r7, #4]
 80026ca:	f002 f951 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:186
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e7_HISTEREZA_CO); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e5_ALARM_SPADKU_TEMPERATURY); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 80026ce:	e117      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:183
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e7_HISTEREZA_CO); break;
 80026d0:	210d      	movs	r1, #13
 80026d2:	6878      	ldr	r0, [r7, #4]
 80026d4:	f002 f8b0 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:186
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 80026d8:	e112      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:184
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e5_ALARM_SPADKU_TEMPERATURY); break;
 80026da:	210b      	movs	r1, #11
 80026dc:	6878      	ldr	r0, [r7, #4]
 80026de:	f002 f8ab 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:186
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 80026e2:	e10d      	b.n	8002900 <Menu::poll()+0x5b0>
 80026e4:	2100      	movs	r1, #0
 80026e6:	6878      	ldr	r0, [r7, #4]
 80026e8:	f002 f8a6 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 80026ec:	e108      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:191
		}
	}break;
	case e7_HISTEREZA_CO:
	{
		switch (key){
 80026ee:	7bfb      	ldrb	r3, [r7, #15]
 80026f0:	2b03      	cmp	r3, #3
 80026f2:	d008      	beq.n	8002706 <Menu::poll()+0x3b6>
 80026f4:	2b04      	cmp	r3, #4
 80026f6:	d00b      	beq.n	8002710 <Menu::poll()+0x3c0>
 80026f8:	2b01      	cmp	r3, #1
 80026fa:	d10e      	bne.n	800271a <Menu::poll()+0x3ca>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:192
		case Keyboard::Key::ENTER:	goToEdit(Parameter::Nazwa::HISTEREZA_CO_TEMP); break; 	//2 oC (2-9):
 80026fc:	2103      	movs	r1, #3
 80026fe:	6878      	ldr	r0, [r7, #4]
 8002700:	f002 f936 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:196
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e8_POMPA_CWU); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e6_Dmuchawa); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002704:	e0fc      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:193
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e8_POMPA_CWU); break;
 8002706:	210e      	movs	r1, #14
 8002708:	6878      	ldr	r0, [r7, #4]
 800270a:	f002 f895 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:196
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 800270e:	e0f7      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:194
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e6_Dmuchawa); break;
 8002710:	210c      	movs	r1, #12
 8002712:	6878      	ldr	r0, [r7, #4]
 8002714:	f002 f890 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:196
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002718:	e0f2      	b.n	8002900 <Menu::poll()+0x5b0>
 800271a:	2100      	movs	r1, #0
 800271c:	6878      	ldr	r0, [r7, #4]
 800271e:	f002 f88b 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 8002722:	e0ed      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:201
		}
	}break;
	case e8_POMPA_CWU:
	{
		switch (key){
 8002724:	7bfb      	ldrb	r3, [r7, #15]
 8002726:	2b03      	cmp	r3, #3
 8002728:	d008      	beq.n	800273c <Menu::poll()+0x3ec>
 800272a:	2b04      	cmp	r3, #4
 800272c:	d00b      	beq.n	8002746 <Menu::poll()+0x3f6>
 800272e:	2b01      	cmp	r3, #1
 8002730:	d10e      	bne.n	8002750 <Menu::poll()+0x400>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:202
		case Keyboard::Key::ENTER:	goToEkran(EKRAN::e8_1_HISTEREZA_CWU); break;  	//Temp załączenia 50 oC:
 8002732:	210f      	movs	r1, #15
 8002734:	6878      	ldr	r0, [r7, #4]
 8002736:	f002 f87f 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:206
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e7_HISTEREZA_CO); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 800273a:	e0e1      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:203
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 800273c:	2111      	movs	r1, #17
 800273e:	6878      	ldr	r0, [r7, #4]
 8002740:	f002 f87a 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:206
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002744:	e0dc      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:204
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e7_HISTEREZA_CO); break;
 8002746:	210d      	movs	r1, #13
 8002748:	6878      	ldr	r0, [r7, #4]
 800274a:	f002 f875 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:206
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 800274e:	e0d7      	b.n	8002900 <Menu::poll()+0x5b0>
 8002750:	2100      	movs	r1, #0
 8002752:	6878      	ldr	r0, [r7, #4]
 8002754:	f002 f870 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 8002758:	e0d2      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:211
		}
	}break;
	case e8_1_HISTEREZA_CWU:
	{
		switch (key){
 800275a:	7bfb      	ldrb	r3, [r7, #15]
 800275c:	2b03      	cmp	r3, #3
 800275e:	d008      	beq.n	8002772 <Menu::poll()+0x422>
 8002760:	2b04      	cmp	r3, #4
 8002762:	d00b      	beq.n	800277c <Menu::poll()+0x42c>
 8002764:	2b01      	cmp	r3, #1
 8002766:	d10e      	bne.n	8002786 <Menu::poll()+0x436>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:212
		case Keyboard::Key::ENTER:	goToEdit(Parameter::HISTEREZA_CWU_TEMP); break;  //(25 sek):  ; break; //3 oC:  break;
 8002768:	210f      	movs	r1, #15
 800276a:	6878      	ldr	r0, [r7, #4]
 800276c:	f002 f900 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:216
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e8_2_TRYB_LETNI); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e8_2_TRYB_LETNI); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e8_POMPA_CWU); break;
 8002770:	e0c6      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:213
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e8_2_TRYB_LETNI); break;
 8002772:	2110      	movs	r1, #16
 8002774:	6878      	ldr	r0, [r7, #4]
 8002776:	f002 f85f 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:216
		default:					goToEkran(EKRAN::e8_POMPA_CWU); break;
 800277a:	e0c1      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:214
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e8_2_TRYB_LETNI); break;
 800277c:	2110      	movs	r1, #16
 800277e:	6878      	ldr	r0, [r7, #4]
 8002780:	f002 f85a 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:216
		default:					goToEkran(EKRAN::e8_POMPA_CWU); break;
 8002784:	e0bc      	b.n	8002900 <Menu::poll()+0x5b0>
 8002786:	210e      	movs	r1, #14
 8002788:	6878      	ldr	r0, [r7, #4]
 800278a:	f002 f855 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 800278e:	e0b7      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:221
		}
	}break;
	case e8_2_TRYB_LETNI:
	{
		switch (key){
 8002790:	7bfb      	ldrb	r3, [r7, #15]
 8002792:	2b03      	cmp	r3, #3
 8002794:	d01e      	beq.n	80027d4 <Menu::poll()+0x484>
 8002796:	2b04      	cmp	r3, #4
 8002798:	d021      	beq.n	80027de <Menu::poll()+0x48e>
 800279a:	2b01      	cmp	r3, #1
 800279c:	d124      	bne.n	80027e8 <Menu::poll()+0x498>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:224
		case Keyboard::Key::ENTER:
		{
			Parameter::SEZON sezon = Parameter::SEZON(Parameter::getValue(Parameter::Nazwa::TRYB_LETNI));
 800279e:	2010      	movs	r0, #16
 80027a0:	f001 ff24 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 80027a4:	4603      	mov	r3, r0
 80027a6:	73bb      	strb	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:225
			Parameter::setValue(Parameter::Nazwa::TRYB_LETNI, (sezon != Parameter::SEZON::ZIMA) ? Parameter::SEZON::ZIMA : Parameter::SEZON::LATO );
 80027a8:	7bbb      	ldrb	r3, [r7, #14]
 80027aa:	2b02      	cmp	r3, #2
 80027ac:	d001      	beq.n	80027b2 <Menu::poll()+0x462>
 80027ae:	2302      	movs	r3, #2
 80027b0:	e000      	b.n	80027b4 <Menu::poll()+0x464>
 80027b2:	2301      	movs	r3, #1
 80027b4:	4619      	mov	r1, r3
 80027b6:	2010      	movs	r0, #16
 80027b8:	f001 ff27 	bl	800460a <Parameter::setValue(Parameter::Nazwa, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:226
			praca->setTrybLetni(sezon);
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	68db      	ldr	r3, [r3, #12]
 80027c0:	7bba      	ldrb	r2, [r7, #14]
 80027c2:	4611      	mov	r1, r2
 80027c4:	4618      	mov	r0, r3
 80027c6:	f001 fffc 	bl	80047c2 <Praca::setTrybLetni(Parameter::SEZON)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:227
			goToEkran(EKRAN::e8_2_TRYB_LETNI);
 80027ca:	2110      	movs	r1, #16
 80027cc:	6878      	ldr	r0, [r7, #4]
 80027ce:	f002 f833 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:232
		}break;
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e8_1_HISTEREZA_CWU); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e8_1_HISTEREZA_CWU); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e8_POMPA_CWU); break;
 80027d2:	e095      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:229
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e8_1_HISTEREZA_CWU); break;
 80027d4:	210f      	movs	r1, #15
 80027d6:	6878      	ldr	r0, [r7, #4]
 80027d8:	f002 f82e 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:232
		default:					goToEkran(EKRAN::e8_POMPA_CWU); break;
 80027dc:	e090      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:230
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e8_1_HISTEREZA_CWU); break;
 80027de:	210f      	movs	r1, #15
 80027e0:	6878      	ldr	r0, [r7, #4]
 80027e2:	f002 f829 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:232
		default:					goToEkran(EKRAN::e8_POMPA_CWU); break;
 80027e6:	e08b      	b.n	8002900 <Menu::poll()+0x5b0>
 80027e8:	210e      	movs	r1, #14
 80027ea:	6878      	ldr	r0, [r7, #4]
 80027ec:	f002 f824 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 80027f0:	e086      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:237
		}
	}break;
	case e9_OPCJE_SERWISOWE:
	{
		switch (key){
 80027f2:	7bfb      	ldrb	r3, [r7, #15]
 80027f4:	2b03      	cmp	r3, #3
 80027f6:	d008      	beq.n	800280a <Menu::poll()+0x4ba>
 80027f8:	2b04      	cmp	r3, #4
 80027fa:	d00b      	beq.n	8002814 <Menu::poll()+0x4c4>
 80027fc:	2b01      	cmp	r3, #1
 80027fe:	d10e      	bne.n	800281e <Menu::poll()+0x4ce>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:238
		case Keyboard::Key::ENTER:	goToEkran(EKRAN::e9_1_USTAWIENIA_FABRYCZNE); break;  //(min:  break; 30 sek):  ;
 8002800:	2112      	movs	r1, #18
 8002802:	6878      	ldr	r0, [r7, #4]
 8002804:	f002 f818 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:242
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e1_PRACA_RECZNA); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e8_POMPA_CWU); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002808:	e07a      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:239
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e1_PRACA_RECZNA); break;
 800280a:	2101      	movs	r1, #1
 800280c:	6878      	ldr	r0, [r7, #4]
 800280e:	f002 f813 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:242
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 8002812:	e075      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:240
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e8_POMPA_CWU); break;
 8002814:	210e      	movs	r1, #14
 8002816:	6878      	ldr	r0, [r7, #4]
 8002818:	f002 f80e 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:242
		default:					goToEkran(EKRAN::e_AUTOMAT); break;
 800281c:	e070      	b.n	8002900 <Menu::poll()+0x5b0>
 800281e:	2100      	movs	r1, #0
 8002820:	6878      	ldr	r0, [r7, #4]
 8002822:	f002 f809 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 8002826:	e06b      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:247
		}
	}break;
	case e9_1_USTAWIENIA_FABRYCZNE:
	{
		switch (key){
 8002828:	7bfb      	ldrb	r3, [r7, #15]
 800282a:	2b03      	cmp	r3, #3
 800282c:	d00d      	beq.n	800284a <Menu::poll()+0x4fa>
 800282e:	2b04      	cmp	r3, #4
 8002830:	d010      	beq.n	8002854 <Menu::poll()+0x504>
 8002832:	2b01      	cmp	r3, #1
 8002834:	d113      	bne.n	800285e <Menu::poll()+0x50e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:249
		case Keyboard::Key::ENTER:
			Parameter::setDefaultValues();
 8002836:	f001 ffa7 	bl	8004788 <Parameter::setDefaultValues()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:250
			lcd->printXY(1,0, "  ZRESETOWANE!  ");
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	6898      	ldr	r0, [r3, #8]
 800283e:	4b32      	ldr	r3, [pc, #200]	; (8002908 <Menu::poll()+0x5b8>)
 8002840:	2200      	movs	r2, #0
 8002842:	2101      	movs	r1, #1
 8002844:	f001 fe9d 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:255
			break;
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e9_2_POMPA_CWU_AKTYWNA); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e9_3_ALARM_TEMP_PODAJNIKA); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 8002848:	e05a      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:252
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e9_2_POMPA_CWU_AKTYWNA); break;
 800284a:	2113      	movs	r1, #19
 800284c:	6878      	ldr	r0, [r7, #4]
 800284e:	f001 fff3 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:255
		default:					goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 8002852:	e055      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:253
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e9_3_ALARM_TEMP_PODAJNIKA); break;
 8002854:	2114      	movs	r1, #20
 8002856:	6878      	ldr	r0, [r7, #4]
 8002858:	f001 ffee 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:255
		default:					goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 800285c:	e050      	b.n	8002900 <Menu::poll()+0x5b0>
 800285e:	2111      	movs	r1, #17
 8002860:	6878      	ldr	r0, [r7, #4]
 8002862:	f001 ffe9 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 8002866:	e04b      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:260
		}
	}break;
	case e9_2_POMPA_CWU_AKTYWNA:
	{
		switch (key){
 8002868:	7bfb      	ldrb	r3, [r7, #15]
 800286a:	2b03      	cmp	r3, #3
 800286c:	d01a      	beq.n	80028a4 <Menu::poll()+0x554>
 800286e:	2b04      	cmp	r3, #4
 8002870:	d01d      	beq.n	80028ae <Menu::poll()+0x55e>
 8002872:	2b01      	cmp	r3, #1
 8002874:	d120      	bne.n	80028b8 <Menu::poll()+0x568>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:263
		case Keyboard::Key::ENTER:
		{
			bool aktywnaCWU = Parameter::getValue(Parameter::Nazwa::AKTYWNA_CWU); // aktywna/nieaktywna:
 8002876:	2011      	movs	r0, #17
 8002878:	f001 feb8 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 800287c:	4603      	mov	r3, r0
 800287e:	2b00      	cmp	r3, #0
 8002880:	bf14      	ite	ne
 8002882:	2301      	movne	r3, #1
 8002884:	2300      	moveq	r3, #0
 8002886:	737b      	strb	r3, [r7, #13]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:264
			Parameter::setValue(Parameter::Nazwa::AKTYWNA_CWU, !aktywnaCWU);
 8002888:	7b7b      	ldrb	r3, [r7, #13]
 800288a:	f083 0301 	eor.w	r3, r3, #1
 800288e:	b2db      	uxtb	r3, r3
 8002890:	b29b      	uxth	r3, r3
 8002892:	4619      	mov	r1, r3
 8002894:	2011      	movs	r0, #17
 8002896:	f001 feb8 	bl	800460a <Parameter::setValue(Parameter::Nazwa, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:265
			goToEkran(EKRAN::e9_2_POMPA_CWU_AKTYWNA);
 800289a:	2113      	movs	r1, #19
 800289c:	6878      	ldr	r0, [r7, #4]
 800289e:	f001 ffcb 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:270
		}break;
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e9_3_ALARM_TEMP_PODAJNIKA); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e9_1_USTAWIENIA_FABRYCZNE); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 80028a2:	e02d      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:267
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e9_3_ALARM_TEMP_PODAJNIKA); break;
 80028a4:	2114      	movs	r1, #20
 80028a6:	6878      	ldr	r0, [r7, #4]
 80028a8:	f001 ffc6 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:270
		default:					goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 80028ac:	e028      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:268
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e9_1_USTAWIENIA_FABRYCZNE); break;
 80028ae:	2112      	movs	r1, #18
 80028b0:	6878      	ldr	r0, [r7, #4]
 80028b2:	f001 ffc1 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:270
		default:					goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 80028b6:	e023      	b.n	8002900 <Menu::poll()+0x5b0>
 80028b8:	2111      	movs	r1, #17
 80028ba:	6878      	ldr	r0, [r7, #4]
 80028bc:	f001 ffbc 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 80028c0:	e01e      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:275
		}
	}break;
	case e9_3_ALARM_TEMP_PODAJNIKA: // alarm 85 oC
	{
		switch (key){
 80028c2:	7bfb      	ldrb	r3, [r7, #15]
 80028c4:	2b03      	cmp	r3, #3
 80028c6:	d008      	beq.n	80028da <Menu::poll()+0x58a>
 80028c8:	2b04      	cmp	r3, #4
 80028ca:	d00b      	beq.n	80028e4 <Menu::poll()+0x594>
 80028cc:	2b01      	cmp	r3, #1
 80028ce:	d10e      	bne.n	80028ee <Menu::poll()+0x59e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:276
		case Keyboard::Key::ENTER:	goToEdit(Parameter::Nazwa::ALARM_TEMP_PODAJNIKA); break;
 80028d0:	210d      	movs	r1, #13
 80028d2:	6878      	ldr	r0, [r7, #4]
 80028d4:	f002 f84c 	bl	8004970 <Menu::goToEdit(Parameter::Nazwa)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:280
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e9_1_USTAWIENIA_FABRYCZNE); break;
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e9_2_POMPA_CWU_AKTYWNA); break;
		case Keyboard::Key::CANCEL:
		default:					goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 80028d8:	e012      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:277
		case Keyboard::Key::RIGHT:	goToEkran(EKRAN::e9_1_USTAWIENIA_FABRYCZNE); break;
 80028da:	2112      	movs	r1, #18
 80028dc:	6878      	ldr	r0, [r7, #4]
 80028de:	f001 ffab 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:280
		default:					goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 80028e2:	e00d      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:278
		case Keyboard::Key::LEFT: 	goToEkran(EKRAN::e9_2_POMPA_CWU_AKTYWNA); break;
 80028e4:	2113      	movs	r1, #19
 80028e6:	6878      	ldr	r0, [r7, #4]
 80028e8:	f001 ffa6 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:280
		default:					goToEkran(EKRAN::e9_OPCJE_SERWISOWE); break;
 80028ec:	e008      	b.n	8002900 <Menu::poll()+0x5b0>
 80028ee:	2111      	movs	r1, #17
 80028f0:	6878      	ldr	r0, [r7, #4]
 80028f2:	f001 ffa1 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
 80028f6:	e003      	b.n	8002900 <Menu::poll()+0x5b0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:283
		}
	}break;
	default: goToEkran(EKRAN::e_AUTOMAT); break;
 80028f8:	2100      	movs	r1, #0
 80028fa:	6878      	ldr	r0, [r7, #4]
 80028fc:	f001 ff9c 	bl	8004838 <Menu::goToEkran(Menu::EKRAN)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:285
	}
}
 8002900:	3714      	adds	r7, #20
 8002902:	46bd      	mov	sp, r7
 8002904:	bd90      	pop	{r4, r7, pc}
 8002906:	bf00      	nop
 8002908:	08004ad8 	.word	0x08004ad8

0800290c <Menu::printPattern(char const*, unsigned long)>:
printPattern():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:304
//	cursorLeft(offset);
//	setCursorMode(CURSOR::BLINK);
//	return true;
//}

void Menu::printPattern(const char * pattern, uint32_t value){
 800290c:	b580      	push	{r7, lr}
 800290e:	b086      	sub	sp, #24
 8002910:	af00      	add	r7, sp, #0
 8002912:	60f8      	str	r0, [r7, #12]
 8002914:	60b9      	str	r1, [r7, #8]
 8002916:	607a      	str	r2, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:305
	lcd->printNumbersWithPattern(pattern, value);
 8002918:	68fb      	ldr	r3, [r7, #12]
 800291a:	689b      	ldr	r3, [r3, #8]
 800291c:	687a      	ldr	r2, [r7, #4]
 800291e:	68b9      	ldr	r1, [r7, #8]
 8002920:	4618      	mov	r0, r3
 8002922:	f7fe ff0d 	bl	8001740 <TextLcd::printNumbersWithPattern(char const*, unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:306
	if (editMode){
 8002926:	68fb      	ldr	r3, [r7, #12]
 8002928:	7d1b      	ldrb	r3, [r3, #20]
 800292a:	2b00      	cmp	r3, #0
 800292c:	d03b      	beq.n	80029a6 <Menu::printPattern(char const*, unsigned long)+0x9a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:307
		const char * ptr = pattern;
 800292e:	68bb      	ldr	r3, [r7, #8]
 8002930:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:308
		while (*ptr++ != '\0'){;}
 8002932:	697b      	ldr	r3, [r7, #20]
 8002934:	1c5a      	adds	r2, r3, #1
 8002936:	617a      	str	r2, [r7, #20]
 8002938:	f993 3000 	ldrsb.w	r3, [r3]
 800293c:	2b00      	cmp	r3, #0
 800293e:	bf14      	ite	ne
 8002940:	2301      	movne	r3, #1
 8002942:	2300      	moveq	r3, #0
 8002944:	b2db      	uxtb	r3, r3
 8002946:	2b00      	cmp	r3, #0
 8002948:	d1f3      	bne.n	8002932 <Menu::printPattern(char const*, unsigned long)+0x26>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:310
		char znak;
		uint16_t offset = 0;
 800294a:	2300      	movs	r3, #0
 800294c:	827b      	strh	r3, [r7, #18]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:312
		do{
			znak = char(*ptr - '0');
 800294e:	697b      	ldr	r3, [r7, #20]
 8002950:	f993 3000 	ldrsb.w	r3, [r3]
 8002954:	b2db      	uxtb	r3, r3
 8002956:	3b30      	subs	r3, #48	; 0x30
 8002958:	b2db      	uxtb	r3, r3
 800295a:	747b      	strb	r3, [r7, #17]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:313
			if (isdigit(znak)) break;
 800295c:	f997 3011 	ldrsb.w	r3, [r7, #17]
 8002960:	4618      	mov	r0, r3
 8002962:	f002 f833 	bl	80049cc <isdigit>
 8002966:	4603      	mov	r3, r0
 8002968:	2b00      	cmp	r3, #0
 800296a:	bf14      	ite	ne
 800296c:	2301      	movne	r3, #1
 800296e:	2300      	moveq	r3, #0
 8002970:	b2db      	uxtb	r3, r3
 8002972:	2b00      	cmp	r3, #0
 8002974:	d109      	bne.n	800298a <Menu::printPattern(char const*, unsigned long)+0x7e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:314
			ptr--;
 8002976:	697b      	ldr	r3, [r7, #20]
 8002978:	3b01      	subs	r3, #1
 800297a:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:315
			offset++;
 800297c:	8a7b      	ldrh	r3, [r7, #18]
 800297e:	3301      	adds	r3, #1
 8002980:	827b      	strh	r3, [r7, #18]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:316
		}while (ptr >= pattern);
 8002982:	697a      	ldr	r2, [r7, #20]
 8002984:	68bb      	ldr	r3, [r7, #8]
 8002986:	429a      	cmp	r2, r3
 8002988:	d2e1      	bcs.n	800294e <Menu::printPattern(char const*, unsigned long)+0x42>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:317
		lcd->cursorLeft(offset);
 800298a:	68fb      	ldr	r3, [r7, #12]
 800298c:	689b      	ldr	r3, [r3, #8]
 800298e:	8a7a      	ldrh	r2, [r7, #18]
 8002990:	4611      	mov	r1, r2
 8002992:	4618      	mov	r0, r3
 8002994:	f000 fdb9 	bl	800350a <TextLcd::cursorLeft(unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:318
		lcd->setCursorMode(CURSOR::BLINK);
 8002998:	68fb      	ldr	r3, [r7, #12]
 800299a:	689b      	ldr	r3, [r3, #8]
 800299c:	2101      	movs	r1, #1
 800299e:	4618      	mov	r0, r3
 80029a0:	f000 fdd0 	bl	8003544 <TextLcd::setCursorMode(CURSOR)>
 80029a4:	e005      	b.n	80029b2 <Menu::printPattern(char const*, unsigned long)+0xa6>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:320
	}else{
		lcd->setCursorMode(CURSOR::NONE);
 80029a6:	68fb      	ldr	r3, [r7, #12]
 80029a8:	689b      	ldr	r3, [r3, #8]
 80029aa:	2100      	movs	r1, #0
 80029ac:	4618      	mov	r0, r3
 80029ae:	f000 fdc9 	bl	8003544 <TextLcd::setCursorMode(CURSOR)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:322
	}
}
 80029b2:	3718      	adds	r7, #24
 80029b4:	46bd      	mov	sp, r7
 80029b6:	bd80      	pop	{r7, pc}

080029b8 <Menu::showEkran(unsigned short)>:
_ZN4Menu9showEkranEt():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:325


void Menu::showEkran(uint16_t val){
 80029b8:	b580      	push	{r7, lr}
 80029ba:	b094      	sub	sp, #80	; 0x50
 80029bc:	af00      	add	r7, sp, #0
 80029be:	6078      	str	r0, [r7, #4]
 80029c0:	460b      	mov	r3, r1
 80029c2:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:327

	Parameter::Nazwa param = Parameter::Nazwa::NONE;
 80029c4:	2300      	movs	r3, #0
 80029c6:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:329

	switch(ekran){
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	7c1b      	ldrb	r3, [r3, #16]
 80029ce:	2b14      	cmp	r3, #20
 80029d0:	f200 829c 	bhi.w	8002f0c <Menu::showEkran(unsigned short)+0x554>
 80029d4:	a201      	add	r2, pc, #4	; (adr r2, 80029dc <Menu::showEkran(unsigned short)+0x24>)
 80029d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80029da:	bf00      	nop
 80029dc:	08002a31 	.word	0x08002a31
 80029e0:	08002a89 	.word	0x08002a89
 80029e4:	08002ac7 	.word	0x08002ac7
 80029e8:	08002ae5 	.word	0x08002ae5
 80029ec:	08002b21 	.word	0x08002b21
 80029f0:	08002b5d 	.word	0x08002b5d
 80029f4:	08002b99 	.word	0x08002b99
 80029f8:	08002bb7 	.word	0x08002bb7
 80029fc:	08002bf3 	.word	0x08002bf3
 8002a00:	08002c2f 	.word	0x08002c2f
 8002a04:	08002c6b 	.word	0x08002c6b
 8002a08:	08002ca7 	.word	0x08002ca7
 8002a0c:	08002ce3 	.word	0x08002ce3
 8002a10:	08002d61 	.word	0x08002d61
 8002a14:	08002d9d 	.word	0x08002d9d
 8002a18:	08002dd9 	.word	0x08002dd9
 8002a1c:	08002e15 	.word	0x08002e15
 8002a20:	08002e53 	.word	0x08002e53
 8002a24:	08002e71 	.word	0x08002e71
 8002a28:	08002e8f 	.word	0x08002e8f
 8002a2c:	08002ed3 	.word	0x08002ed3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:332
	case e_AUTOMAT:///------->1234567890123456<
	{
		uint32_t tpiec = ster->getTempCO();
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	4618      	mov	r0, r3
 8002a36:	f001 fef3 	bl	8004820 <Sterownik::getTempCO()>
 8002a3a:	4603      	mov	r3, r0
 8002a3c:	64bb      	str	r3, [r7, #72]	; 0x48
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:333
		param = Parameter::Nazwa::TEMPERATURA_CO;
 8002a3e:	2302      	movs	r3, #2
 8002a40:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:334
		const char * patt = Parameter::getParamPattern(param);
 8002a44:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002a48:	4618      	mov	r0, r3
 8002a4a:	f001 fdf3 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002a4e:	6478      	str	r0, [r7, #68]	; 0x44
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:335
		lcd->gotoXY(0,0);
 8002a50:	687b      	ldr	r3, [r7, #4]
 8002a52:	689b      	ldr	r3, [r3, #8]
 8002a54:	2200      	movs	r2, #0
 8002a56:	2100      	movs	r1, #0
 8002a58:	4618      	mov	r0, r3
 8002a5a:	f001 fd7c 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:337
		//--------------------------->1234567890123456<
		lcd->printNumbersWithPattern("T. pieca:00.0 oC",tpiec);
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	689b      	ldr	r3, [r3, #8]
 8002a62:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8002a64:	49ae      	ldr	r1, [pc, #696]	; (8002d20 <Menu::showEkran(unsigned short)+0x368>)
 8002a66:	4618      	mov	r0, r3
 8002a68:	f7fe fe6a 	bl	8001740 <TextLcd::printNumbersWithPattern(char const*, unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:338
		lcd->gotoXY(1,0);
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	689b      	ldr	r3, [r3, #8]
 8002a70:	2200      	movs	r2, #0
 8002a72:	2101      	movs	r1, #1
 8002a74:	4618      	mov	r0, r3
 8002a76:	f001 fd6e 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:339
		printPattern(patt,val);
 8002a7a:	887b      	ldrh	r3, [r7, #2]
 8002a7c:	461a      	mov	r2, r3
 8002a7e:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8002a80:	6878      	ldr	r0, [r7, #4]
 8002a82:	f7ff ff43 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002a86:	e241      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:343
	}break;
	case e1_PRACA_RECZNA://->1234567890123456<
	{
		lcd->printXY(0,0,	"1. Tryb pracy:  ");
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	6898      	ldr	r0, [r3, #8]
 8002a8c:	4ba5      	ldr	r3, [pc, #660]	; (8002d24 <Menu::showEkran(unsigned short)+0x36c>)
 8002a8e:	2200      	movs	r2, #0
 8002a90:	2100      	movs	r1, #0
 8002a92:	f001 fd76 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:344
		if (praca->isInManualMode()){
 8002a96:	687b      	ldr	r3, [r7, #4]
 8002a98:	68db      	ldr	r3, [r3, #12]
 8002a9a:	4618      	mov	r0, r3
 8002a9c:	f001 feb0 	bl	8004800 <Praca::isInManualMode()>
 8002aa0:	4603      	mov	r3, r0
 8002aa2:	2b00      	cmp	r3, #0
 8002aa4:	d007      	beq.n	8002ab6 <Menu::showEkran(unsigned short)+0xfe>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:345
			lcd->printXY(1,0,"   >MANUAL<     ");
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	6898      	ldr	r0, [r3, #8]
 8002aaa:	4b9f      	ldr	r3, [pc, #636]	; (8002d28 <Menu::showEkran(unsigned short)+0x370>)
 8002aac:	2200      	movs	r2, #0
 8002aae:	2101      	movs	r1, #1
 8002ab0:	f001 fd67 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:347
		}else{//------------->1234567890123456<
			lcd->printXY(1,0,"   >AUTOMAT<    ");
 8002ab4:	e22a      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	6898      	ldr	r0, [r3, #8]
 8002aba:	4b9c      	ldr	r3, [pc, #624]	; (8002d2c <Menu::showEkran(unsigned short)+0x374>)
 8002abc:	2200      	movs	r2, #0
 8002abe:	2101      	movs	r1, #1
 8002ac0:	f001 fd5f 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
 8002ac4:	e222      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:352
		}
	}break;
	case e2_PODAJNIK_OPALU:
	{//------------------>1234567890123456<
		lcd->printXY(0,0,"2.Podajnik opalu");
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	6898      	ldr	r0, [r3, #8]
 8002aca:	4b99      	ldr	r3, [pc, #612]	; (8002d30 <Menu::showEkran(unsigned short)+0x378>)
 8002acc:	2200      	movs	r2, #0
 8002ace:	2100      	movs	r1, #0
 8002ad0:	f001 fd57 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:353
		lcd->printXY(1,0,"      >>        ");
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	6898      	ldr	r0, [r3, #8]
 8002ad8:	4b96      	ldr	r3, [pc, #600]	; (8002d34 <Menu::showEkran(unsigned short)+0x37c>)
 8002ada:	2200      	movs	r2, #0
 8002adc:	2101      	movs	r1, #1
 8002ade:	f001 fd50 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
 8002ae2:	e213      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:357
	}break;
	case e2_1_PODAJNIK_PRACA:
	{//--------------------->1234567890123456<
		lcd->printXY(0,0,	"2.1.Podaj. praca");
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	6898      	ldr	r0, [r3, #8]
 8002ae8:	4b93      	ldr	r3, [pc, #588]	; (8002d38 <Menu::showEkran(unsigned short)+0x380>)
 8002aea:	2200      	movs	r2, #0
 8002aec:	2100      	movs	r1, #0
 8002aee:	f001 fd48 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:358
		lcd->gotoXY(1,0);
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	689b      	ldr	r3, [r3, #8]
 8002af6:	2200      	movs	r2, #0
 8002af8:	2101      	movs	r1, #1
 8002afa:	4618      	mov	r0, r3
 8002afc:	f001 fd2b 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:359
		param = Parameter::Nazwa::PODAJNIK_PRACA;
 8002b00:	2305      	movs	r3, #5
 8002b02:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:360
		const char * patt = Parameter::getParamPattern(param);
 8002b06:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002b0a:	4618      	mov	r0, r3
 8002b0c:	f001 fd92 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002b10:	6438      	str	r0, [r7, #64]	; 0x40
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:361
		printPattern(patt, val);
 8002b12:	887b      	ldrh	r3, [r7, #2]
 8002b14:	461a      	mov	r2, r3
 8002b16:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8002b18:	6878      	ldr	r0, [r7, #4]
 8002b1a:	f7ff fef7 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002b1e:	e1f5      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:365
	}break;
	case e2_2_PODAJNIK_PRZERWA:  	//(5 min:  break; sek):  ;
	{//--------------------->1234567890123456<
		lcd->printXY(0,0,	"2.2.Pod. przerwa");
 8002b20:	687b      	ldr	r3, [r7, #4]
 8002b22:	6898      	ldr	r0, [r3, #8]
 8002b24:	4b85      	ldr	r3, [pc, #532]	; (8002d3c <Menu::showEkran(unsigned short)+0x384>)
 8002b26:	2200      	movs	r2, #0
 8002b28:	2100      	movs	r1, #0
 8002b2a:	f001 fd2a 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:366
		lcd->gotoXY(1,0);
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	689b      	ldr	r3, [r3, #8]
 8002b32:	2200      	movs	r2, #0
 8002b34:	2101      	movs	r1, #1
 8002b36:	4618      	mov	r0, r3
 8002b38:	f001 fd0d 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:367
		param = Parameter::Nazwa::PODAJNIK_PRZERWA;
 8002b3c:	2306      	movs	r3, #6
 8002b3e:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:368
		const char * patt = Parameter::getParamPattern(param);
 8002b42:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002b46:	4618      	mov	r0, r3
 8002b48:	f001 fd74 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002b4c:	63f8      	str	r0, [r7, #60]	; 0x3c
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:369
		printPattern(patt, val);
 8002b4e:	887b      	ldrh	r3, [r7, #2]
 8002b50:	461a      	mov	r2, r3
 8002b52:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8002b54:	6878      	ldr	r0, [r7, #4]
 8002b56:	f7ff fed9 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002b5a:	e1d7      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:373
	}break;
	case e2_3_PODAJNIK_OPOZNIENIE:   //(min:  break; 30 sek):  ;
	{//--------------------->1234567890123456<
		lcd->printXY(0,0,	"2.3.Pod. opozn. ");
 8002b5c:	687b      	ldr	r3, [r7, #4]
 8002b5e:	6898      	ldr	r0, [r3, #8]
 8002b60:	4b77      	ldr	r3, [pc, #476]	; (8002d40 <Menu::showEkran(unsigned short)+0x388>)
 8002b62:	2200      	movs	r2, #0
 8002b64:	2100      	movs	r1, #0
 8002b66:	f001 fd0c 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:374
		lcd->gotoXY(1,0);
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	689b      	ldr	r3, [r3, #8]
 8002b6e:	2200      	movs	r2, #0
 8002b70:	2101      	movs	r1, #1
 8002b72:	4618      	mov	r0, r3
 8002b74:	f001 fcef 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:375
		param = Parameter::Nazwa::PODAJNIK_OPOZNIENIE;
 8002b78:	2307      	movs	r3, #7
 8002b7a:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:376
		const char * patt = Parameter::getParamPattern(param);
 8002b7e:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002b82:	4618      	mov	r0, r3
 8002b84:	f001 fd56 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002b88:	63b8      	str	r0, [r7, #56]	; 0x38
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:377
		printPattern(patt, val);
 8002b8a:	887b      	ldrh	r3, [r7, #2]
 8002b8c:	461a      	mov	r2, r3
 8002b8e:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8002b90:	6878      	ldr	r0, [r7, #4]
 8002b92:	f7ff febb 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002b96:	e1b9      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:381
	}break;
	case e3_PODTRZYMANIE_PALENIA:
	{//------------------>1234567890123456<
		lcd->printXY(0,0,"3.Podt. palenia ");
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	6898      	ldr	r0, [r3, #8]
 8002b9c:	4b69      	ldr	r3, [pc, #420]	; (8002d44 <Menu::showEkran(unsigned short)+0x38c>)
 8002b9e:	2200      	movs	r2, #0
 8002ba0:	2100      	movs	r1, #0
 8002ba2:	f001 fcee 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:382
		lcd->printXY(1,0,"      >>        ");
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	6898      	ldr	r0, [r3, #8]
 8002baa:	4b62      	ldr	r3, [pc, #392]	; (8002d34 <Menu::showEkran(unsigned short)+0x37c>)
 8002bac:	2200      	movs	r2, #0
 8002bae:	2101      	movs	r1, #1
 8002bb0:	f001 fce7 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
 8002bb4:	e1aa      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:386
	}break;
	case e3_1_PODTRZYMANIE_PRACA:   // ( 3 sek) 1-59:  ;
	{//--------------------->1234567890123456<
		lcd->printXY(0,0,	"3.1.Podt. praca ");
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	6898      	ldr	r0, [r3, #8]
 8002bba:	4b63      	ldr	r3, [pc, #396]	; (8002d48 <Menu::showEkran(unsigned short)+0x390>)
 8002bbc:	2200      	movs	r2, #0
 8002bbe:	2100      	movs	r1, #0
 8002bc0:	f001 fcdf 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:387
		lcd->gotoXY(1,0);
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	689b      	ldr	r3, [r3, #8]
 8002bc8:	2200      	movs	r2, #0
 8002bca:	2101      	movs	r1, #1
 8002bcc:	4618      	mov	r0, r3
 8002bce:	f001 fcc2 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:388
		param = Parameter::Nazwa::PODTRZYMANIE_PRACA;
 8002bd2:	2308      	movs	r3, #8
 8002bd4:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:389
		const char * patt = Parameter::getParamPattern(param);
 8002bd8:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002bdc:	4618      	mov	r0, r3
 8002bde:	f001 fd29 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002be2:	6378      	str	r0, [r7, #52]	; 0x34
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:390
		printPattern(patt, val);
 8002be4:	887b      	ldrh	r3, [r7, #2]
 8002be6:	461a      	mov	r2, r3
 8002be8:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8002bea:	6878      	ldr	r0, [r7, #4]
 8002bec:	f7ff fe8e 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002bf0:	e18c      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:395

	}break;
	case e3_2_PODTRZYMANIE_PRZERWA:   //( 29 min ):  ;
	{//--------------------->1234567890123456<
		lcd->printXY(0,0,	"3.2.Podt. przer.");
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	6898      	ldr	r0, [r3, #8]
 8002bf6:	4b55      	ldr	r3, [pc, #340]	; (8002d4c <Menu::showEkran(unsigned short)+0x394>)
 8002bf8:	2200      	movs	r2, #0
 8002bfa:	2100      	movs	r1, #0
 8002bfc:	f001 fcc1 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:396
		lcd->gotoXY(1,0);
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	689b      	ldr	r3, [r3, #8]
 8002c04:	2200      	movs	r2, #0
 8002c06:	2101      	movs	r1, #1
 8002c08:	4618      	mov	r0, r3
 8002c0a:	f001 fca4 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:397
		param = Parameter::Nazwa::PODTRZYMANIE_PRZERWA;
 8002c0e:	2309      	movs	r3, #9
 8002c10:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:398
		const char * patt = Parameter::getParamPattern(param);
 8002c14:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002c18:	4618      	mov	r0, r3
 8002c1a:	f001 fd0b 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002c1e:	6338      	str	r0, [r7, #48]	; 0x30
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:399
		printPattern(patt, val);
 8002c20:	887b      	ldrh	r3, [r7, #2]
 8002c22:	461a      	mov	r2, r3
 8002c24:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8002c26:	6878      	ldr	r0, [r7, #4]
 8002c28:	f7ff fe70 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002c2c:	e16e      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:403
	}break;
	case e3_3_OPOZNIENIE_WLACZENIA_DMUCHAWY:   //(25 sek):  ;
	{//--------------------->1234567890123456<
		lcd->printXY(0,0,	"3.3.Opozn. dmuch");
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	6898      	ldr	r0, [r3, #8]
 8002c32:	4b47      	ldr	r3, [pc, #284]	; (8002d50 <Menu::showEkran(unsigned short)+0x398>)
 8002c34:	2200      	movs	r2, #0
 8002c36:	2100      	movs	r1, #0
 8002c38:	f001 fca3 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:404
		lcd->gotoXY(1,0);
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	689b      	ldr	r3, [r3, #8]
 8002c40:	2200      	movs	r2, #0
 8002c42:	2101      	movs	r1, #1
 8002c44:	4618      	mov	r0, r3
 8002c46:	f001 fc86 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:405
		param = Parameter::Nazwa::PODTRZYMANIE_PRACA;
 8002c4a:	2308      	movs	r3, #8
 8002c4c:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:406
		const char * patt = Parameter::getParamPattern(param);
 8002c50:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002c54:	4618      	mov	r0, r3
 8002c56:	f001 fced 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002c5a:	62f8      	str	r0, [r7, #44]	; 0x2c
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:407
		printPattern(patt, val);
 8002c5c:	887b      	ldrh	r3, [r7, #2]
 8002c5e:	461a      	mov	r2, r3
 8002c60:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8002c62:	6878      	ldr	r0, [r7, #4]
 8002c64:	f7ff fe52 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002c68:	e150      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:411
	}break;
	case e4_POMPA_CO:  		//Temp zal. 40 oC 50-80:  ;
	{//--------------------->1234567890123456<
		lcd->printXY(0,0,	"4. Pompa C.O.   ");
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	6898      	ldr	r0, [r3, #8]
 8002c6e:	4b39      	ldr	r3, [pc, #228]	; (8002d54 <Menu::showEkran(unsigned short)+0x39c>)
 8002c70:	2200      	movs	r2, #0
 8002c72:	2100      	movs	r1, #0
 8002c74:	f001 fc85 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:412
		lcd->gotoXY(1,0);
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	689b      	ldr	r3, [r3, #8]
 8002c7c:	2200      	movs	r2, #0
 8002c7e:	2101      	movs	r1, #1
 8002c80:	4618      	mov	r0, r3
 8002c82:	f001 fc68 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:413
		param = Parameter::Nazwa::POMPA_CO_TEMP_ZALACZ;
 8002c86:	2304      	movs	r3, #4
 8002c88:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:414
		const char * patt = Parameter::getParamPattern(param);
 8002c8c:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002c90:	4618      	mov	r0, r3
 8002c92:	f001 fccf 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002c96:	62b8      	str	r0, [r7, #40]	; 0x28
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:415
		printPattern(patt, val);
 8002c98:	887b      	ldrh	r3, [r7, #2]
 8002c9a:	461a      	mov	r2, r3
 8002c9c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002c9e:	6878      	ldr	r0, [r7, #4]
 8002ca0:	f7ff fe34 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002ca4:	e132      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:419
	}break;
	case e5_ALARM_SPADKU_TEMPERATURY:   //:  ; godz min:  ;
	{//--------------------->1234567890123456<
		lcd->printXY(0,0,	"5. Alarm spadku ");
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	6898      	ldr	r0, [r3, #8]
 8002caa:	4b2b      	ldr	r3, [pc, #172]	; (8002d58 <Menu::showEkran(unsigned short)+0x3a0>)
 8002cac:	2200      	movs	r2, #0
 8002cae:	2100      	movs	r1, #0
 8002cb0:	f001 fc67 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:420
		lcd->gotoXY(1,0);
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	689b      	ldr	r3, [r3, #8]
 8002cb8:	2200      	movs	r2, #0
 8002cba:	2101      	movs	r1, #1
 8002cbc:	4618      	mov	r0, r3
 8002cbe:	f001 fc4a 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:421
		param = Parameter::Nazwa::ALARM_SPADKU_TEMP;
 8002cc2:	230c      	movs	r3, #12
 8002cc4:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:422
		const char * patt = Parameter::getParamPattern(param);
 8002cc8:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002ccc:	4618      	mov	r0, r3
 8002cce:	f001 fcb1 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002cd2:	6278      	str	r0, [r7, #36]	; 0x24
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:423
		printPattern(patt, val);
 8002cd4:	887b      	ldrh	r3, [r7, #2]
 8002cd6:	461a      	mov	r2, r3
 8002cd8:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002cda:	6878      	ldr	r0, [r7, #4]
 8002cdc:	f7ff fe16 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002ce0:	e114      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:427
	}break;
	case e6_Dmuchawa:  			//moc 1-4:
	{//---------------------->1234567890123456<
		lcd->printXY(0,0,    "6.Dmuchawa moc: ");
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	6898      	ldr	r0, [r3, #8]
 8002ce6:	4b1d      	ldr	r3, [pc, #116]	; (8002d5c <Menu::showEkran(unsigned short)+0x3a4>)
 8002ce8:	2200      	movs	r2, #0
 8002cea:	2100      	movs	r1, #0
 8002cec:	f001 fc49 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:428
		lcd->gotoXY(1,0);
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	689b      	ldr	r3, [r3, #8]
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	2101      	movs	r1, #1
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	f001 fc2c 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:429
		param = Parameter::Nazwa::DMUCHAWA_MOC;
 8002cfe:	230b      	movs	r3, #11
 8002d00:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:430
		const char * patt = Parameter::getParamPattern(param);
 8002d04:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002d08:	4618      	mov	r0, r3
 8002d0a:	f001 fc93 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002d0e:	6238      	str	r0, [r7, #32]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:431
		printPattern(patt, val);
 8002d10:	887b      	ldrh	r3, [r7, #2]
 8002d12:	461a      	mov	r2, r3
 8002d14:	6a39      	ldr	r1, [r7, #32]
 8002d16:	6878      	ldr	r0, [r7, #4]
 8002d18:	f7ff fdf8 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002d1c:	e0f6      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
 8002d1e:	bf00      	nop
 8002d20:	08004aec 	.word	0x08004aec
 8002d24:	08004b00 	.word	0x08004b00
 8002d28:	08004b14 	.word	0x08004b14
 8002d2c:	08004b28 	.word	0x08004b28
 8002d30:	08004b3c 	.word	0x08004b3c
 8002d34:	08004b50 	.word	0x08004b50
 8002d38:	08004b64 	.word	0x08004b64
 8002d3c:	08004b78 	.word	0x08004b78
 8002d40:	08004b8c 	.word	0x08004b8c
 8002d44:	08004ba0 	.word	0x08004ba0
 8002d48:	08004bb4 	.word	0x08004bb4
 8002d4c:	08004bc8 	.word	0x08004bc8
 8002d50:	08004bdc 	.word	0x08004bdc
 8002d54:	08004bf0 	.word	0x08004bf0
 8002d58:	08004c04 	.word	0x08004c04
 8002d5c:	08004c18 	.word	0x08004c18
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:435
	}break;
	case e7_HISTEREZA_CO:  		//2 oC (2-9):
	{//---------------------->1234567890123456<
		lcd->printXY(0,0,    "7.Histereza C.O.");
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	6898      	ldr	r0, [r3, #8]
 8002d64:	4b6b      	ldr	r3, [pc, #428]	; (8002f14 <Menu::showEkran(unsigned short)+0x55c>)
 8002d66:	2200      	movs	r2, #0
 8002d68:	2100      	movs	r1, #0
 8002d6a:	f001 fc0a 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:436
		lcd->gotoXY(1,0);
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	689b      	ldr	r3, [r3, #8]
 8002d72:	2200      	movs	r2, #0
 8002d74:	2101      	movs	r1, #1
 8002d76:	4618      	mov	r0, r3
 8002d78:	f001 fbed 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:437
		param = Parameter::Nazwa::HISTEREZA_CO_TEMP;
 8002d7c:	2303      	movs	r3, #3
 8002d7e:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:438
		const char * patt = Parameter::getParamPattern(param);
 8002d82:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002d86:	4618      	mov	r0, r3
 8002d88:	f001 fc54 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002d8c:	61f8      	str	r0, [r7, #28]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:439
		printPattern(patt, val);
 8002d8e:	887b      	ldrh	r3, [r7, #2]
 8002d90:	461a      	mov	r2, r3
 8002d92:	69f9      	ldr	r1, [r7, #28]
 8002d94:	6878      	ldr	r0, [r7, #4]
 8002d96:	f7ff fdb9 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002d9a:	e0b7      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:443
	}break;
	case e8_POMPA_CWU:  	//Temp załączenia 50 oC:
	{//---------------------->1234567890123456<
		lcd->printXY(0,0,    "8. Pompa C.W.U. ");
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	6898      	ldr	r0, [r3, #8]
 8002da0:	4b5d      	ldr	r3, [pc, #372]	; (8002f18 <Menu::showEkran(unsigned short)+0x560>)
 8002da2:	2200      	movs	r2, #0
 8002da4:	2100      	movs	r1, #0
 8002da6:	f001 fbec 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:444
		lcd->gotoXY(1,0);
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	689b      	ldr	r3, [r3, #8]
 8002dae:	2200      	movs	r2, #0
 8002db0:	2101      	movs	r1, #1
 8002db2:	4618      	mov	r0, r3
 8002db4:	f001 fbcf 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:445
		param = Parameter::Nazwa::HISTEREZA_CWU_TEMP;
 8002db8:	230f      	movs	r3, #15
 8002dba:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:446
		const char * patt = Parameter::getParamPattern(param);
 8002dbe:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002dc2:	4618      	mov	r0, r3
 8002dc4:	f001 fc36 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002dc8:	61b8      	str	r0, [r7, #24]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:447
		printPattern(patt, val);
 8002dca:	887b      	ldrh	r3, [r7, #2]
 8002dcc:	461a      	mov	r2, r3
 8002dce:	69b9      	ldr	r1, [r7, #24]
 8002dd0:	6878      	ldr	r0, [r7, #4]
 8002dd2:	f7ff fd9b 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002dd6:	e099      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:451
	}break;
	case e8_1_HISTEREZA_CWU:   //3 oC:  break;
	{//---------------------->1234567890123456<
		lcd->printXY(0,0,    "8.1.Hister. CWU ");
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	6898      	ldr	r0, [r3, #8]
 8002ddc:	4b4f      	ldr	r3, [pc, #316]	; (8002f1c <Menu::showEkran(unsigned short)+0x564>)
 8002dde:	2200      	movs	r2, #0
 8002de0:	2100      	movs	r1, #0
 8002de2:	f001 fbce 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:452
		lcd->gotoXY(1,0);
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	689b      	ldr	r3, [r3, #8]
 8002dea:	2200      	movs	r2, #0
 8002dec:	2101      	movs	r1, #1
 8002dee:	4618      	mov	r0, r3
 8002df0:	f001 fbb1 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:453
		param = Parameter::Nazwa::HISTEREZA_CWU_TEMP;
 8002df4:	230f      	movs	r3, #15
 8002df6:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:454
		const char * patt = Parameter::getParamPattern(param);
 8002dfa:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002dfe:	4618      	mov	r0, r3
 8002e00:	f001 fc18 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002e04:	6178      	str	r0, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:455
		printPattern(patt, val);
 8002e06:	887b      	ldrh	r3, [r7, #2]
 8002e08:	461a      	mov	r2, r3
 8002e0a:	6979      	ldr	r1, [r7, #20]
 8002e0c:	6878      	ldr	r0, [r7, #4]
 8002e0e:	f7ff fd7d 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
 8002e12:	e07b      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:459
	}break;
	case e8_2_TRYB_LETNI:   //nieaktywny/aktywny
	{//---------------------->1234567890123456<
		lcd->printXY(0,0,    "8.2 Sezon/tryb  ");
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	6898      	ldr	r0, [r3, #8]
 8002e18:	4b41      	ldr	r3, [pc, #260]	; (8002f20 <Menu::showEkran(unsigned short)+0x568>)
 8002e1a:	2200      	movs	r2, #0
 8002e1c:	2100      	movs	r1, #0
 8002e1e:	f001 fbb0 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:460
		Parameter::SEZON val = (Parameter::SEZON)Parameter::getValue(Parameter::Nazwa::TRYB_LETNI);
 8002e22:	2010      	movs	r0, #16
 8002e24:	f001 fbe2 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 8002e28:	4603      	mov	r3, r0
 8002e2a:	74fb      	strb	r3, [r7, #19]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:461
		if (val == Parameter::SEZON::LATO){
 8002e2c:	7cfb      	ldrb	r3, [r7, #19]
 8002e2e:	2b01      	cmp	r3, #1
 8002e30:	d107      	bne.n	8002e42 <Menu::showEkran(unsigned short)+0x48a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:462
			lcd->printXY(1,0,"     LETNI      ");
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	6898      	ldr	r0, [r3, #8]
 8002e36:	4b3b      	ldr	r3, [pc, #236]	; (8002f24 <Menu::showEkran(unsigned short)+0x56c>)
 8002e38:	2200      	movs	r2, #0
 8002e3a:	2101      	movs	r1, #1
 8002e3c:	f001 fba1 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:464
		}else{
			lcd->printXY(1,0,"    ZIMOWY      ");
 8002e40:	e064      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	6898      	ldr	r0, [r3, #8]
 8002e46:	4b38      	ldr	r3, [pc, #224]	; (8002f28 <Menu::showEkran(unsigned short)+0x570>)
 8002e48:	2200      	movs	r2, #0
 8002e4a:	2101      	movs	r1, #1
 8002e4c:	f001 fb99 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
 8002e50:	e05c      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:469
		}
	}break;
	case e9_OPCJE_SERWISOWE:
	{//------------------>1234567890123456<
		lcd->printXY(0,0,"9. Opcje serwis.");
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	6898      	ldr	r0, [r3, #8]
 8002e56:	4b35      	ldr	r3, [pc, #212]	; (8002f2c <Menu::showEkran(unsigned short)+0x574>)
 8002e58:	2200      	movs	r2, #0
 8002e5a:	2100      	movs	r1, #0
 8002e5c:	f001 fb91 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:470
		lcd->printXY(1,0,"      >>        ");
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	6898      	ldr	r0, [r3, #8]
 8002e64:	4b32      	ldr	r3, [pc, #200]	; (8002f30 <Menu::showEkran(unsigned short)+0x578>)
 8002e66:	2200      	movs	r2, #0
 8002e68:	2101      	movs	r1, #1
 8002e6a:	f001 fb8a 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
 8002e6e:	e04d      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:474
	}break;
	case e9_1_USTAWIENIA_FABRYCZNE:
	{//------------------>1234567890123456<
		lcd->printXY(0,0,"9.1.Ustaw. fabr.");
 8002e70:	687b      	ldr	r3, [r7, #4]
 8002e72:	6898      	ldr	r0, [r3, #8]
 8002e74:	4b2f      	ldr	r3, [pc, #188]	; (8002f34 <Menu::showEkran(unsigned short)+0x57c>)
 8002e76:	2200      	movs	r2, #0
 8002e78:	2100      	movs	r1, #0
 8002e7a:	f001 fb82 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:475
		lcd->printXY(1,0,"      >>        ");
 8002e7e:	687b      	ldr	r3, [r7, #4]
 8002e80:	6898      	ldr	r0, [r3, #8]
 8002e82:	4b2b      	ldr	r3, [pc, #172]	; (8002f30 <Menu::showEkran(unsigned short)+0x578>)
 8002e84:	2200      	movs	r2, #0
 8002e86:	2101      	movs	r1, #1
 8002e88:	f001 fb7b 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
 8002e8c:	e03e      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:479
	}break;
	case e9_2_POMPA_CWU_AKTYWNA:   // aktywna/nieaktywna:
	{//---------------------->1234567890123456<
		lcd->printXY(0,0,    "9.2. Pompa CWU  ");
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	6898      	ldr	r0, [r3, #8]
 8002e92:	4b29      	ldr	r3, [pc, #164]	; (8002f38 <Menu::showEkran(unsigned short)+0x580>)
 8002e94:	2200      	movs	r2, #0
 8002e96:	2100      	movs	r1, #0
 8002e98:	f001 fb73 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:480
		if (Parameter::getValue(Parameter::Nazwa::AKTYWNA_CWU)){
 8002e9c:	2011      	movs	r0, #17
 8002e9e:	f001 fba5 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 8002ea2:	4603      	mov	r3, r0
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	bf14      	ite	ne
 8002ea8:	2301      	movne	r3, #1
 8002eaa:	2300      	moveq	r3, #0
 8002eac:	b2db      	uxtb	r3, r3
 8002eae:	2b00      	cmp	r3, #0
 8002eb0:	d007      	beq.n	8002ec2 <Menu::showEkran(unsigned short)+0x50a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:481
			lcd->printXY(1,0,"    aktywna     ");
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	6898      	ldr	r0, [r3, #8]
 8002eb6:	4b21      	ldr	r3, [pc, #132]	; (8002f3c <Menu::showEkran(unsigned short)+0x584>)
 8002eb8:	2200      	movs	r2, #0
 8002eba:	2101      	movs	r1, #1
 8002ebc:	f001 fb61 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:483
		}else{
			lcd->printXY(1,0,"   nieaktywna   ");
 8002ec0:	e024      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	6898      	ldr	r0, [r3, #8]
 8002ec6:	4b1e      	ldr	r3, [pc, #120]	; (8002f40 <Menu::showEkran(unsigned short)+0x588>)
 8002ec8:	2200      	movs	r2, #0
 8002eca:	2101      	movs	r1, #1
 8002ecc:	f001 fb59 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
 8002ed0:	e01c      	b.n	8002f0c <Menu::showEkran(unsigned short)+0x554>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:488
		}
	}break;
	case e9_3_ALARM_TEMP_PODAJNIKA:  // alarm 85 oC
	{//---------------------->1234567890123456<
		lcd->printXY(0,0,    "9.3.Alarm podaj.");
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	6898      	ldr	r0, [r3, #8]
 8002ed6:	4b1b      	ldr	r3, [pc, #108]	; (8002f44 <Menu::showEkran(unsigned short)+0x58c>)
 8002ed8:	2200      	movs	r2, #0
 8002eda:	2100      	movs	r1, #0
 8002edc:	f001 fb51 	bl	8004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:489
		lcd->gotoXY(1,0);
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	689b      	ldr	r3, [r3, #8]
 8002ee4:	2200      	movs	r2, #0
 8002ee6:	2101      	movs	r1, #1
 8002ee8:	4618      	mov	r0, r3
 8002eea:	f001 fb34 	bl	8004556 <TextLcd::gotoXY(unsigned short, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:490
		param = Parameter::Nazwa::ALARM_TEMP_PODAJNIKA;
 8002eee:	230d      	movs	r3, #13
 8002ef0:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:491
		const char * patt = Parameter::getParamPattern(param);
 8002ef4:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8002ef8:	4618      	mov	r0, r3
 8002efa:	f001 fb9b 	bl	8004634 <Parameter::getParamPattern(Parameter::Nazwa)>
 8002efe:	60f8      	str	r0, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:492
		printPattern(patt, val);
 8002f00:	887b      	ldrh	r3, [r7, #2]
 8002f02:	461a      	mov	r2, r3
 8002f04:	68f9      	ldr	r1, [r7, #12]
 8002f06:	6878      	ldr	r0, [r7, #4]
 8002f08:	f7ff fd00 	bl	800290c <Menu::printPattern(char const*, unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:497
	}break;
	default:
		break;
	}
}
 8002f0c:	3750      	adds	r7, #80	; 0x50
 8002f0e:	46bd      	mov	sp, r7
 8002f10:	bd80      	pop	{r7, pc}
 8002f12:	bf00      	nop
 8002f14:	08004c2c 	.word	0x08004c2c
 8002f18:	08004c40 	.word	0x08004c40
 8002f1c:	08004c54 	.word	0x08004c54
 8002f20:	08004c68 	.word	0x08004c68
 8002f24:	08004c7c 	.word	0x08004c7c
 8002f28:	08004c90 	.word	0x08004c90
 8002f2c:	08004ca4 	.word	0x08004ca4
 8002f30:	08004b50 	.word	0x08004b50
 8002f34:	08004cb8 	.word	0x08004cb8
 8002f38:	08004ccc 	.word	0x08004ccc
 8002f3c:	08004ce0 	.word	0x08004ce0
 8002f40:	08004cf4 	.word	0x08004cf4
 8002f44:	08004d08 	.word	0x08004d08

08002f48 <Menu::edit(Keyboard::Key)>:
edit():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:499

bool Menu::edit(Keyboard::Key key){
 8002f48:	b580      	push	{r7, lr}
 8002f4a:	b082      	sub	sp, #8
 8002f4c:	af00      	add	r7, sp, #0
 8002f4e:	6078      	str	r0, [r7, #4]
 8002f50:	460b      	mov	r3, r1
 8002f52:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:500
	switch(editParam){
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	7c5b      	ldrb	r3, [r3, #17]
 8002f58:	3b02      	subs	r3, #2
 8002f5a:	2b0d      	cmp	r3, #13
 8002f5c:	f200 80c6 	bhi.w	80030ec <Menu::edit(Keyboard::Key)+0x1a4>
 8002f60:	a201      	add	r2, pc, #4	; (adr r2, 8002f68 <Menu::edit(Keyboard::Key)+0x20>)
 8002f62:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002f66:	bf00      	nop
 8002f68:	08002fa1 	.word	0x08002fa1
 8002f6c:	08002fa1 	.word	0x08002fa1
 8002f70:	08002fa1 	.word	0x08002fa1
 8002f74:	08002fa1 	.word	0x08002fa1
 8002f78:	08003011 	.word	0x08003011
 8002f7c:	08002fa1 	.word	0x08002fa1
 8002f80:	08002fa1 	.word	0x08002fa1
 8002f84:	08003011 	.word	0x08003011
 8002f88:	08002fa1 	.word	0x08002fa1
 8002f8c:	08003081 	.word	0x08003081
 8002f90:	08002fa1 	.word	0x08002fa1
 8002f94:	08002fa1 	.word	0x08002fa1
 8002f98:	08002fa1 	.word	0x08002fa1
 8002f9c:	08002fa1 	.word	0x08002fa1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:513
	case Parameter::Nazwa::POMPA_CO_TEMP_ZALACZ:
	case Parameter::Nazwa::POMPA_CWU_TEMP_ZALACZ:
	case Parameter::Nazwa::ALARM_SPADKU_TEMP:
	case Parameter::Nazwa::ALARM_TEMP_PODAJNIKA:
	{
		switch(key){
 8002fa0:	78fb      	ldrb	r3, [r7, #3]
 8002fa2:	3b01      	subs	r3, #1
 8002fa4:	2b03      	cmp	r3, #3
 8002fa6:	d82c      	bhi.n	8003002 <Menu::edit(Keyboard::Key)+0xba>
 8002fa8:	a201      	add	r2, pc, #4	; (adr r2, 8002fb0 <Menu::edit(Keyboard::Key)+0x68>)
 8002faa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002fae:	bf00      	nop
 8002fb0:	08002fed 	.word	0x08002fed
 8002fb4:	08002fed 	.word	0x08002fed
 8002fb8:	08002fc1 	.word	0x08002fc1
 8002fbc:	08002fcf 	.word	0x08002fcf
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:514
		case Keyboard::Key::RIGHT:		editValue += 2;	break;
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	8a5b      	ldrh	r3, [r3, #18]
 8002fc4:	3302      	adds	r3, #2
 8002fc6:	b29a      	uxth	r2, r3
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	825a      	strh	r2, [r3, #18]
 8002fcc:	e019      	b.n	8003002 <Menu::edit(Keyboard::Key)+0xba>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:515
		case Keyboard::Key::LEFT:		if (editValue >= 2) editValue -= 2; else editValue = 0; break;
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	8a5b      	ldrh	r3, [r3, #18]
 8002fd2:	2b01      	cmp	r3, #1
 8002fd4:	dd06      	ble.n	8002fe4 <Menu::edit(Keyboard::Key)+0x9c>
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	8a5b      	ldrh	r3, [r3, #18]
 8002fda:	3b02      	subs	r3, #2
 8002fdc:	b29a      	uxth	r2, r3
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	825a      	strh	r2, [r3, #18]
 8002fe2:	e00e      	b.n	8003002 <Menu::edit(Keyboard::Key)+0xba>
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	2200      	movs	r2, #0
 8002fe8:	825a      	strh	r2, [r3, #18]
 8002fea:	e00a      	b.n	8003002 <Menu::edit(Keyboard::Key)+0xba>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:517
		case Keyboard::Key::CANCEL:
		case Keyboard::Key::ENTER:		Parameter::setValue(editParam, editValue); editMode = false; break;
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	7c5a      	ldrb	r2, [r3, #17]
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	8a5b      	ldrh	r3, [r3, #18]
 8002ff4:	4619      	mov	r1, r3
 8002ff6:	4610      	mov	r0, r2
 8002ff8:	f001 fb07 	bl	800460a <Parameter::setValue(Parameter::Nazwa, unsigned short)>
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	2200      	movs	r2, #0
 8003000:	751a      	strb	r2, [r3, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:521
		default:
			break;
		}
		showEkran(editValue);
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	8a5b      	ldrh	r3, [r3, #18]
 8003006:	4619      	mov	r1, r3
 8003008:	6878      	ldr	r0, [r7, #4]
 800300a:	f7ff fcd5 	bl	80029b8 <Menu::showEkran(unsigned short)>
 800300e:	e070      	b.n	80030f2 <Menu::edit(Keyboard::Key)+0x1aa>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:526
	}break;
	case Parameter::Nazwa::PODAJNIK_PRZERWA:
	case Parameter::Nazwa::PODTRZYMANIE_PRZERWA:
	{
		switch(key){
 8003010:	78fb      	ldrb	r3, [r7, #3]
 8003012:	3b01      	subs	r3, #1
 8003014:	2b03      	cmp	r3, #3
 8003016:	d82c      	bhi.n	8003072 <Menu::edit(Keyboard::Key)+0x12a>
 8003018:	a201      	add	r2, pc, #4	; (adr r2, 8003020 <Menu::edit(Keyboard::Key)+0xd8>)
 800301a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800301e:	bf00      	nop
 8003020:	0800305d 	.word	0x0800305d
 8003024:	0800305d 	.word	0x0800305d
 8003028:	08003031 	.word	0x08003031
 800302c:	0800303f 	.word	0x0800303f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:527
		case Keyboard::Key::RIGHT:		editValue += 10;	break;
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	8a5b      	ldrh	r3, [r3, #18]
 8003034:	330a      	adds	r3, #10
 8003036:	b29a      	uxth	r2, r3
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	825a      	strh	r2, [r3, #18]
 800303c:	e019      	b.n	8003072 <Menu::edit(Keyboard::Key)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:528
		case Keyboard::Key::LEFT:		if (editValue >= 10) editValue -= 10; else editValue = 0; break;
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	8a5b      	ldrh	r3, [r3, #18]
 8003042:	2b09      	cmp	r3, #9
 8003044:	dd06      	ble.n	8003054 <Menu::edit(Keyboard::Key)+0x10c>
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	8a5b      	ldrh	r3, [r3, #18]
 800304a:	3b0a      	subs	r3, #10
 800304c:	b29a      	uxth	r2, r3
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	825a      	strh	r2, [r3, #18]
 8003052:	e00e      	b.n	8003072 <Menu::edit(Keyboard::Key)+0x12a>
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	2200      	movs	r2, #0
 8003058:	825a      	strh	r2, [r3, #18]
 800305a:	e00a      	b.n	8003072 <Menu::edit(Keyboard::Key)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:530
		case Keyboard::Key::CANCEL:
		case Keyboard::Key::ENTER:		Parameter::setValue(editParam, editValue);  editMode = false; break;
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	7c5a      	ldrb	r2, [r3, #17]
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	8a5b      	ldrh	r3, [r3, #18]
 8003064:	4619      	mov	r1, r3
 8003066:	4610      	mov	r0, r2
 8003068:	f001 facf 	bl	800460a <Parameter::setValue(Parameter::Nazwa, unsigned short)>
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	2200      	movs	r2, #0
 8003070:	751a      	strb	r2, [r3, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:534
		default:
			break;
		}
		showEkran(editValue);
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	8a5b      	ldrh	r3, [r3, #18]
 8003076:	4619      	mov	r1, r3
 8003078:	6878      	ldr	r0, [r7, #4]
 800307a:	f7ff fc9d 	bl	80029b8 <Menu::showEkran(unsigned short)>
 800307e:	e038      	b.n	80030f2 <Menu::edit(Keyboard::Key)+0x1aa>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:539
	}break;

	case Parameter::Nazwa::DMUCHAWA_MOC:
	{
		switch(key){
 8003080:	78fb      	ldrb	r3, [r7, #3]
 8003082:	3b01      	subs	r3, #1
 8003084:	2b03      	cmp	r3, #3
 8003086:	d82a      	bhi.n	80030de <Menu::edit(Keyboard::Key)+0x196>
 8003088:	a201      	add	r2, pc, #4	; (adr r2, 8003090 <Menu::edit(Keyboard::Key)+0x148>)
 800308a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800308e:	bf00      	nop
 8003090:	080030c5 	.word	0x080030c5
 8003094:	080030c5 	.word	0x080030c5
 8003098:	080030a1 	.word	0x080030a1
 800309c:	080030af 	.word	0x080030af
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:540
		case Keyboard::Key::RIGHT:		editValue++;	break;
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	8a5b      	ldrh	r3, [r3, #18]
 80030a4:	3301      	adds	r3, #1
 80030a6:	b29a      	uxth	r2, r3
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	825a      	strh	r2, [r3, #18]
 80030ac:	e017      	b.n	80030de <Menu::edit(Keyboard::Key)+0x196>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:541
		case Keyboard::Key::LEFT:		if (editValue > 0) editValue--; break;
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	8a5b      	ldrh	r3, [r3, #18]
 80030b2:	2b00      	cmp	r3, #0
 80030b4:	dd12      	ble.n	80030dc <Menu::edit(Keyboard::Key)+0x194>
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	8a5b      	ldrh	r3, [r3, #18]
 80030ba:	3b01      	subs	r3, #1
 80030bc:	b29a      	uxth	r2, r3
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	825a      	strh	r2, [r3, #18]
 80030c2:	e00c      	b.n	80030de <Menu::edit(Keyboard::Key)+0x196>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:543
		case Keyboard::Key::CANCEL:
		case Keyboard::Key::ENTER:		Parameter::setValue(editParam, editValue); editMode = false;  break;
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	7c5a      	ldrb	r2, [r3, #17]
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	8a5b      	ldrh	r3, [r3, #18]
 80030cc:	4619      	mov	r1, r3
 80030ce:	4610      	mov	r0, r2
 80030d0:	f001 fa9b 	bl	800460a <Parameter::setValue(Parameter::Nazwa, unsigned short)>
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	2200      	movs	r2, #0
 80030d8:	751a      	strb	r2, [r3, #20]
 80030da:	e000      	b.n	80030de <Menu::edit(Keyboard::Key)+0x196>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:541
		case Keyboard::Key::LEFT:		if (editValue > 0) editValue--; break;
 80030dc:	bf00      	nop
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:547
		default:
			break;
		}
		showEkran(editValue);
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	8a5b      	ldrh	r3, [r3, #18]
 80030e2:	4619      	mov	r1, r3
 80030e4:	6878      	ldr	r0, [r7, #4]
 80030e6:	f7ff fc67 	bl	80029b8 <Menu::showEkran(unsigned short)>
 80030ea:	e002      	b.n	80030f2 <Menu::edit(Keyboard::Key)+0x1aa>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:557
	case Parameter::Nazwa::TRYB_LETNI:
	case Parameter::Nazwa::AKTYWNA_CWU:
	case Parameter::Nazwa::NONE:
	case Parameter::Nazwa::LAST_PARAMETER:
	default:
		editMode = false;
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	2200      	movs	r2, #0
 80030f0:	751a      	strb	r2, [r3, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:560
		break;
	}
	return false;
 80030f2:	2300      	movs	r3, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.cpp:561
}
 80030f4:	4618      	mov	r0, r3
 80030f6:	3708      	adds	r7, #8
 80030f8:	46bd      	mov	sp, r7
 80030fa:	bd80      	pop	{r7, pc}

080030fc <Parameter::fillFastDataTab()>:
fillFastDataTab():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:33
uint16_t Parameter::nrOfParams = MAX_NR_OF_EEPROM_PARAMS;
uint16_t VirtAddVarTab[MAX_NR_OF_EEPROM_PARAMS];

uint16_t fastCopyofData[Parameter::Nazwa::LAST_PARAMETER + 1];

bool Parameter::fillFastDataTab(){
 80030fc:	b580      	push	{r7, lr}
 80030fe:	b084      	sub	sp, #16
 8003100:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:34
	bool result = true;
 8003102:	2301      	movs	r3, #1
 8003104:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:35
	for (uint16_t i = 1; i < Parameter::Nazwa::LAST_PARAMETER; i++){
 8003106:	2301      	movs	r3, #1
 8003108:	81bb      	strh	r3, [r7, #12]
 800310a:	89bb      	ldrh	r3, [r7, #12]
 800310c:	2b12      	cmp	r3, #18
 800310e:	dc32      	bgt.n	8003176 <Parameter::fillFastDataTab()+0x7a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:36
		Nazwa nazwa = Nazwa(i);
 8003110:	89bb      	ldrh	r3, [r7, #12]
 8003112:	72fb      	strb	r3, [r7, #11]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:37
		uint16_t val = 0;
 8003114:	2300      	movs	r3, #0
 8003116:	80fb      	strh	r3, [r7, #6]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:38
		uint16_t stat = EE_ReadVariable(nazwa, &val);
 8003118:	7afb      	ldrb	r3, [r7, #11]
 800311a:	b29b      	uxth	r3, r3
 800311c:	1dba      	adds	r2, r7, #6
 800311e:	4611      	mov	r1, r2
 8003120:	4618      	mov	r0, r3
 8003122:	f7fe fc81 	bl	8001a28 <EE_ReadVariable>
 8003126:	4603      	mov	r3, r0
 8003128:	813b      	strh	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:39
		if (stat == 1){ // nie ma takiego jeszcze?
 800312a:	893b      	ldrh	r3, [r7, #8]
 800312c:	2b01      	cmp	r3, #1
 800312e:	d114      	bne.n	800315a <Parameter::fillFastDataTab()+0x5e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:40
			val = getDefaultValue(nazwa);			// zaladowac wartosc domyslna
 8003130:	7afb      	ldrb	r3, [r7, #11]
 8003132:	4618      	mov	r0, r3
 8003134:	f001 faca 	bl	80046cc <Parameter::getDefaultValue(Parameter::Nazwa)>
 8003138:	4603      	mov	r3, r0
 800313a:	80fb      	strh	r3, [r7, #6]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:41
			stat = EE_WriteVariable(nazwa, val);
 800313c:	7afb      	ldrb	r3, [r7, #11]
 800313e:	b29b      	uxth	r3, r3
 8003140:	88fa      	ldrh	r2, [r7, #6]
 8003142:	4611      	mov	r1, r2
 8003144:	4618      	mov	r0, r3
 8003146:	f7fe fcb9 	bl	8001abc <EE_WriteVariable>
 800314a:	4603      	mov	r3, r0
 800314c:	813b      	strh	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:42
			if (stat != FLASH_COMPLETE){
 800314e:	893b      	ldrh	r3, [r7, #8]
 8003150:	2b08      	cmp	r3, #8
 8003152:	d007      	beq.n	8003164 <Parameter::fillFastDataTab()+0x68>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:43
				result =  false;
 8003154:	2300      	movs	r3, #0
 8003156:	73fb      	strb	r3, [r7, #15]
 8003158:	e004      	b.n	8003164 <Parameter::fillFastDataTab()+0x68>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:45
			}
		}else if (stat != 0){
 800315a:	893b      	ldrh	r3, [r7, #8]
 800315c:	2b00      	cmp	r3, #0
 800315e:	d001      	beq.n	8003164 <Parameter::fillFastDataTab()+0x68>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:46
			result =  false;
 8003160:	2300      	movs	r3, #0
 8003162:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:48
		}
		fastCopyofData[i] = val;
 8003164:	89bb      	ldrh	r3, [r7, #12]
 8003166:	88f9      	ldrh	r1, [r7, #6]
 8003168:	4a05      	ldr	r2, [pc, #20]	; (8003180 <Parameter::fillFastDataTab()+0x84>)
 800316a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:35
	for (uint16_t i = 1; i < Parameter::Nazwa::LAST_PARAMETER; i++){
 800316e:	89bb      	ldrh	r3, [r7, #12]
 8003170:	3301      	adds	r3, #1
 8003172:	81bb      	strh	r3, [r7, #12]
 8003174:	e7c9      	b.n	800310a <Parameter::fillFastDataTab()+0xe>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:50
	}
	return result;
 8003176:	7bfb      	ldrb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:51
}
 8003178:	4618      	mov	r0, r3
 800317a:	3710      	adds	r7, #16
 800317c:	46bd      	mov	sp, r7
 800317e:	bd80      	pop	{r7, pc}
 8003180:	20000364 	.word	0x20000364

08003184 <FlashUnlock()>:
FlashUnlock():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:57

/**
 * @brief  Unlock the FLASH control register access
 * @retval HAL Status
 */
bool FlashUnlock(void){
 8003184:	b480      	push	{r7}
 8003186:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:58
	if((FLASH->CR & FLASH_CR_LOCK) != RESET)
 8003188:	4b09      	ldr	r3, [pc, #36]	; (80031b0 <FlashUnlock()+0x2c>)
 800318a:	691b      	ldr	r3, [r3, #16]
 800318c:	0fdb      	lsrs	r3, r3, #31
 800318e:	b2db      	uxtb	r3, r3
 8003190:	2b00      	cmp	r3, #0
 8003192:	d007      	beq.n	80031a4 <FlashUnlock()+0x20>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:61
	{
		/* Authorize the FLASH Registers access */
		FLASH->KEYR = FLASH_KEY1;
 8003194:	4b06      	ldr	r3, [pc, #24]	; (80031b0 <FlashUnlock()+0x2c>)
 8003196:	4a07      	ldr	r2, [pc, #28]	; (80031b4 <FlashUnlock()+0x30>)
 8003198:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:62
		FLASH->KEYR = FLASH_KEY2;
 800319a:	4b05      	ldr	r3, [pc, #20]	; (80031b0 <FlashUnlock()+0x2c>)
 800319c:	4a06      	ldr	r2, [pc, #24]	; (80031b8 <FlashUnlock()+0x34>)
 800319e:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:66
	} else{
		return false;
	}
	return true;
 80031a0:	2301      	movs	r3, #1
 80031a2:	e000      	b.n	80031a6 <FlashUnlock()+0x22>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:64
		return false;
 80031a4:	2300      	movs	r3, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:67
}
 80031a6:	4618      	mov	r0, r3
 80031a8:	46bd      	mov	sp, r7
 80031aa:	bc80      	pop	{r7}
 80031ac:	4770      	bx	lr
 80031ae:	bf00      	nop
 80031b0:	40023c00 	.word	0x40023c00
 80031b4:	45670123 	.word	0x45670123
 80031b8:	cdef89ab 	.word	0xcdef89ab

080031bc <FlashLock()>:
FlashLock():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:73

/**
 * @brief  Locks the FLASH control register access
 * @retval HAL Status
 */
bool FlashLock(void){
 80031bc:	b480      	push	{r7}
 80031be:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:75
	/* Set the LOCK Bit to lock the FLASH Registers access */
	FLASH->CR |= FLASH_CR_LOCK;
 80031c0:	4a05      	ldr	r2, [pc, #20]	; (80031d8 <FlashLock()+0x1c>)
 80031c2:	4b05      	ldr	r3, [pc, #20]	; (80031d8 <FlashLock()+0x1c>)
 80031c4:	691b      	ldr	r3, [r3, #16]
 80031c6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80031ca:	6113      	str	r3, [r2, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:76
	return true;
 80031cc:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:77
}
 80031ce:	4618      	mov	r0, r3
 80031d0:	46bd      	mov	sp, r7
 80031d2:	bc80      	pop	{r7}
 80031d4:	4770      	bx	lr
 80031d6:	bf00      	nop
 80031d8:	40023c00 	.word	0x40023c00

080031dc <Parameter::initEepromMemory()>:
_ZN9Parameter16initEepromMemoryEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:112
//		/* Clear FLASH Operation error pending bit */
//		__HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
//	}
//}

bool Parameter::initEepromMemory(){
 80031dc:	b580      	push	{r7, lr}
 80031de:	b082      	sub	sp, #8
 80031e0:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:114
	bool result;
	FlashUnlock();
 80031e2:	f7ff ffcf 	bl	8003184 <FlashUnlock()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:116
	//clearFlashRegs();
	result = (EE_Init() == FLASH_COMPLETE);
 80031e6:	f7fe fac9 	bl	800177c <EE_Init>
 80031ea:	4603      	mov	r3, r0
 80031ec:	2b08      	cmp	r3, #8
 80031ee:	bf0c      	ite	eq
 80031f0:	2301      	moveq	r3, #1
 80031f2:	2300      	movne	r3, #0
 80031f4:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:118
	//if (!result) result = (EE_Init() == FLASH_COMPLETE);
	fillFastDataTab();
 80031f6:	f7ff ff81 	bl	80030fc <Parameter::fillFastDataTab()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:119
	FlashLock();
 80031fa:	f7ff ffdf 	bl	80031bc <FlashLock()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:120
	return result;
 80031fe:	79fb      	ldrb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:121
}
 8003200:	4618      	mov	r0, r3
 8003202:	3708      	adds	r7, #8
 8003204:	46bd      	mov	sp, r7
 8003206:	bd80      	pop	{r7, pc}

08003208 <Parameter::setEEpromValue(unsigned short, unsigned short)>:
_ZN9Parameter14setEEpromValueEtt():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:125



bool Parameter::setEEpromValue(uint16_t virtAdr, uint16_t value){
 8003208:	b580      	push	{r7, lr}
 800320a:	b084      	sub	sp, #16
 800320c:	af00      	add	r7, sp, #0
 800320e:	4603      	mov	r3, r0
 8003210:	460a      	mov	r2, r1
 8003212:	80fb      	strh	r3, [r7, #6]
 8003214:	4613      	mov	r3, r2
 8003216:	80bb      	strh	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:126
	if (virtAdr >= Nazwa::LAST_PARAMETER) return false;
 8003218:	88fb      	ldrh	r3, [r7, #6]
 800321a:	2b12      	cmp	r3, #18
 800321c:	dd01      	ble.n	8003222 <Parameter::setEEpromValue(unsigned short, unsigned short)+0x1a>
 800321e:	2300      	movs	r3, #0
 8003220:	e016      	b.n	8003250 <Parameter::setEEpromValue(unsigned short, unsigned short)+0x48>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:127
	fastCopyofData[virtAdr] = value;
 8003222:	88fb      	ldrh	r3, [r7, #6]
 8003224:	490c      	ldr	r1, [pc, #48]	; (8003258 <Parameter::setEEpromValue(unsigned short, unsigned short)+0x50>)
 8003226:	88ba      	ldrh	r2, [r7, #4]
 8003228:	f821 2013 	strh.w	r2, [r1, r3, lsl #1]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:128
	FlashUnlock();
 800322c:	f7ff ffaa 	bl	8003184 <FlashUnlock()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:129
	uint16_t result = EE_WriteVariable(virtAdr,  value);
 8003230:	88ba      	ldrh	r2, [r7, #4]
 8003232:	88fb      	ldrh	r3, [r7, #6]
 8003234:	4611      	mov	r1, r2
 8003236:	4618      	mov	r0, r3
 8003238:	f7fe fc40 	bl	8001abc <EE_WriteVariable>
 800323c:	4603      	mov	r3, r0
 800323e:	81fb      	strh	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:130
	FlashLock();
 8003240:	f7ff ffbc 	bl	80031bc <FlashLock()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:131
	return (result == FLASH_COMPLETE);
 8003244:	89fb      	ldrh	r3, [r7, #14]
 8003246:	2b08      	cmp	r3, #8
 8003248:	bf0c      	ite	eq
 800324a:	2301      	moveq	r3, #1
 800324c:	2300      	movne	r3, #0
 800324e:	b2db      	uxtb	r3, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:132
}
 8003250:	4618      	mov	r0, r3
 8003252:	3710      	adds	r7, #16
 8003254:	46bd      	mov	sp, r7
 8003256:	bd80      	pop	{r7, pc}
 8003258:	20000364 	.word	0x20000364

0800325c <Parameter::getEEpromValue(unsigned short)>:
_ZN9Parameter14getEEpromValueEt():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:134

int32_t Parameter::getEEpromValue(uint16_t virtAdr){
 800325c:	b480      	push	{r7}
 800325e:	b083      	sub	sp, #12
 8003260:	af00      	add	r7, sp, #0
 8003262:	4603      	mov	r3, r0
 8003264:	80fb      	strh	r3, [r7, #6]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:135
	if (virtAdr >= Nazwa::LAST_PARAMETER) return -1;
 8003266:	88fb      	ldrh	r3, [r7, #6]
 8003268:	2b12      	cmp	r3, #18
 800326a:	dd02      	ble.n	8003272 <Parameter::getEEpromValue(unsigned short)+0x16>
 800326c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003270:	e003      	b.n	800327a <Parameter::getEEpromValue(unsigned short)+0x1e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:136
	return fastCopyofData[virtAdr];
 8003272:	88fb      	ldrh	r3, [r7, #6]
 8003274:	4a03      	ldr	r2, [pc, #12]	; (8003284 <Parameter::getEEpromValue(unsigned short)+0x28>)
 8003276:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.cpp:146
	//		if (setEEpromValue(virtAdr, 0)) return 0;
	//		else return -1;
	//	}
	//	return (ret == FLASH_COMPLETE) ? val : -1;

}
 800327a:	4618      	mov	r0, r3
 800327c:	370c      	adds	r7, #12
 800327e:	46bd      	mov	sp, r7
 8003280:	bc80      	pop	{r7}
 8003282:	4770      	bx	lr
 8003284:	20000364 	.word	0x20000364

08003288 <Pomiar::getPomiarRaw(Pomiar::Analogi)>:
_ZN6Pomiar12getPomiarRawENS_7AnalogiE():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pomiar.cpp:17

constexpr uint8_t  ADC_INPUTS = Pomiar::Analogi::count;

volatile uint16_t dataTable[ADC_INPUTS];

uint16_t Pomiar::getPomiarRaw(Pomiar::Analogi nr){
 8003288:	b480      	push	{r7}
 800328a:	b083      	sub	sp, #12
 800328c:	af00      	add	r7, sp, #0
 800328e:	4603      	mov	r3, r0
 8003290:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pomiar.cpp:18
	if (nr >= ADC_INPUTS) return 0xfffe;
 8003292:	79fb      	ldrb	r3, [r7, #7]
 8003294:	2b05      	cmp	r3, #5
 8003296:	dd02      	ble.n	800329e <Pomiar::getPomiarRaw(Pomiar::Analogi)+0x16>
 8003298:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 800329c:	e004      	b.n	80032a8 <Pomiar::getPomiarRaw(Pomiar::Analogi)+0x20>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pomiar.cpp:19
		return dataTable[nr];
 800329e:	79fb      	ldrb	r3, [r7, #7]
 80032a0:	4a04      	ldr	r2, [pc, #16]	; (80032b4 <Pomiar::getPomiarRaw(Pomiar::Analogi)+0x2c>)
 80032a2:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80032a6:	b29b      	uxth	r3, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pomiar.cpp:20
}
 80032a8:	4618      	mov	r0, r3
 80032aa:	370c      	adds	r7, #12
 80032ac:	46bd      	mov	sp, r7
 80032ae:	bc80      	pop	{r7}
 80032b0:	4770      	bx	lr
 80032b2:	bf00      	nop
 80032b4:	2000038c 	.word	0x2000038c

080032b8 <Pomiar::getDataTablePtr()>:
_ZN6Pomiar15getDataTablePtrEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pomiar.cpp:23


uint16_t * Pomiar::getDataTablePtr(){ return (uint16_t*) dataTable; }
 80032b8:	b480      	push	{r7}
 80032ba:	af00      	add	r7, sp, #0
 80032bc:	4b02      	ldr	r3, [pc, #8]	; (80032c8 <Pomiar::getDataTablePtr()+0x10>)
 80032be:	4618      	mov	r0, r3
 80032c0:	46bd      	mov	sp, r7
 80032c2:	bc80      	pop	{r7}
 80032c4:	4770      	bx	lr
 80032c6:	bf00      	nop
 80032c8:	2000038c 	.word	0x2000038c

080032cc <Praca::Praca()>:
_ZN5PracaC2Ev.lto_priv.6():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:56
		}
		return true;
	}

public:
	Praca(
 80032cc:	b480      	push	{r7}
 80032ce:	b083      	sub	sp, #12
 80032d0:	af00      	add	r7, sp, #0
 80032d2:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:60
			//Sterownik * sterownik
			){
		//sterCO = sterownik;
		modeTimeMs = 0;
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	2200      	movs	r2, #0
 80032d8:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:61
		timeDmuchawaMs = 0;
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	2200      	movs	r2, #0
 80032de:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:62
		timePodajnikMs = 0;
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	2200      	movs	r2, #0
 80032e4:	60da      	str	r2, [r3, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:63
		mode = Mode::START;
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	2200      	movs	r2, #0
 80032ea:	701a      	strb	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:64
		sezon = Parameter::SEZON::LATO;
 80032ec:	687b      	ldr	r3, [r7, #4]
 80032ee:	2201      	movs	r2, #1
 80032f0:	741a      	strb	r2, [r3, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:65
	}
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	4618      	mov	r0, r3
 80032f6:	370c      	adds	r7, #12
 80032f8:	46bd      	mov	sp, r7
 80032fa:	bc80      	pop	{r7}
 80032fc:	4770      	bx	lr

080032fe <Praca::setDmuchawaTime(unsigned long)>:
_ZN5Praca15setDmuchawaTimeEm():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:88
	void setManualMode(bool setManual){	mode = setManual ? Mode::MANUAL : Mode::START;	}
	bool isInManualMode(){ return mode == Mode::MANUAL; }

	inline Mode getMode(){ return mode; }

	void setDmuchawaTime(uint32_t timeIntervalMs){ timeDmuchawaMs = timeIntervalMs; }
 80032fe:	b480      	push	{r7}
 8003300:	b083      	sub	sp, #12
 8003302:	af00      	add	r7, sp, #0
 8003304:	6078      	str	r0, [r7, #4]
 8003306:	6039      	str	r1, [r7, #0]
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	683a      	ldr	r2, [r7, #0]
 800330c:	609a      	str	r2, [r3, #8]
 800330e:	370c      	adds	r7, #12
 8003310:	46bd      	mov	sp, r7
 8003312:	bc80      	pop	{r7}
 8003314:	4770      	bx	lr

08003316 <Praca::setPodajnikTime(unsigned long)>:
_ZN5Praca15setPodajnikTimeEm():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:89
	void setPodajnikTime(uint32_t timeIntervalMs){ timePodajnikMs = timeIntervalMs; }
 8003316:	b480      	push	{r7}
 8003318:	b083      	sub	sp, #12
 800331a:	af00      	add	r7, sp, #0
 800331c:	6078      	str	r0, [r7, #4]
 800331e:	6039      	str	r1, [r7, #0]
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	683a      	ldr	r2, [r7, #0]
 8003324:	60da      	str	r2, [r3, #12]
 8003326:	370c      	adds	r7, #12
 8003328:	46bd      	mov	sp, r7
 800332a:	bc80      	pop	{r7}
 800332c:	4770      	bx	lr

0800332e <Praca::isModeTimeOut()>:
_ZN5Praca13isModeTimeOutEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:91

	inline bool isModeTimeOut(){ return modeTimeMs == 0; }
 800332e:	b480      	push	{r7}
 8003330:	b083      	sub	sp, #12
 8003332:	af00      	add	r7, sp, #0
 8003334:	6078      	str	r0, [r7, #4]
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	685b      	ldr	r3, [r3, #4]
 800333a:	2b00      	cmp	r3, #0
 800333c:	bf0c      	ite	eq
 800333e:	2301      	moveq	r3, #1
 8003340:	2300      	movne	r3, #0
 8003342:	b2db      	uxtb	r3, r3
 8003344:	4618      	mov	r0, r3
 8003346:	370c      	adds	r7, #12
 8003348:	46bd      	mov	sp, r7
 800334a:	bc80      	pop	{r7}
 800334c:	4770      	bx	lr

0800334e <Praca::isPodajnikTimeOut()>:
_ZN5Praca17isPodajnikTimeOutEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:93
	inline bool isDmuchawaTimeOut(){ return timeDmuchawaMs == 0; }
	inline bool isPodajnikTimeOut(){ return timePodajnikMs == 0; }
 800334e:	b480      	push	{r7}
 8003350:	b083      	sub	sp, #12
 8003352:	af00      	add	r7, sp, #0
 8003354:	6078      	str	r0, [r7, #4]
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	68db      	ldr	r3, [r3, #12]
 800335a:	2b00      	cmp	r3, #0
 800335c:	bf0c      	ite	eq
 800335e:	2301      	moveq	r3, #1
 8003360:	2300      	movne	r3, #0
 8003362:	b2db      	uxtb	r3, r3
 8003364:	4618      	mov	r0, r3
 8003366:	370c      	adds	r7, #12
 8003368:	46bd      	mov	sp, r7
 800336a:	bc80      	pop	{r7}
 800336c:	4770      	bx	lr

0800336e <Praca::pracuj()>:
_ZN5Praca6pracujEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:106

	inline void init(){
		setMode(Mode::START, MODE_START_MS);
	}

	void pracuj(){
 800336e:	b580      	push	{r7, lr}
 8003370:	b082      	sub	sp, #8
 8003372:	af00      	add	r7, sp, #0
 8003374:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:107
		if (mode == Mode::MANUAL){
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	781b      	ldrb	r3, [r3, #0]
 800337a:	2b04      	cmp	r3, #4
 800337c:	d103      	bne.n	8003386 <Praca::pracuj()+0x18>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:108
			pracujManual();
 800337e:	6878      	ldr	r0, [r7, #4]
 8003380:	f7fd feda 	bl	8001138 <Praca::pracujManual()>
 8003384:	e002      	b.n	800338c <Praca::pracuj()+0x1e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:110
		}else{
			pracujAutomat();
 8003386:	6878      	ldr	r0, [r7, #4]
 8003388:	f7fd fee0 	bl	800114c <Praca::pracujAutomat()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:112
		}
	}
 800338c:	3708      	adds	r7, #8
 800338e:	46bd      	mov	sp, r7
 8003390:	bd80      	pop	{r7, pc}

08003392 <Gpio::getOutputValue()>:
getOutputValue():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:110
	inline bool getOutputValue(){
 8003392:	b480      	push	{r7}
 8003394:	b083      	sub	sp, #12
 8003396:	af00      	add	r7, sp, #0
 8003398:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:111
		return (gpio->ODR & (1<<pinNr));
 800339a:	687b      	ldr	r3, [r7, #4]
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	695b      	ldr	r3, [r3, #20]
 80033a0:	687a      	ldr	r2, [r7, #4]
 80033a2:	8892      	ldrh	r2, [r2, #4]
 80033a4:	4611      	mov	r1, r2
 80033a6:	2201      	movs	r2, #1
 80033a8:	408a      	lsls	r2, r1
 80033aa:	4013      	ands	r3, r2
 80033ac:	2b00      	cmp	r3, #0
 80033ae:	bf14      	ite	ne
 80033b0:	2301      	movne	r3, #1
 80033b2:	2300      	moveq	r3, #0
 80033b4:	b2db      	uxtb	r3, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:112
	}
 80033b6:	4618      	mov	r0, r3
 80033b8:	370c      	adds	r7, #12
 80033ba:	46bd      	mov	sp, r7
 80033bc:	bc80      	pop	{r7}
 80033be:	4770      	bx	lr

080033c0 <Silnik::turnOn()>:
_ZN6Silnik6turnOnEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Silnik.h:25

	void init(){
		gpio->setup(Gpio::GpioMode::OUTPUT, Gpio::GpioOType::PushPull, Gpio::GpioPuPd::NoPull, Gpio::GpioSpeed::MediumSpeed);
	}

	void turnOn(){ gpio->pinSetUp(); }
 80033c0:	b580      	push	{r7, lr}
 80033c2:	b082      	sub	sp, #8
 80033c4:	af00      	add	r7, sp, #0
 80033c6:	6078      	str	r0, [r7, #4]
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	4618      	mov	r0, r3
 80033ce:	f000 fa33 	bl	8003838 <Gpio::pinSetUp()>
 80033d2:	3708      	adds	r7, #8
 80033d4:	46bd      	mov	sp, r7
 80033d6:	bd80      	pop	{r7, pc}

080033d8 <Silnik::turnOff()>:
_ZN6Silnik7turnOffEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Silnik.h:26
	void turnOff(){ gpio->pinSetDown(); }
 80033d8:	b580      	push	{r7, lr}
 80033da:	b082      	sub	sp, #8
 80033dc:	af00      	add	r7, sp, #0
 80033de:	6078      	str	r0, [r7, #4]
 80033e0:	687b      	ldr	r3, [r7, #4]
 80033e2:	681b      	ldr	r3, [r3, #0]
 80033e4:	4618      	mov	r0, r3
 80033e6:	f000 fa37 	bl	8003858 <Gpio::pinSetDown()>
 80033ea:	3708      	adds	r7, #8
 80033ec:	46bd      	mov	sp, r7
 80033ee:	bd80      	pop	{r7, pc}

080033f0 <Silnik::isTurnedOn()>:
_ZN6Silnik10isTurnedOnEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Silnik.h:28
	void set(bool newState){ gpio->pinSet(newState); }
	bool isTurnedOn(){ return gpio->getOutputValue(); }
 80033f0:	b580      	push	{r7, lr}
 80033f2:	b082      	sub	sp, #8
 80033f4:	af00      	add	r7, sp, #0
 80033f6:	6078      	str	r0, [r7, #4]
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	4618      	mov	r0, r3
 80033fe:	f7ff ffc8 	bl	8003392 <Gpio::getOutputValue()>
 8003402:	4603      	mov	r3, r0
 8003404:	4618      	mov	r0, r3
 8003406:	3708      	adds	r7, #8
 8003408:	46bd      	mov	sp, r7
 800340a:	bd80      	pop	{r7, pc}

0800340c <Sterownik::getTempCWU()>:
_ZN9Sterownik10getTempCWUEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:79
	int32_t getTempCWU(){return Pomiar::getPomiar(Pomiar::Analogi::TEMP_CWU); }
 800340c:	b580      	push	{r7, lr}
 800340e:	b082      	sub	sp, #8
 8003410:	af00      	add	r7, sp, #0
 8003412:	6078      	str	r0, [r7, #4]
 8003414:	2003      	movs	r0, #3
 8003416:	f001 f8d9 	bl	80045cc <Pomiar::getPomiar(Pomiar::Analogi)>
 800341a:	4603      	mov	r3, r0
 800341c:	4618      	mov	r0, r3
 800341e:	3708      	adds	r7, #8
 8003420:	46bd      	mov	sp, r7
 8003422:	bd80      	pop	{r7, pc}

08003424 <_exit>:
_exit():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_exit.c:38
// is required.

void
__attribute__((weak))
_exit(int code __attribute__((unused)))
{
 8003424:	b480      	push	{r7}
 8003426:	b083      	sub	sp, #12
 8003428:	af00      	add	r7, sp, #0
 800342a:	6078      	str	r0, [r7, #4]
 800342c:	e7fe      	b.n	800342c <_exit+0x8>
	...

08003430 <__initialize_args>:
__initialize_args():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_syscalls.c:37
// args from the debugger. You can also use it if you decide to keep
// some args in a non-volatile memory.

void __attribute__((weak))
__initialize_args(int* p_argc, char*** p_argv)
{
 8003430:	b480      	push	{r7}
 8003432:	b083      	sub	sp, #12
 8003434:	af00      	add	r7, sp, #0
 8003436:	6078      	str	r0, [r7, #4]
 8003438:	6039      	str	r1, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_syscalls.c:52
  // available from the host environment. argv[argc] shall be a null pointer.
  // (static, no const)
  static char* argv[2] =
    { name, NULL };

  *p_argc = 1;
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	2201      	movs	r2, #1
 800343e:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_syscalls.c:53
  *p_argv = &argv[0];
 8003440:	683b      	ldr	r3, [r7, #0]
 8003442:	4a03      	ldr	r2, [pc, #12]	; (8003450 <__initialize_args+0x20>)
 8003444:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/newlib/_syscalls.c:55
  return;
}
 8003446:	370c      	adds	r7, #12
 8003448:	46bd      	mov	sp, r7
 800344a:	bc80      	pop	{r7}
 800344c:	4770      	bx	lr
 800344e:	bf00      	nop
 8003450:	20000004 	.word	0x20000004

08003454 <__initialize_hardware_early>:
__initialize_hardware_early():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/_initialize_hardware.c:36
// priority is Privileged, and the Stack is set to Main.

void
__attribute__((weak))
__initialize_hardware_early(void)
{
 8003454:	b580      	push	{r7, lr}
 8003456:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/_initialize_hardware.c:38
  // Call the CSMSIS system initialisation routine.
  SystemInit();
 8003458:	f7fd f83e 	bl	80004d8 <SystemInit>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/_initialize_hardware.c:43

#if defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)
  // Set VTOR to the actual address, provided by the linker script.
  // Override the manual, possibly wrong, SystemInit() setting.
  SCB->VTOR = (uint32_t)(&__vectors_start);
 800345c:	4b01      	ldr	r3, [pc, #4]	; (8003464 <__initialize_hardware_early+0x10>)
 800345e:	4a02      	ldr	r2, [pc, #8]	; (8003468 <__initialize_hardware_early+0x14>)
 8003460:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/_initialize_hardware.c:68
#endif // (__VFP_FP__) && !(__SOFTFP__)

#if defined(OS_DEBUG_SEMIHOSTING_FAULTS)
  SCB->SHCSR |= SCB_SHCSR_USGFAULTENA_Msk;
#endif
}
 8003462:	bd80      	pop	{r7, pc}
 8003464:	e000ed00 	.word	0xe000ed00
 8003468:	08000000 	.word	0x08000000

0800346c <__initialize_hardware>:
__initialize_hardware():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/_initialize_hardware.c:81
// constructors.

void
__attribute__((weak))
__initialize_hardware(void)
{
 800346c:	b580      	push	{r7, lr}
 800346e:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/_initialize_hardware.c:84
  // Call the CSMSIS system clock routine to store the clock frequency
  // in the SystemCoreClock global RAM location.
  SystemCoreClockUpdate();
 8003470:	f7fd f866 	bl	8000540 <SystemCoreClockUpdate>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/src/cortexm/_initialize_hardware.c:85
}
 8003474:	bd80      	pop	{r7, pc}

08003476 <ST7032I::delayMs(unsigned long)>:
_ZN7ST7032I7delayMsEm():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:79
	inline void delayMs(uint32_t milis){ Hardware::delayMs(milis); }
 8003476:	b580      	push	{r7, lr}
 8003478:	b082      	sub	sp, #8
 800347a:	af00      	add	r7, sp, #0
 800347c:	6078      	str	r0, [r7, #4]
 800347e:	6039      	str	r1, [r7, #0]
 8003480:	6838      	ldr	r0, [r7, #0]
 8003482:	f000 fd0f 	bl	8003ea4 <Hardware::delayMs(unsigned long)>
 8003486:	3708      	adds	r7, #8
 8003488:	46bd      	mov	sp, r7
 800348a:	bd80      	pop	{r7, pc}

0800348c <ST7032I::cursorLeft()>:
cursorLeft():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:106
	}

	bool lcd_ON();
	bool lcd_OFF();

	bool cursorLeft(void){
 800348c:	b580      	push	{r7, lr}
 800348e:	b082      	sub	sp, #8
 8003490:	af00      	add	r7, sp, #0
 8003492:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:107
		sendCommand(LCD_C2L);
 8003494:	2110      	movs	r1, #16
 8003496:	6878      	ldr	r0, [r7, #4]
 8003498:	f7fd fc8d 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:108
		delayMs(5);
 800349c:	2105      	movs	r1, #5
 800349e:	6878      	ldr	r0, [r7, #4]
 80034a0:	f7ff ffe9 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:109
		return true;
 80034a4:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:110
	}
 80034a6:	4618      	mov	r0, r3
 80034a8:	3708      	adds	r7, #8
 80034aa:	46bd      	mov	sp, r7
 80034ac:	bd80      	pop	{r7, pc}

080034ae <ST7032I::cursorSet(CURSOR)>:
cursorSet():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:118
		sendCommand(LCD_C2R);
		delayMs(5);
		return true;
	}

	bool cursorSet(CURSOR cursorType){
 80034ae:	b580      	push	{r7, lr}
 80034b0:	b084      	sub	sp, #16
 80034b2:	af00      	add	r7, sp, #0
 80034b4:	6078      	str	r0, [r7, #4]
 80034b6:	460b      	mov	r3, r1
 80034b8:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:119
		uint8_t cmmd = CURSOR_INVISIBLE;
 80034ba:	230c      	movs	r3, #12
 80034bc:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:120
		switch(cursorType){
 80034be:	78fb      	ldrb	r3, [r7, #3]
 80034c0:	2b01      	cmp	r3, #1
 80034c2:	d004      	beq.n	80034ce <ST7032I::cursorSet(CURSOR)+0x20>
 80034c4:	2b02      	cmp	r3, #2
 80034c6:	d104      	bne.n	80034d2 <ST7032I::cursorSet(CURSOR)+0x24>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:121
		case CURSOR::LINE: cmmd = CURSOR_LINE; break;
 80034c8:	230e      	movs	r3, #14
 80034ca:	73fb      	strb	r3, [r7, #15]
 80034cc:	e001      	b.n	80034d2 <ST7032I::cursorSet(CURSOR)+0x24>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:122
		case CURSOR::BLINK: cmmd = CURSOR_BLINK; break;
 80034ce:	230f      	movs	r3, #15
 80034d0:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:126
		case CURSOR::NONE:
		default: break;
		}
		sendCommand(cmmd);
 80034d2:	7bfb      	ldrb	r3, [r7, #15]
 80034d4:	4619      	mov	r1, r3
 80034d6:	6878      	ldr	r0, [r7, #4]
 80034d8:	f7fd fc6d 	bl	8000db6 <ST7032I::sendCommand(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:127
		delayMs(5);
 80034dc:	2105      	movs	r1, #5
 80034de:	6878      	ldr	r0, [r7, #4]
 80034e0:	f7ff ffc9 	bl	8003476 <ST7032I::delayMs(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:128
		return true;
 80034e4:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/st7032i.h:129
	}
 80034e6:	4618      	mov	r0, r3
 80034e8:	3710      	adds	r7, #16
 80034ea:	46bd      	mov	sp, r7
 80034ec:	bd80      	pop	{r7, pc}

080034ee <TextLcd::cursorLeft()>:
cursorLeft():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:54
	bool cursorLeft(){
 80034ee:	b580      	push	{r7, lr}
 80034f0:	b082      	sub	sp, #8
 80034f2:	af00      	add	r7, sp, #0
 80034f4:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:55
		return driver->cursorLeft();
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	681b      	ldr	r3, [r3, #0]
 80034fa:	4618      	mov	r0, r3
 80034fc:	f7ff ffc6 	bl	800348c <ST7032I::cursorLeft()>
 8003500:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:56
	}
 8003502:	4618      	mov	r0, r3
 8003504:	3708      	adds	r7, #8
 8003506:	46bd      	mov	sp, r7
 8003508:	bd80      	pop	{r7, pc}

0800350a <TextLcd::cursorLeft(unsigned short)>:
_ZN7TextLcd10cursorLeftEt():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:60
	bool cursorLeft(uint16_t chars){
 800350a:	b580      	push	{r7, lr}
 800350c:	b082      	sub	sp, #8
 800350e:	af00      	add	r7, sp, #0
 8003510:	6078      	str	r0, [r7, #4]
 8003512:	460b      	mov	r3, r1
 8003514:	807b      	strh	r3, [r7, #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:61
		while (chars){
 8003516:	887b      	ldrh	r3, [r7, #2]
 8003518:	2b00      	cmp	r3, #0
 800351a:	d00e      	beq.n	800353a <TextLcd::cursorLeft(unsigned short)+0x30>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:62
			if (!cursorLeft()) return false;
 800351c:	6878      	ldr	r0, [r7, #4]
 800351e:	f7ff ffe6 	bl	80034ee <TextLcd::cursorLeft()>
 8003522:	4603      	mov	r3, r0
 8003524:	f083 0301 	eor.w	r3, r3, #1
 8003528:	b2db      	uxtb	r3, r3
 800352a:	2b00      	cmp	r3, #0
 800352c:	d001      	beq.n	8003532 <TextLcd::cursorLeft(unsigned short)+0x28>
 800352e:	2300      	movs	r3, #0
 8003530:	e004      	b.n	800353c <TextLcd::cursorLeft(unsigned short)+0x32>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:63
			chars--;
 8003532:	887b      	ldrh	r3, [r7, #2]
 8003534:	3b01      	subs	r3, #1
 8003536:	807b      	strh	r3, [r7, #2]
 8003538:	e7ed      	b.n	8003516 <TextLcd::cursorLeft(unsigned short)+0xc>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:65
		return true;
 800353a:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:66
	}
 800353c:	4618      	mov	r0, r3
 800353e:	3708      	adds	r7, #8
 8003540:	46bd      	mov	sp, r7
 8003542:	bd80      	pop	{r7, pc}

08003544 <TextLcd::setCursorMode(CURSOR)>:
_ZN7TextLcd13setCursorModeE6CURSOR():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:74
	bool setCursorMode(CURSOR type){
 8003544:	b580      	push	{r7, lr}
 8003546:	b082      	sub	sp, #8
 8003548:	af00      	add	r7, sp, #0
 800354a:	6078      	str	r0, [r7, #4]
 800354c:	460b      	mov	r3, r1
 800354e:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:75
		return driver->cursorSet(type);		// ToDo zmienic na prawdziwe BLINK
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	78fa      	ldrb	r2, [r7, #3]
 8003556:	4611      	mov	r1, r2
 8003558:	4618      	mov	r0, r3
 800355a:	f7ff ffa8 	bl	80034ae <ST7032I::cursorSet(CURSOR)>
 800355e:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:76
	}
 8003560:	4618      	mov	r0, r3
 8003562:	3708      	adds	r7, #8
 8003564:	46bd      	mov	sp, r7
 8003566:	bd80      	pop	{r7, pc}

08003568 <HMI::HMI()>:
__base_ctor ():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:45
	HMI(){;}
 8003568:	b480      	push	{r7}
 800356a:	b083      	sub	sp, #12
 800356c:	af00      	add	r7, sp, #0
 800356e:	6078      	str	r0, [r7, #4]
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	2201      	movs	r2, #1
 8003574:	701a      	strb	r2, [r3, #0]
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	4618      	mov	r0, r3
 800357a:	370c      	adds	r7, #12
 800357c:	46bd      	mov	sp, r7
 800357e:	bc80      	pop	{r7}
 8003580:	4770      	bx	lr

08003582 <HMI::monitor()>:
monitor():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:63



	void monitor(){
 8003582:	b580      	push	{r7, lr}
 8003584:	b082      	sub	sp, #8
 8003586:	af00      	add	r7, sp, #0
 8003588:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:64
		Hardware::i2cTimerJob();
 800358a:	f000 fe2f 	bl	80041ec <Hardware::i2cTimerJob()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:65
		menu->poll();
 800358e:	687b      	ldr	r3, [r7, #4]
 8003590:	695b      	ldr	r3, [r3, #20]
 8003592:	4618      	mov	r0, r3
 8003594:	f7fe fedc 	bl	8002350 <Menu::poll()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.h:66
	}
 8003598:	3708      	adds	r7, #8
 800359a:	46bd      	mov	sp, r7
 800359c:	bd80      	pop	{r7, pc}
	...

080035a0 <hmi_callback()>:
hmi_callback():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.cpp:15

HMI hmi = HMI();


/** Wywolanie metody monitor() */
void static inline hmi_callback(){  hmi.monitor(); }
 80035a0:	b580      	push	{r7, lr}
 80035a2:	af00      	add	r7, sp, #0
 80035a4:	4801      	ldr	r0, [pc, #4]	; (80035ac <hmi_callback()+0xc>)
 80035a6:	f7ff ffec 	bl	8003582 <HMI::monitor()>
 80035aa:	bd80      	pop	{r7, pc}
 80035ac:	20000204 	.word	0x20000204

080035b0 <HMI::getInstance()>:
_ZN3HMI11getInstanceEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.cpp:23

// periodycznie wykonywana funkcja monitor() opakowana w aku_callback()
QuickTask hmiQtsk(QuickTask::QT_PERIODIC, hmi_callback, HMI::TIME_PERIOD_MONITOR_MS);


HMI * HMI::getInstance(){ return &hmi; }
 80035b0:	b480      	push	{r7}
 80035b2:	af00      	add	r7, sp, #0
 80035b4:	4b02      	ldr	r3, [pc, #8]	; (80035c0 <HMI::getInstance()+0x10>)
 80035b6:	4618      	mov	r0, r3
 80035b8:	46bd      	mov	sp, r7
 80035ba:	bc80      	pop	{r7}
 80035bc:	4770      	bx	lr
 80035be:	bf00      	nop
 80035c0:	20000204 	.word	0x20000204

080035c4 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.8]>:
__static_initialization_and_destruction_0():
 80035c4:	b580      	push	{r7, lr}
 80035c6:	b082      	sub	sp, #8
 80035c8:	af00      	add	r7, sp, #0
 80035ca:	6078      	str	r0, [r7, #4]
 80035cc:	6039      	str	r1, [r7, #0]
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	2b01      	cmp	r3, #1
 80035d2:	d10d      	bne.n	80035f0 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.8]+0x2c>
 80035d4:	683b      	ldr	r3, [r7, #0]
 80035d6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80035da:	4293      	cmp	r3, r2
 80035dc:	d108      	bne.n	80035f0 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.8]+0x2c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.cpp:11
HMI hmi = HMI();
 80035de:	4806      	ldr	r0, [pc, #24]	; (80035f8 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.8]+0x34>)
 80035e0:	f7ff ffc2 	bl	8003568 <HMI::HMI()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.cpp:20
QuickTask hmiQtsk(QuickTask::QT_PERIODIC, hmi_callback, HMI::TIME_PERIOD_MONITOR_MS);
 80035e4:	2305      	movs	r3, #5
 80035e6:	4a05      	ldr	r2, [pc, #20]	; (80035fc <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.8]+0x38>)
 80035e8:	2102      	movs	r1, #2
 80035ea:	4805      	ldr	r0, [pc, #20]	; (8003600 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.8]+0x3c>)
 80035ec:	f7fe f842 	bl	8001674 <QuickTask::QuickTask(QuickTask::QTType, void (*)(), unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/HMI.cpp:23
HMI * HMI::getInstance(){ return &hmi; }
 80035f0:	3708      	adds	r7, #8
 80035f2:	46bd      	mov	sp, r7
 80035f4:	bd80      	pop	{r7, pc}
 80035f6:	bf00      	nop
 80035f8:	20000204 	.word	0x20000204
 80035fc:	080035a1 	.word	0x080035a1
 8003600:	2000021c 	.word	0x2000021c

08003604 <_GLOBAL__sub_I_hmi>:
_GLOBAL__sub_I_hmi():
 8003604:	b580      	push	{r7, lr}
 8003606:	af00      	add	r7, sp, #0
 8003608:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800360c:	2001      	movs	r0, #1
 800360e:	f7ff ffd9 	bl	80035c4 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.8]>
 8003612:	bd80      	pop	{r7, pc}

08003614 <NVIC_SetPriorityGrouping>:
NVIC_SetPriorityGrouping():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1605
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003614:	b480      	push	{r7}
 8003616:	b085      	sub	sp, #20
 8003618:	af00      	add	r7, sp, #0
 800361a:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1607
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	f003 0307 	and.w	r3, r3, #7
 8003622:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1609

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003624:	4b0b      	ldr	r3, [pc, #44]	; (8003654 <NVIC_SetPriorityGrouping+0x40>)
 8003626:	68db      	ldr	r3, [r3, #12]
 8003628:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1610
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800362a:	68ba      	ldr	r2, [r7, #8]
 800362c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003630:	4013      	ands	r3, r2
 8003632:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1613
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8U)                      );              /* Insert write key and priorty group */
 8003634:	68fb      	ldr	r3, [r7, #12]
 8003636:	021a      	lsls	r2, r3, #8
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1612
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003638:	68bb      	ldr	r3, [r7, #8]
 800363a:	4313      	orrs	r3, r2
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1611
  reg_value  =  (reg_value                                   |
 800363c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003640:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8003644:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1614
  SCB->AIRCR =  reg_value;
 8003646:	4a03      	ldr	r2, [pc, #12]	; (8003654 <NVIC_SetPriorityGrouping+0x40>)
 8003648:	68bb      	ldr	r3, [r7, #8]
 800364a:	60d3      	str	r3, [r2, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1615
}
 800364c:	3714      	adds	r7, #20
 800364e:	46bd      	mov	sp, r7
 8003650:	bc80      	pop	{r7}
 8003652:	4770      	bx	lr
 8003654:	e000ed00 	.word	0xe000ed00

08003658 <NVIC_EnableIRQ>:
NVIC_EnableIRQ():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1635
  \brief   Enable External Interrupt
  \details Enables a device-specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003658:	b480      	push	{r7}
 800365a:	b083      	sub	sp, #12
 800365c:	af00      	add	r7, sp, #0
 800365e:	4603      	mov	r3, r0
 8003660:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1636
  NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 8003662:	4908      	ldr	r1, [pc, #32]	; (8003684 <NVIC_EnableIRQ+0x2c>)
 8003664:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003668:	095b      	lsrs	r3, r3, #5
 800366a:	f997 2007 	ldrsb.w	r2, [r7, #7]
 800366e:	f002 021f 	and.w	r2, r2, #31
 8003672:	2001      	movs	r0, #1
 8003674:	fa00 f202 	lsl.w	r2, r0, r2
 8003678:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1637
}
 800367c:	370c      	adds	r7, #12
 800367e:	46bd      	mov	sp, r7
 8003680:	bc80      	pop	{r7}
 8003682:	4770      	bx	lr
 8003684:	e000e100 	.word	0xe000e100

08003688 <NVIC_SetPriority>:
NVIC_SetPriority():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1707
  \note    The priority cannot be set for every core interrupt.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003688:	b480      	push	{r7}
 800368a:	b083      	sub	sp, #12
 800368c:	af00      	add	r7, sp, #0
 800368e:	4603      	mov	r3, r0
 8003690:	6039      	str	r1, [r7, #0]
 8003692:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1708
  if ((int32_t)(IRQn) < 0)
 8003694:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003698:	2b00      	cmp	r3, #0
 800369a:	da0c      	bge.n	80036b6 <NVIC_SetPriority+0x2e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1710
  {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800369c:	490e      	ldr	r1, [pc, #56]	; (80036d8 <NVIC_SetPriority+0x50>)
 800369e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80036a2:	f003 030f 	and.w	r3, r3, #15
 80036a6:	3b04      	subs	r3, #4
 80036a8:	683a      	ldr	r2, [r7, #0]
 80036aa:	b2d2      	uxtb	r2, r2
 80036ac:	0112      	lsls	r2, r2, #4
 80036ae:	b2d2      	uxtb	r2, r2
 80036b0:	440b      	add	r3, r1
 80036b2:	761a      	strb	r2, [r3, #24]
 80036b4:	e00b      	b.n	80036ce <NVIC_SetPriority+0x46>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1714
  }
  else
  {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80036b6:	4a09      	ldr	r2, [pc, #36]	; (80036dc <NVIC_SetPriority+0x54>)
 80036b8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80036bc:	4618      	mov	r0, r3
 80036be:	683b      	ldr	r3, [r7, #0]
 80036c0:	b2db      	uxtb	r3, r3
 80036c2:	011b      	lsls	r3, r3, #4
 80036c4:	b2d9      	uxtb	r1, r3
 80036c6:	1813      	adds	r3, r2, r0
 80036c8:	460a      	mov	r2, r1
 80036ca:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1716
  }
}
 80036ce:	370c      	adds	r7, #12
 80036d0:	46bd      	mov	sp, r7
 80036d2:	bc80      	pop	{r7}
 80036d4:	4770      	bx	lr
 80036d6:	bf00      	nop
 80036d8:	e000ed00 	.word	0xe000ed00
 80036dc:	e000e100 	.word	0xe000e100

080036e0 <NVIC_EncodePriority>:
NVIC_EncodePriority():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1754
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80036e0:	b480      	push	{r7}
 80036e2:	b089      	sub	sp, #36	; 0x24
 80036e4:	af00      	add	r7, sp, #0
 80036e6:	60f8      	str	r0, [r7, #12]
 80036e8:	60b9      	str	r1, [r7, #8]
 80036ea:	607a      	str	r2, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1755
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80036ec:	68fb      	ldr	r3, [r7, #12]
 80036ee:	f003 0307 	and.w	r3, r3, #7
 80036f2:	61fb      	str	r3, [r7, #28]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1759
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80036f4:	69fb      	ldr	r3, [r7, #28]
 80036f6:	f1c3 0307 	rsb	r3, r3, #7
 80036fa:	2b04      	cmp	r3, #4
 80036fc:	bf28      	it	cs
 80036fe:	2304      	movcs	r3, #4
 8003700:	61bb      	str	r3, [r7, #24]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1760
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003702:	69fb      	ldr	r3, [r7, #28]
 8003704:	3304      	adds	r3, #4
 8003706:	2b06      	cmp	r3, #6
 8003708:	d902      	bls.n	8003710 <NVIC_EncodePriority+0x30>
 800370a:	69fb      	ldr	r3, [r7, #28]
 800370c:	3b03      	subs	r3, #3
 800370e:	e000      	b.n	8003712 <NVIC_EncodePriority+0x32>
 8003710:	2300      	movs	r3, #0
 8003712:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1763

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003714:	69bb      	ldr	r3, [r7, #24]
 8003716:	2201      	movs	r2, #1
 8003718:	fa02 f303 	lsl.w	r3, r2, r3
 800371c:	1e5a      	subs	r2, r3, #1
 800371e:	68bb      	ldr	r3, [r7, #8]
 8003720:	401a      	ands	r2, r3
 8003722:	697b      	ldr	r3, [r7, #20]
 8003724:	409a      	lsls	r2, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1764
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003726:	697b      	ldr	r3, [r7, #20]
 8003728:	2101      	movs	r1, #1
 800372a:	fa01 f303 	lsl.w	r3, r1, r3
 800372e:	1e59      	subs	r1, r3, #1
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	400b      	ands	r3, r1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1765
         );
 8003734:	4313      	orrs	r3, r2
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1766
}
 8003736:	4618      	mov	r0, r3
 8003738:	3724      	adds	r7, #36	; 0x24
 800373a:	46bd      	mov	sp, r7
 800373c:	bc80      	pop	{r7}
 800373e:	4770      	bx	lr

08003740 <SysTick_Config>:
SysTick_Config():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1839
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003740:	b580      	push	{r7, lr}
 8003742:	b082      	sub	sp, #8
 8003744:	af00      	add	r7, sp, #0
 8003746:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1840
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003748:	687b      	ldr	r3, [r7, #4]
 800374a:	3b01      	subs	r3, #1
 800374c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003750:	d301      	bcc.n	8003756 <SysTick_Config+0x16>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1842
  {
    return (1UL);                                                   /* Reload value impossible */
 8003752:	2301      	movs	r3, #1
 8003754:	e00f      	b.n	8003776 <SysTick_Config+0x36>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1845
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003756:	4a0a      	ldr	r2, [pc, #40]	; (8003780 <SysTick_Config+0x40>)
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	3b01      	subs	r3, #1
 800375c:	6053      	str	r3, [r2, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1846
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800375e:	210f      	movs	r1, #15
 8003760:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003764:	f7ff ff90 	bl	8003688 <NVIC_SetPriority>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1847
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003768:	4b05      	ldr	r3, [pc, #20]	; (8003780 <SysTick_Config+0x40>)
 800376a:	2200      	movs	r2, #0
 800376c:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1848
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800376e:	4b04      	ldr	r3, [pc, #16]	; (8003780 <SysTick_Config+0x40>)
 8003770:	2207      	movs	r2, #7
 8003772:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1851
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003774:	2300      	movs	r3, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../system/include/cmsis/core_cm4.h:1852
}
 8003776:	4618      	mov	r0, r3
 8003778:	3708      	adds	r7, #8
 800377a:	46bd      	mov	sp, r7
 800377c:	bd80      	pop	{r7, pc}
 800377e:	bf00      	nop
 8003780:	e000e010 	.word	0xe000e010

08003784 <Fifo::isEmpty()>:
isEmpty():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.h:89
	uint32_t countFree(){return bufSize - 1 - get_count();}

	// -----------------------------------------------------------------
	/**	Zwraca !=0 jesli bufor jest pusty
	 */
	bool isEmpty(){ return (in == out); }
 8003784:	b480      	push	{r7}
 8003786:	b083      	sub	sp, #12
 8003788:	af00      	add	r7, sp, #0
 800378a:	6078      	str	r0, [r7, #4]
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	685a      	ldr	r2, [r3, #4]
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	689b      	ldr	r3, [r3, #8]
 8003794:	429a      	cmp	r2, r3
 8003796:	bf0c      	ite	eq
 8003798:	2301      	moveq	r3, #1
 800379a:	2300      	movne	r3, #0
 800379c:	b2db      	uxtb	r3, r3
 800379e:	4618      	mov	r0, r3
 80037a0:	370c      	adds	r7, #12
 80037a2:	46bd      	mov	sp, r7
 80037a4:	bc80      	pop	{r7}
 80037a6:	4770      	bx	lr

080037a8 <Fifo::isNotEmpty()>:
_ZN4Fifo10isNotEmptyEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.h:91

	bool isNotEmpty(){return !isEmpty();}
 80037a8:	b580      	push	{r7, lr}
 80037aa:	b082      	sub	sp, #8
 80037ac:	af00      	add	r7, sp, #0
 80037ae:	6078      	str	r0, [r7, #4]
 80037b0:	6878      	ldr	r0, [r7, #4]
 80037b2:	f7ff ffe7 	bl	8003784 <Fifo::isEmpty()>
 80037b6:	4603      	mov	r3, r0
 80037b8:	f083 0301 	eor.w	r3, r3, #1
 80037bc:	b2db      	uxtb	r3, r3
 80037be:	4618      	mov	r0, r3
 80037c0:	3708      	adds	r7, #8
 80037c2:	46bd      	mov	sp, r7
 80037c4:	bd80      	pop	{r7, pc}

080037c6 <Fifo::flush()>:
flush():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../lbutils/Fifo.h:97

	bool isFull();
	// -----------------------------------------------------------------
	/**	Zeruje bufor - ustawia pusty.
	 */
	void flush(){out = in = 0;}
 80037c6:	b480      	push	{r7}
 80037c8:	b083      	sub	sp, #12
 80037ca:	af00      	add	r7, sp, #0
 80037cc:	6078      	str	r0, [r7, #4]
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	2200      	movs	r2, #0
 80037d2:	605a      	str	r2, [r3, #4]
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	2200      	movs	r2, #0
 80037d8:	609a      	str	r2, [r3, #8]
 80037da:	370c      	adds	r7, #12
 80037dc:	46bd      	mov	sp, r7
 80037de:	bc80      	pop	{r7}
 80037e0:	4770      	bx	lr

080037e2 <Hardware::errorDispatch(Hardware::ErrorCode)>:
errorDispatch():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.h:72
	static void i2cEvent();
	static void i2cError();

	static void i2cTimerJob();

	static void errorDispatch(ErrorCode errCode){
 80037e2:	b480      	push	{r7}
 80037e4:	b083      	sub	sp, #12
 80037e6:	af00      	add	r7, sp, #0
 80037e8:	4603      	mov	r3, r0
 80037ea:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.h:73
		switch(errCode){
 80037ec:	79fb      	ldrb	r3, [r7, #7]
 80037ee:	2b01      	cmp	r3, #1
 80037f0:	d002      	beq.n	80037f8 <Hardware::errorDispatch(Hardware::ErrorCode)+0x16>
 80037f2:	2b02      	cmp	r3, #2
 80037f4:	d100      	bne.n	80037f8 <Hardware::errorDispatch(Hardware::ErrorCode)+0x16>
 80037f6:	e7fe      	b.n	80037f6 <Hardware::errorDispatch(Hardware::ErrorCode)+0x14>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.h:81
			break;
		case Incident:
			// Todo zasygnalizowanie
			break;
		}
	}
 80037f8:	370c      	adds	r7, #12
 80037fa:	46bd      	mov	sp, r7
 80037fc:	bc80      	pop	{r7}
 80037fe:	4770      	bx	lr

08003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>:
_ZN4GpioC2EP12GPIO_TypeDeft.lto_priv.5():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:83
	Gpio(GPIO_TypeDef * gpioDef, uint16_t pin_Nr){
 8003800:	b480      	push	{r7}
 8003802:	b085      	sub	sp, #20
 8003804:	af00      	add	r7, sp, #0
 8003806:	60f8      	str	r0, [r7, #12]
 8003808:	60b9      	str	r1, [r7, #8]
 800380a:	4613      	mov	r3, r2
 800380c:	80fb      	strh	r3, [r7, #6]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:84
		gpio = gpioDef;
 800380e:	68fb      	ldr	r3, [r7, #12]
 8003810:	68ba      	ldr	r2, [r7, #8]
 8003812:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:85
		pinNr = pin_Nr;
 8003814:	68fb      	ldr	r3, [r7, #12]
 8003816:	88fa      	ldrh	r2, [r7, #6]
 8003818:	809a      	strh	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:86
		Mode = GpioMode::ANALOG;		//GPIO_MODE_ANALOG;
 800381a:	68fb      	ldr	r3, [r7, #12]
 800381c:	2203      	movs	r2, #3
 800381e:	719a      	strb	r2, [r3, #6]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:87
		Pull = GpioPuPd::NoPull;		//GPIO_NOPULL;
 8003820:	68fb      	ldr	r3, [r7, #12]
 8003822:	2200      	movs	r2, #0
 8003824:	71da      	strb	r2, [r3, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:88
		Speed = GpioSpeed::MediumSpeed;		//GPIO_SPEED_FREQ_MEDIUM;
 8003826:	68fb      	ldr	r3, [r7, #12]
 8003828:	2201      	movs	r2, #1
 800382a:	721a      	strb	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:89
	}
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	4618      	mov	r0, r3
 8003830:	3714      	adds	r7, #20
 8003832:	46bd      	mov	sp, r7
 8003834:	bc80      	pop	{r7}
 8003836:	4770      	bx	lr

08003838 <Gpio::pinSetUp()>:
_ZN4Gpio8pinSetUpEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:101
	inline void pinSetUp(){
 8003838:	b480      	push	{r7}
 800383a:	b083      	sub	sp, #12
 800383c:	af00      	add	r7, sp, #0
 800383e:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:102
		gpio->BSRR = (1<<pinNr);
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	687a      	ldr	r2, [r7, #4]
 8003846:	8892      	ldrh	r2, [r2, #4]
 8003848:	4611      	mov	r1, r2
 800384a:	2201      	movs	r2, #1
 800384c:	408a      	lsls	r2, r1
 800384e:	619a      	str	r2, [r3, #24]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:103
	}
 8003850:	370c      	adds	r7, #12
 8003852:	46bd      	mov	sp, r7
 8003854:	bc80      	pop	{r7}
 8003856:	4770      	bx	lr

08003858 <Gpio::pinSetDown()>:
_ZN4Gpio10pinSetDownEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:104
	inline void pinSetDown(){
 8003858:	b480      	push	{r7}
 800385a:	b083      	sub	sp, #12
 800385c:	af00      	add	r7, sp, #0
 800385e:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:105
		gpio->BSRR = (1<<(pinNr+16));
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	687a      	ldr	r2, [r7, #4]
 8003866:	8892      	ldrh	r2, [r2, #4]
 8003868:	3210      	adds	r2, #16
 800386a:	2101      	movs	r1, #1
 800386c:	fa01 f202 	lsl.w	r2, r1, r2
 8003870:	619a      	str	r2, [r3, #24]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:106
	}
 8003872:	370c      	adds	r7, #12
 8003874:	46bd      	mov	sp, r7
 8003876:	bc80      	pop	{r7}
 8003878:	4770      	bx	lr

0800387a <Gpio::pinSet(bool)>:
pinSet():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:108
	inline void pinSet(bool newstate){ newstate? pinSetUp() : pinSetDown(); }
 800387a:	b580      	push	{r7, lr}
 800387c:	b082      	sub	sp, #8
 800387e:	af00      	add	r7, sp, #0
 8003880:	6078      	str	r0, [r7, #4]
 8003882:	460b      	mov	r3, r1
 8003884:	70fb      	strb	r3, [r7, #3]
 8003886:	78fb      	ldrb	r3, [r7, #3]
 8003888:	2b00      	cmp	r3, #0
 800388a:	d003      	beq.n	8003894 <Gpio::pinSet(bool)+0x1a>
 800388c:	6878      	ldr	r0, [r7, #4]
 800388e:	f7ff ffd3 	bl	8003838 <Gpio::pinSetUp()>
 8003892:	e002      	b.n	800389a <Gpio::pinSet(bool)+0x20>
 8003894:	6878      	ldr	r0, [r7, #4]
 8003896:	f7ff ffdf 	bl	8003858 <Gpio::pinSetDown()>
 800389a:	3708      	adds	r7, #8
 800389c:	46bd      	mov	sp, r7
 800389e:	bd80      	pop	{r7, pc}

080038a0 <Gpio::setMODE(Gpio::GpioMode)>:
setMODE():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:122


	inline void setMODE(const GpioMode mode){
 80038a0:	b480      	push	{r7}
 80038a2:	b083      	sub	sp, #12
 80038a4:	af00      	add	r7, sp, #0
 80038a6:	6078      	str	r0, [r7, #4]
 80038a8:	460b      	mov	r3, r1
 80038aa:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:123
		gpio->MODER  &= ~(GPIO_MODER_MODER0 << (pinNr * 2));
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	687a      	ldr	r2, [r7, #4]
 80038b2:	6812      	ldr	r2, [r2, #0]
 80038b4:	6811      	ldr	r1, [r2, #0]
 80038b6:	687a      	ldr	r2, [r7, #4]
 80038b8:	8892      	ldrh	r2, [r2, #4]
 80038ba:	0052      	lsls	r2, r2, #1
 80038bc:	2003      	movs	r0, #3
 80038be:	fa00 f202 	lsl.w	r2, r0, r2
 80038c2:	43d2      	mvns	r2, r2
 80038c4:	400a      	ands	r2, r1
 80038c6:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:124
		gpio->MODER |= ((uint32_t)mode << (pinNr * 2));
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	681b      	ldr	r3, [r3, #0]
 80038cc:	687a      	ldr	r2, [r7, #4]
 80038ce:	6812      	ldr	r2, [r2, #0]
 80038d0:	6811      	ldr	r1, [r2, #0]
 80038d2:	78f8      	ldrb	r0, [r7, #3]
 80038d4:	687a      	ldr	r2, [r7, #4]
 80038d6:	8892      	ldrh	r2, [r2, #4]
 80038d8:	0052      	lsls	r2, r2, #1
 80038da:	fa00 f202 	lsl.w	r2, r0, r2
 80038de:	430a      	orrs	r2, r1
 80038e0:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:125
	}
 80038e2:	370c      	adds	r7, #12
 80038e4:	46bd      	mov	sp, r7
 80038e6:	bc80      	pop	{r7}
 80038e8:	4770      	bx	lr

080038ea <Gpio::setSpeed(Gpio::GpioSpeed)>:
setSpeed():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:127

	inline void setSpeed(const GpioSpeed speed){
 80038ea:	b480      	push	{r7}
 80038ec:	b083      	sub	sp, #12
 80038ee:	af00      	add	r7, sp, #0
 80038f0:	6078      	str	r0, [r7, #4]
 80038f2:	460b      	mov	r3, r1
 80038f4:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:128
		gpio->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinNr * 2));
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	687a      	ldr	r2, [r7, #4]
 80038fc:	6812      	ldr	r2, [r2, #0]
 80038fe:	6891      	ldr	r1, [r2, #8]
 8003900:	687a      	ldr	r2, [r7, #4]
 8003902:	8892      	ldrh	r2, [r2, #4]
 8003904:	0052      	lsls	r2, r2, #1
 8003906:	2003      	movs	r0, #3
 8003908:	fa00 f202 	lsl.w	r2, r0, r2
 800390c:	43d2      	mvns	r2, r2
 800390e:	400a      	ands	r2, r1
 8003910:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:129
		gpio->OSPEEDR |= ((uint32_t)(speed) << (pinNr * 2));
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	687a      	ldr	r2, [r7, #4]
 8003918:	6812      	ldr	r2, [r2, #0]
 800391a:	6891      	ldr	r1, [r2, #8]
 800391c:	78fa      	ldrb	r2, [r7, #3]
 800391e:	4610      	mov	r0, r2
 8003920:	687a      	ldr	r2, [r7, #4]
 8003922:	8892      	ldrh	r2, [r2, #4]
 8003924:	0052      	lsls	r2, r2, #1
 8003926:	fa00 f202 	lsl.w	r2, r0, r2
 800392a:	430a      	orrs	r2, r1
 800392c:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:130
	}
 800392e:	370c      	adds	r7, #12
 8003930:	46bd      	mov	sp, r7
 8003932:	bc80      	pop	{r7}
 8003934:	4770      	bx	lr

08003936 <Gpio::setPullUpDn(Gpio::GpioPuPd)>:
setPullUpDn():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:132

	inline void setPullUpDn(const GpioPuPd pupd){
 8003936:	b480      	push	{r7}
 8003938:	b083      	sub	sp, #12
 800393a:	af00      	add	r7, sp, #0
 800393c:	6078      	str	r0, [r7, #4]
 800393e:	460b      	mov	r3, r1
 8003940:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:133
		gpio->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinNr * 2));
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	687a      	ldr	r2, [r7, #4]
 8003948:	6812      	ldr	r2, [r2, #0]
 800394a:	68d1      	ldr	r1, [r2, #12]
 800394c:	687a      	ldr	r2, [r7, #4]
 800394e:	8892      	ldrh	r2, [r2, #4]
 8003950:	0052      	lsls	r2, r2, #1
 8003952:	2003      	movs	r0, #3
 8003954:	fa00 f202 	lsl.w	r2, r0, r2
 8003958:	43d2      	mvns	r2, r2
 800395a:	400a      	ands	r2, r1
 800395c:	60da      	str	r2, [r3, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:134
		gpio->PUPDR |= (((uint32_t)pupd) << (pinNr * 2));
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	681b      	ldr	r3, [r3, #0]
 8003962:	687a      	ldr	r2, [r7, #4]
 8003964:	6812      	ldr	r2, [r2, #0]
 8003966:	68d1      	ldr	r1, [r2, #12]
 8003968:	78f8      	ldrb	r0, [r7, #3]
 800396a:	687a      	ldr	r2, [r7, #4]
 800396c:	8892      	ldrh	r2, [r2, #4]
 800396e:	0052      	lsls	r2, r2, #1
 8003970:	fa00 f202 	lsl.w	r2, r0, r2
 8003974:	430a      	orrs	r2, r1
 8003976:	60da      	str	r2, [r3, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:135
	}
 8003978:	370c      	adds	r7, #12
 800397a:	46bd      	mov	sp, r7
 800397c:	bc80      	pop	{r7}
 800397e:	4770      	bx	lr

08003980 <Gpio::setOType(Gpio::GpioOType)>:
setOType():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:141

	//SetSpeed i setOType tylko dla trybu GPIO_Mode_OUT i GPIO_Mode_AF


	/* Output mode configuration */
	inline void setOType(const GpioOType otype){
 8003980:	b480      	push	{r7}
 8003982:	b083      	sub	sp, #12
 8003984:	af00      	add	r7, sp, #0
 8003986:	6078      	str	r0, [r7, #4]
 8003988:	460b      	mov	r3, r1
 800398a:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:142
		gpio->OTYPER &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinNr));
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	681b      	ldr	r3, [r3, #0]
 8003990:	687a      	ldr	r2, [r7, #4]
 8003992:	6812      	ldr	r2, [r2, #0]
 8003994:	6851      	ldr	r1, [r2, #4]
 8003996:	687a      	ldr	r2, [r7, #4]
 8003998:	8892      	ldrh	r2, [r2, #4]
 800399a:	4610      	mov	r0, r2
 800399c:	2201      	movs	r2, #1
 800399e:	4082      	lsls	r2, r0
 80039a0:	43d2      	mvns	r2, r2
 80039a2:	400a      	ands	r2, r1
 80039a4:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:143
		gpio->OTYPER |= (uint16_t)(((uint16_t)otype) << ((uint16_t)pinNr));
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	687a      	ldr	r2, [r7, #4]
 80039ac:	6812      	ldr	r2, [r2, #0]
 80039ae:	6852      	ldr	r2, [r2, #4]
 80039b0:	78f9      	ldrb	r1, [r7, #3]
 80039b2:	6878      	ldr	r0, [r7, #4]
 80039b4:	8880      	ldrh	r0, [r0, #4]
 80039b6:	4081      	lsls	r1, r0
 80039b8:	b289      	uxth	r1, r1
 80039ba:	430a      	orrs	r2, r1
 80039bc:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:144
	}
 80039be:	370c      	adds	r7, #12
 80039c0:	46bd      	mov	sp, r7
 80039c2:	bc80      	pop	{r7}
 80039c4:	4770      	bx	lr

080039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>:
_ZN4Gpio5setupENS_8GpioModeENS_9GpioOTypeENS_8GpioPuPdENS_9GpioSpeedE():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:147


	void setup(GpioMode mode, GpioOType oType, GpioPuPd pupd, GpioSpeed speed){
 80039c6:	b580      	push	{r7, lr}
 80039c8:	b082      	sub	sp, #8
 80039ca:	af00      	add	r7, sp, #0
 80039cc:	6078      	str	r0, [r7, #4]
 80039ce:	4608      	mov	r0, r1
 80039d0:	4611      	mov	r1, r2
 80039d2:	461a      	mov	r2, r3
 80039d4:	4603      	mov	r3, r0
 80039d6:	70fb      	strb	r3, [r7, #3]
 80039d8:	460b      	mov	r3, r1
 80039da:	70bb      	strb	r3, [r7, #2]
 80039dc:	4613      	mov	r3, r2
 80039de:	707b      	strb	r3, [r7, #1]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:148
		setMODE(mode);
 80039e0:	78fb      	ldrb	r3, [r7, #3]
 80039e2:	4619      	mov	r1, r3
 80039e4:	6878      	ldr	r0, [r7, #4]
 80039e6:	f7ff ff5b 	bl	80038a0 <Gpio::setMODE(Gpio::GpioMode)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:149
		setOType(oType);
 80039ea:	78bb      	ldrb	r3, [r7, #2]
 80039ec:	4619      	mov	r1, r3
 80039ee:	6878      	ldr	r0, [r7, #4]
 80039f0:	f7ff ffc6 	bl	8003980 <Gpio::setOType(Gpio::GpioOType)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:150
		setPullUpDn(pupd);
 80039f4:	787b      	ldrb	r3, [r7, #1]
 80039f6:	4619      	mov	r1, r3
 80039f8:	6878      	ldr	r0, [r7, #4]
 80039fa:	f7ff ff9c 	bl	8003936 <Gpio::setPullUpDn(Gpio::GpioPuPd)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:151
		setSpeed(speed);
 80039fe:	7c3b      	ldrb	r3, [r7, #16]
 8003a00:	4619      	mov	r1, r3
 8003a02:	6878      	ldr	r0, [r7, #4]
 8003a04:	f7ff ff71 	bl	80038ea <Gpio::setSpeed(Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:152
	}
 8003a08:	3708      	adds	r7, #8
 8003a0a:	46bd      	mov	sp, r7
 8003a0c:	bd80      	pop	{r7, pc}

08003a0e <Gpio::setAlternateFunc(unsigned char)>:
setAlternateFunc():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:155


	bool setAlternateFunc(uint8_t alternateFunction){
 8003a0e:	b480      	push	{r7}
 8003a10:	b089      	sub	sp, #36	; 0x24
 8003a12:	af00      	add	r7, sp, #0
 8003a14:	6078      	str	r0, [r7, #4]
 8003a16:	460b      	mov	r3, r1
 8003a18:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:156
		if (alternateFunction > 7) return false;
 8003a1a:	78fb      	ldrb	r3, [r7, #3]
 8003a1c:	2b07      	cmp	r3, #7
 8003a1e:	dd01      	ble.n	8003a24 <Gpio::setAlternateFunc(unsigned char)+0x16>
 8003a20:	2300      	movs	r3, #0
 8003a22:	e049      	b.n	8003ab8 <Gpio::setAlternateFunc(unsigned char)+0xaa>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:157
		constexpr uint32_t BitMask = 0b01111;
 8003a24:	230f      	movs	r3, #15
 8003a26:	61fb      	str	r3, [r7, #28]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:158
		uint32_t val = alternateFunction;
 8003a28:	78fb      	ldrb	r3, [r7, #3]
 8003a2a:	61bb      	str	r3, [r7, #24]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:159
		if (pinNr < 8){
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	889b      	ldrh	r3, [r3, #4]
 8003a30:	2b07      	cmp	r3, #7
 8003a32:	dc1b      	bgt.n	8003a6c <Gpio::setAlternateFunc(unsigned char)+0x5e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:160
			uint8_t offset = pinNr * 4;
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	889b      	ldrh	r3, [r3, #4]
 8003a38:	b2db      	uxtb	r3, r3
 8003a3a:	009b      	lsls	r3, r3, #2
 8003a3c:	75fb      	strb	r3, [r7, #23]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:161
			uint32_t tmp = gpio->AFR[0];
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	681b      	ldr	r3, [r3, #0]
 8003a42:	6a1b      	ldr	r3, [r3, #32]
 8003a44:	613b      	str	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:162
			tmp &= ~(BitMask << offset);
 8003a46:	7dfb      	ldrb	r3, [r7, #23]
 8003a48:	220f      	movs	r2, #15
 8003a4a:	fa02 f303 	lsl.w	r3, r2, r3
 8003a4e:	43db      	mvns	r3, r3
 8003a50:	693a      	ldr	r2, [r7, #16]
 8003a52:	4013      	ands	r3, r2
 8003a54:	613b      	str	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:163
			tmp |= val << offset;
 8003a56:	7dfb      	ldrb	r3, [r7, #23]
 8003a58:	69ba      	ldr	r2, [r7, #24]
 8003a5a:	fa02 f303 	lsl.w	r3, r2, r3
 8003a5e:	693a      	ldr	r2, [r7, #16]
 8003a60:	4313      	orrs	r3, r2
 8003a62:	613b      	str	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:164
			gpio->AFR[0] = tmp;
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	681b      	ldr	r3, [r3, #0]
 8003a68:	693a      	ldr	r2, [r7, #16]
 8003a6a:	621a      	str	r2, [r3, #32]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:166
		}
		if ((pinNr > 8)&&(pinNr < 16)){
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	889b      	ldrh	r3, [r3, #4]
 8003a70:	2b08      	cmp	r3, #8
 8003a72:	dd20      	ble.n	8003ab6 <Gpio::setAlternateFunc(unsigned char)+0xa8>
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	889b      	ldrh	r3, [r3, #4]
 8003a78:	2b0f      	cmp	r3, #15
 8003a7a:	dc1c      	bgt.n	8003ab6 <Gpio::setAlternateFunc(unsigned char)+0xa8>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:167
			uint8_t offset = (pinNr - 8) * 4;
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	889b      	ldrh	r3, [r3, #4]
 8003a80:	3b08      	subs	r3, #8
 8003a82:	b2db      	uxtb	r3, r3
 8003a84:	009b      	lsls	r3, r3, #2
 8003a86:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:168
			uint32_t tmp = gpio->AFR[1];
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	681b      	ldr	r3, [r3, #0]
 8003a8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a8e:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:169
			tmp &= ~(BitMask << offset);
 8003a90:	7bfb      	ldrb	r3, [r7, #15]
 8003a92:	220f      	movs	r2, #15
 8003a94:	fa02 f303 	lsl.w	r3, r2, r3
 8003a98:	43db      	mvns	r3, r3
 8003a9a:	68ba      	ldr	r2, [r7, #8]
 8003a9c:	4013      	ands	r3, r2
 8003a9e:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:170
			tmp |= val << offset;
 8003aa0:	7bfb      	ldrb	r3, [r7, #15]
 8003aa2:	69ba      	ldr	r2, [r7, #24]
 8003aa4:	fa02 f303 	lsl.w	r3, r2, r3
 8003aa8:	68ba      	ldr	r2, [r7, #8]
 8003aaa:	4313      	orrs	r3, r2
 8003aac:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:171
			gpio->AFR[1] = tmp;
 8003aae:	687b      	ldr	r3, [r7, #4]
 8003ab0:	681b      	ldr	r3, [r3, #0]
 8003ab2:	68ba      	ldr	r2, [r7, #8]
 8003ab4:	625a      	str	r2, [r3, #36]	; 0x24
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:173
		}
		return true;
 8003ab6:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Gpio.h:174
	}
 8003ab8:	4618      	mov	r0, r3
 8003aba:	3724      	adds	r7, #36	; 0x24
 8003abc:	46bd      	mov	sp, r7
 8003abe:	bc80      	pop	{r7}
 8003ac0:	4770      	bx	lr
	...

08003ac4 <QuickTask::getCounter()>:
getCounter():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.h:43
	QuickTask *next;
	QTType	type;
	QTFlags	flags;
	void  (*qCallback)(void);
public:
	static uint32_t getCounter(){ return milisCounter; }
 8003ac4:	b480      	push	{r7}
 8003ac6:	af00      	add	r7, sp, #0
 8003ac8:	4b02      	ldr	r3, [pc, #8]	; (8003ad4 <QuickTask::getCounter()+0x10>)
 8003aca:	681b      	ldr	r3, [r3, #0]
 8003acc:	4618      	mov	r0, r3
 8003ace:	46bd      	mov	sp, r7
 8003ad0:	bc80      	pop	{r7}
 8003ad2:	4770      	bx	lr
 8003ad4:	200003c4 	.word	0x200003c4

08003ad8 <QuickTask::getTimeIntervalMilis(unsigned long)>:
getTimeIntervalMilis():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.h:61
	void set_hours(const uint8_t godz){set_milis(godz*1000*60*60); }
	uint32_t get_milis(){return timectr;}
	void setIntervalMs(uint32_t updateMs){updateValue = updateMs;}

	/// Zwraca ilosc milisekund od oldTime do teraz. oldTime musi byc w przeszlosci.
	static uint32_t getTimeIntervalMilis(uint32_t oldTime){
 8003ad8:	b580      	push	{r7, lr}
 8003ada:	b084      	sub	sp, #16
 8003adc:	af00      	add	r7, sp, #0
 8003ade:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.h:62
		uint32_t cnt = getCounter();
 8003ae0:	f7ff fff0 	bl	8003ac4 <QuickTask::getCounter()>
 8003ae4:	60f8      	str	r0, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.h:63
		return uint32_t(cnt - oldTime);
 8003ae6:	68fa      	ldr	r2, [r7, #12]
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	1ad3      	subs	r3, r2, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/QuickTask.h:64
	}
 8003aec:	4618      	mov	r0, r3
 8003aee:	3710      	adds	r7, #16
 8003af0:	46bd      	mov	sp, r7
 8003af2:	bd80      	pop	{r7, pc}

08003af4 <flash_latency(unsigned long)>:
flash_latency():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:136
 *
 * \param [in] frequency defines the target frequency of the core
 *//*-------------------------------------------------------------------------*/

static void flash_latency(uint32_t frequency)
{
 8003af4:	b480      	push	{r7}
 8003af6:	b085      	sub	sp, #20
 8003af8:	af00      	add	r7, sp, #0
 8003afa:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:139
	uint32_t wait_states;

	wait_states = frequency / 30000000ul;	// calculate wait_states (30M is valid for 2.7V to 3.6V voltage range, use 24M for 2.4V to 2.7V, 18M for 2.1V to 2.4V or 16M for  1.8V to 2.1V)
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	09db      	lsrs	r3, r3, #7
 8003b00:	4a0c      	ldr	r2, [pc, #48]	; (8003b34 <flash_latency(unsigned long)+0x40>)
 8003b02:	fba2 2303 	umull	r2, r3, r2, r3
 8003b06:	0a9b      	lsrs	r3, r3, #10
 8003b08:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:140
	wait_states &= 7;						// trim to max allowed value - 7
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	f003 0307 	and.w	r3, r3, #7
 8003b10:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:142

	FLASH->ACR = wait_states;				// set wait_states, disable all caches and prefetch
 8003b12:	4a09      	ldr	r2, [pc, #36]	; (8003b38 <flash_latency(unsigned long)+0x44>)
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:143
	FLASH->ACR = FLASH_ACR_DCRST | FLASH_ACR_ICRST | wait_states;	// reset caches
 8003b18:	4a07      	ldr	r2, [pc, #28]	; (8003b38 <flash_latency(unsigned long)+0x44>)
 8003b1a:	68fb      	ldr	r3, [r7, #12]
 8003b1c:	f443 53c0 	orr.w	r3, r3, #6144	; 0x1800
 8003b20:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:144
	FLASH->ACR = FLASH_ACR_DCEN | FLASH_ACR_ICEN | FLASH_ACR_PRFTEN | wait_states;	// enable caches and prefetch
 8003b22:	4a05      	ldr	r2, [pc, #20]	; (8003b38 <flash_latency(unsigned long)+0x44>)
 8003b24:	68fb      	ldr	r3, [r7, #12]
 8003b26:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8003b2a:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:145
}
 8003b2c:	3714      	adds	r7, #20
 8003b2e:	46bd      	mov	sp, r7
 8003b30:	bc80      	pop	{r7}
 8003b32:	4770      	bx	lr
 8003b34:	011e54c7 	.word	0x011e54c7
 8003b38:	40023c00 	.word	0x40023c00

08003b3c <pll_start(unsigned long, unsigned long)>:
pll_start():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:164
 *
 * \return real frequency that was set
 *//*-------------------------------------------------------------------------*/

static uint32_t pll_start(uint32_t crystal, uint32_t frequency)
{
 8003b3c:	b580      	push	{r7, lr}
 8003b3e:	b08c      	sub	sp, #48	; 0x30
 8003b40:	af00      	add	r7, sp, #0
 8003b42:	6078      	str	r0, [r7, #4]
 8003b44:	6039      	str	r1, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:166
	uint32_t div, mul, div_core, vco_input_frequency, vco_output_frequency, frequency_core;
	uint32_t best_div = 0, best_mul = 0, best_div_core = 0, best_frequency_core = 0;
 8003b46:	2300      	movs	r3, #0
 8003b48:	623b      	str	r3, [r7, #32]
 8003b4a:	2300      	movs	r3, #0
 8003b4c:	61fb      	str	r3, [r7, #28]
 8003b4e:	2300      	movs	r3, #0
 8003b50:	61bb      	str	r3, [r7, #24]
 8003b52:	2300      	movs	r3, #0
 8003b54:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:168

	RCC_CR_HSEON_bb = 1;					// enable HSE clock
 8003b56:	4b46      	ldr	r3, [pc, #280]	; (8003c70 <pll_start(unsigned long, unsigned long)+0x134>)
 8003b58:	2201      	movs	r2, #1
 8003b5a:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:169
	flash_latency(frequency);				// configure Flash latency for desired frequency
 8003b5c:	6838      	ldr	r0, [r7, #0]
 8003b5e:	f7ff ffc9 	bl	8003af4 <flash_latency(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:171

	for (div = 2; div <= 63; div++)			// PLLM in [2; 63]
 8003b62:	2302      	movs	r3, #2
 8003b64:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003b66:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003b68:	2b3f      	cmp	r3, #63	; 0x3f
 8003b6a:	d845      	bhi.n	8003bf8 <pll_start(unsigned long, unsigned long)+0xbc>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:173
	{
		vco_input_frequency = crystal / div;
 8003b6c:	687a      	ldr	r2, [r7, #4]
 8003b6e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003b70:	fbb2 f3f3 	udiv	r3, r2, r3
 8003b74:	613b      	str	r3, [r7, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:175

		if ((vco_input_frequency < 1000000ul) || (vco_input_frequency > 2000000))	// skip invalid settings
 8003b76:	693b      	ldr	r3, [r7, #16]
 8003b78:	4a3e      	ldr	r2, [pc, #248]	; (8003c74 <pll_start(unsigned long, unsigned long)+0x138>)
 8003b7a:	4293      	cmp	r3, r2
 8003b7c:	d938      	bls.n	8003bf0 <pll_start(unsigned long, unsigned long)+0xb4>
 8003b7e:	693b      	ldr	r3, [r7, #16]
 8003b80:	4a3d      	ldr	r2, [pc, #244]	; (8003c78 <pll_start(unsigned long, unsigned long)+0x13c>)
 8003b82:	4293      	cmp	r3, r2
 8003b84:	d834      	bhi.n	8003bf0 <pll_start(unsigned long, unsigned long)+0xb4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:178
			continue;

		for (mul = 64; mul <= 432; mul++)	// PLLN in [64; 432]
 8003b86:	2340      	movs	r3, #64	; 0x40
 8003b88:	62bb      	str	r3, [r7, #40]	; 0x28
 8003b8a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003b8c:	f5b3 7fd8 	cmp.w	r3, #432	; 0x1b0
 8003b90:	d82e      	bhi.n	8003bf0 <pll_start(unsigned long, unsigned long)+0xb4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:180
		{
			vco_output_frequency = vco_input_frequency * mul;
 8003b92:	693b      	ldr	r3, [r7, #16]
 8003b94:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003b96:	fb02 f303 	mul.w	r3, r2, r3
 8003b9a:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:182

			if ((vco_output_frequency < 64000000ul) || (vco_output_frequency > 432000000ul))	// skip invalid settings
 8003b9c:	68fb      	ldr	r3, [r7, #12]
 8003b9e:	4a37      	ldr	r2, [pc, #220]	; (8003c7c <pll_start(unsigned long, unsigned long)+0x140>)
 8003ba0:	4293      	cmp	r3, r2
 8003ba2:	d921      	bls.n	8003be8 <pll_start(unsigned long, unsigned long)+0xac>
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	4a36      	ldr	r2, [pc, #216]	; (8003c80 <pll_start(unsigned long, unsigned long)+0x144>)
 8003ba8:	4293      	cmp	r3, r2
 8003baa:	d81d      	bhi.n	8003be8 <pll_start(unsigned long, unsigned long)+0xac>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:185
				continue;

			for (div_core = 2; div_core <= 8; div_core += 2)	// PLLP in {2, 4, 6, 8}
 8003bac:	2302      	movs	r3, #2
 8003bae:	627b      	str	r3, [r7, #36]	; 0x24
 8003bb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003bb2:	2b08      	cmp	r3, #8
 8003bb4:	d818      	bhi.n	8003be8 <pll_start(unsigned long, unsigned long)+0xac>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:187
			{
				frequency_core = vco_output_frequency / div_core;
 8003bb6:	68fa      	ldr	r2, [r7, #12]
 8003bb8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003bba:	fbb2 f3f3 	udiv	r3, r2, r3
 8003bbe:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:189

				if (frequency_core > frequency)	// skip values over desired frequency
 8003bc0:	68ba      	ldr	r2, [r7, #8]
 8003bc2:	683b      	ldr	r3, [r7, #0]
 8003bc4:	429a      	cmp	r2, r3
 8003bc6:	d80b      	bhi.n	8003be0 <pll_start(unsigned long, unsigned long)+0xa4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:192
					continue;

				if (frequency_core > best_frequency_core)	// is this configuration better than previous one?
 8003bc8:	68ba      	ldr	r2, [r7, #8]
 8003bca:	697b      	ldr	r3, [r7, #20]
 8003bcc:	429a      	cmp	r2, r3
 8003bce:	d907      	bls.n	8003be0 <pll_start(unsigned long, unsigned long)+0xa4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:194
				{
					best_frequency_core = frequency_core;	// yes - save values
 8003bd0:	68bb      	ldr	r3, [r7, #8]
 8003bd2:	617b      	str	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:195
					best_div = div;
 8003bd4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003bd6:	623b      	str	r3, [r7, #32]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:196
					best_mul = mul;
 8003bd8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003bda:	61fb      	str	r3, [r7, #28]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:197
					best_div_core = div_core;
 8003bdc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003bde:	61bb      	str	r3, [r7, #24]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:185
			for (div_core = 2; div_core <= 8; div_core += 2)	// PLLP in {2, 4, 6, 8}
 8003be0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003be2:	3302      	adds	r3, #2
 8003be4:	627b      	str	r3, [r7, #36]	; 0x24
 8003be6:	e7e3      	b.n	8003bb0 <pll_start(unsigned long, unsigned long)+0x74>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:178
		for (mul = 64; mul <= 432; mul++)	// PLLN in [64; 432]
 8003be8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003bea:	3301      	adds	r3, #1
 8003bec:	62bb      	str	r3, [r7, #40]	; 0x28
 8003bee:	e7cc      	b.n	8003b8a <pll_start(unsigned long, unsigned long)+0x4e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:171
	for (div = 2; div <= 63; div++)			// PLLM in [2; 63]
 8003bf0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003bf2:	3301      	adds	r3, #1
 8003bf4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003bf6:	e7b6      	b.n	8003b66 <pll_start(unsigned long, unsigned long)+0x2a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:203
				}
			}
		}
	}

	RCC->PLLCFGR = (best_div << RCC_PLLCFGR_PLLM_bit) | (best_mul << RCC_PLLCFGR_PLLN_bit) | ((best_div_core / 2 - 1) << RCC_PLLCFGR_PLLP_bit) | RCC_PLLCFGR_PLLQ_DIV9 | RCC_PLLCFGR_PLLSRC_HSE;	// configure PLL factors, always divide USB clock by 9
 8003bf8:	4922      	ldr	r1, [pc, #136]	; (8003c84 <pll_start(unsigned long, unsigned long)+0x148>)
 8003bfa:	69fb      	ldr	r3, [r7, #28]
 8003bfc:	019a      	lsls	r2, r3, #6
 8003bfe:	6a3b      	ldr	r3, [r7, #32]
 8003c00:	431a      	orrs	r2, r3
 8003c02:	69bb      	ldr	r3, [r7, #24]
 8003c04:	085b      	lsrs	r3, r3, #1
 8003c06:	3b01      	subs	r3, #1
 8003c08:	041b      	lsls	r3, r3, #16
 8003c0a:	4313      	orrs	r3, r2
 8003c0c:	f043 6314 	orr.w	r3, r3, #155189248	; 0x9400000
 8003c10:	604b      	str	r3, [r1, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:205

	RCC->CFGR = RCC_CFGR_PPRE2_DIV1 | RCC_CFGR_PPRE1_DIV1 | RCC_CFGR_HPRE_DIV1;	// AHB - no prescaler, APB1 - divide by 1, APB2 - divide by 1
 8003c12:	4b1c      	ldr	r3, [pc, #112]	; (8003c84 <pll_start(unsigned long, unsigned long)+0x148>)
 8003c14:	2200      	movs	r2, #0
 8003c16:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:207

	while (!RCC_CR_HSERDY_bb);				// wait for stable clock
 8003c18:	4b1b      	ldr	r3, [pc, #108]	; (8003c88 <pll_start(unsigned long, unsigned long)+0x14c>)
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	2b00      	cmp	r3, #0
 8003c1e:	bf0c      	ite	eq
 8003c20:	2301      	moveq	r3, #1
 8003c22:	2300      	movne	r3, #0
 8003c24:	b2db      	uxtb	r3, r3
 8003c26:	2b00      	cmp	r3, #0
 8003c28:	d1f6      	bne.n	8003c18 <pll_start(unsigned long, unsigned long)+0xdc>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:209

	RCC_CR_PLLON_bb = 1;					// enable PLL
 8003c2a:	4b18      	ldr	r3, [pc, #96]	; (8003c8c <pll_start(unsigned long, unsigned long)+0x150>)
 8003c2c:	2201      	movs	r2, #1
 8003c2e:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:210
	while (!RCC_CR_PLLRDY_bb);				// wait for PLL lock
 8003c30:	4b17      	ldr	r3, [pc, #92]	; (8003c90 <pll_start(unsigned long, unsigned long)+0x154>)
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	2b00      	cmp	r3, #0
 8003c36:	bf0c      	ite	eq
 8003c38:	2301      	moveq	r3, #1
 8003c3a:	2300      	movne	r3, #0
 8003c3c:	b2db      	uxtb	r3, r3
 8003c3e:	2b00      	cmp	r3, #0
 8003c40:	d1f6      	bne.n	8003c30 <pll_start(unsigned long, unsigned long)+0xf4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:212

	RCC->CFGR |= RCC_CFGR_SW_PLL;			// change SYSCLK to PLL
 8003c42:	4a10      	ldr	r2, [pc, #64]	; (8003c84 <pll_start(unsigned long, unsigned long)+0x148>)
 8003c44:	4b0f      	ldr	r3, [pc, #60]	; (8003c84 <pll_start(unsigned long, unsigned long)+0x148>)
 8003c46:	689b      	ldr	r3, [r3, #8]
 8003c48:	f043 0302 	orr.w	r3, r3, #2
 8003c4c:	6093      	str	r3, [r2, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:213
	while (((RCC->CFGR) & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);	// wait for switch
 8003c4e:	4b0d      	ldr	r3, [pc, #52]	; (8003c84 <pll_start(unsigned long, unsigned long)+0x148>)
 8003c50:	689b      	ldr	r3, [r3, #8]
 8003c52:	f003 030c 	and.w	r3, r3, #12
 8003c56:	2b08      	cmp	r3, #8
 8003c58:	bf14      	ite	ne
 8003c5a:	2301      	movne	r3, #1
 8003c5c:	2300      	moveq	r3, #0
 8003c5e:	b2db      	uxtb	r3, r3
 8003c60:	2b00      	cmp	r3, #0
 8003c62:	d1f4      	bne.n	8003c4e <pll_start(unsigned long, unsigned long)+0x112>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:215

	return best_frequency_core;
 8003c64:	697b      	ldr	r3, [r7, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:216
}
 8003c66:	4618      	mov	r0, r3
 8003c68:	3730      	adds	r7, #48	; 0x30
 8003c6a:	46bd      	mov	sp, r7
 8003c6c:	bd80      	pop	{r7, pc}
 8003c6e:	bf00      	nop
 8003c70:	42470040 	.word	0x42470040
 8003c74:	000f423f 	.word	0x000f423f
 8003c78:	001e8480 	.word	0x001e8480
 8003c7c:	03d08fff 	.word	0x03d08fff
 8003c80:	19bfcc00 	.word	0x19bfcc00
 8003c84:	40023800 	.word	0x40023800
 8003c88:	42470044 	.word	0x42470044
 8003c8c:	42470060 	.word	0x42470060
 8003c90:	42470064 	.word	0x42470064

08003c94 <fpu_enable()>:
fpu_enable():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:227
 * done by enabling CP10 and CP11 coprocessors in CPACR register (possible only
 * when in privileged mode).
 *//*-------------------------------------------------------------------------*/

static void fpu_enable(void)
{
 8003c94:	b480      	push	{r7}
 8003c96:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:231
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
	SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));	// set CP10 and CP11 Full Access
#endif
}
 8003c98:	46bd      	mov	sp, r7
 8003c9a:	bc80      	pop	{r7}
 8003c9c:	4770      	bx	lr
	...

08003ca0 <rccInit()>:
rccInit():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:234


static void rccInit(void){
 8003ca0:	b480      	push	{r7}
 8003ca2:	b083      	sub	sp, #12
 8003ca4:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:242
	//			|RCC_AHB1RSTR_GPIOCRST | RCC_AHB1RSTR_GPIODRST
	//			|RCC_AHB1RSTR_GPIOERST | RCC_AHB1RSTR_GPIOHRST
	//			|RCC_AHB1RSTR_DMA1RST | RCC_AHB1RSTR_DMA2RST
	//			;

	__IO uint32_t tmpreg = 0x00U;
 8003ca6:	2300      	movs	r3, #0
 8003ca8:	607b      	str	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:250
		RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN
				|RCC_AHB1ENR_GPIOCEN | RCC_AHB1ENR_GPIODEN
				|RCC_AHB1ENR_GPIOEEN | RCC_AHB1ENR_GPIOHEN
				//	|RCC_AHB1ENR_DMA1EN
				| RCC_AHB1ENR_DMA2EN
				;
 8003caa:	4a12      	ldr	r2, [pc, #72]	; (8003cf4 <rccInit()+0x54>)
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:249
				| RCC_AHB1ENR_DMA2EN
 8003cac:	4b11      	ldr	r3, [pc, #68]	; (8003cf4 <rccInit()+0x54>)
 8003cae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003cb0:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8003cb4:	f043 039f 	orr.w	r3, r3, #159	; 0x9f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:245
		RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN
 8003cb8:	6313      	str	r3, [r2, #48]	; 0x30
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:251
		tmpreg = RCC->AHB1ENR;
 8003cba:	4b0e      	ldr	r3, [pc, #56]	; (8003cf4 <rccInit()+0x54>)
 8003cbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003cbe:	607b      	str	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:257
		(void)(tmpreg);
	} while(0U);


	do {
		SET_BIT(RCC->APB1ENR, RCC_APB1ENR_I2C1EN);
 8003cc0:	4a0c      	ldr	r2, [pc, #48]	; (8003cf4 <rccInit()+0x54>)
 8003cc2:	4b0c      	ldr	r3, [pc, #48]	; (8003cf4 <rccInit()+0x54>)
 8003cc4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cc6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003cca:	6413      	str	r3, [r2, #64]	; 0x40
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:259
		/* Delay after an RCC peripheral clock enabling */
		tmpreg = READ_BIT(RCC->APB1ENR, RCC_APB1ENR_I2C1EN);
 8003ccc:	4b09      	ldr	r3, [pc, #36]	; (8003cf4 <rccInit()+0x54>)
 8003cce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cd0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003cd4:	607b      	str	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:266
	} while(0U);


	do {
		RCC->APB2ENR |= RCC_APB2ENR_ADC1EN
				;
 8003cd6:	4a07      	ldr	r2, [pc, #28]	; (8003cf4 <rccInit()+0x54>)
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:265
		RCC->APB2ENR |= RCC_APB2ENR_ADC1EN
 8003cd8:	4b06      	ldr	r3, [pc, #24]	; (8003cf4 <rccInit()+0x54>)
 8003cda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003cdc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003ce0:	6453      	str	r3, [r2, #68]	; 0x44
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:268
		/* Delay after an RCC peripheral clock enabling */
		tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_ADC1EN);
 8003ce2:	4b04      	ldr	r3, [pc, #16]	; (8003cf4 <rccInit()+0x54>)
 8003ce4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003ce6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003cea:	607b      	str	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:272
		(void)(tmpreg);
	} while(0U);

}
 8003cec:	370c      	adds	r7, #12
 8003cee:	46bd      	mov	sp, r7
 8003cf0:	bc80      	pop	{r7}
 8003cf2:	4770      	bx	lr
 8003cf4:	40023800 	.word	0x40023800

08003cf8 <Hardware::init()>:
_ZN8Hardware4initEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:274

void Hardware::init(){
 8003cf8:	b580      	push	{r7, lr}
 8003cfa:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:278

	// Procesor i zegar zainicjowany

	flash_latency(32000000);
 8003cfc:	4815      	ldr	r0, [pc, #84]	; (8003d54 <Hardware::init()+0x5c>)
 8003cfe:	f7ff fef9 	bl	8003af4 <flash_latency(unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:279
	pll_start(8000000, 32000000);
 8003d02:	4914      	ldr	r1, [pc, #80]	; (8003d54 <Hardware::init()+0x5c>)
 8003d04:	4814      	ldr	r0, [pc, #80]	; (8003d58 <Hardware::init()+0x60>)
 8003d06:	f7ff ff19 	bl	8003b3c <pll_start(unsigned long, unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:280
	fpu_enable();
 8003d0a:	f7ff ffc3 	bl	8003c94 <fpu_enable()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:282

	rccInit();
 8003d0e:	f7ff ffc7 	bl	8003ca0 <rccInit()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:284

	SystemCoreClockUpdate();	// na wszelki wypadek
 8003d12:	f7fc fc15 	bl	8000540 <SystemCoreClockUpdate>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:286

	if (SysTick_Config( SystemCoreClock / SYSTICK_FREQUENCY_HZ)) {
 8003d16:	4b11      	ldr	r3, [pc, #68]	; (8003d5c <Hardware::init()+0x64>)
 8003d18:	681b      	ldr	r3, [r3, #0]
 8003d1a:	4a11      	ldr	r2, [pc, #68]	; (8003d60 <Hardware::init()+0x68>)
 8003d1c:	fba2 2303 	umull	r2, r3, r2, r3
 8003d20:	099b      	lsrs	r3, r3, #6
 8003d22:	4618      	mov	r0, r3
 8003d24:	f7ff fd0c 	bl	8003740 <SysTick_Config>
 8003d28:	4603      	mov	r3, r0
 8003d2a:	2b00      	cmp	r3, #0
 8003d2c:	bf14      	ite	ne
 8003d2e:	2301      	movne	r3, #1
 8003d30:	2300      	moveq	r3, #0
 8003d32:	b2db      	uxtb	r3, r3
 8003d34:	2b00      	cmp	r3, #0
 8003d36:	d002      	beq.n	8003d3e <Hardware::init()+0x46>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:287
		errorDispatch(Hardware::ErrorCode::Failure);
 8003d38:	2002      	movs	r0, #2
 8003d3a:	f7ff fd52 	bl	80037e2 <Hardware::errorDispatch(Hardware::ErrorCode)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:290
	}

	NVIC_init();	// przerwania
 8003d3e:	f000 f8ab 	bl	8003e98 <Hardware::NVIC_init()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:292

	gpioInit();
 8003d42:	f000 f80f 	bl	8003d64 <Hardware::gpioInit()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:294

	adcInit();
 8003d46:	f000 f81b 	bl	8003d80 <Hardware::adcInit()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:296

	i2cInit();
 8003d4a:	f000 f8e3 	bl	8003f14 <Hardware::i2cInit()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:298

	WDOG_Init();
 8003d4e:	f000 f899 	bl	8003e84 <Hardware::WDOG_Init()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:301


}
 8003d52:	bd80      	pop	{r7, pc}
 8003d54:	01e84800 	.word	0x01e84800
 8003d58:	007a1200 	.word	0x007a1200
 8003d5c:	20000024 	.word	0x20000024
 8003d60:	10624dd3 	.word	0x10624dd3

08003d64 <Hardware::gpioInit()>:
gpioInit():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:308
/*------------------------------------------------------------------------*//**
 * \brief GPIO initialization.
 * \details Enables all GPIO ports.
 *//*-------------------------------------------------------------------------*/

void Hardware::gpioInit(){
 8003d64:	b480      	push	{r7}
 8003d66:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:312

	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN |
			RCC_AHB1ENR_GPIOCEN | RCC_AHB1ENR_GPIODEN | RCC_AHB1ENR_GPIOEEN |RCC_AHB1ENR_GPIOHEN
			;			// enable all possible GPIO ports
 8003d68:	4a04      	ldr	r2, [pc, #16]	; (8003d7c <Hardware::gpioInit()+0x18>)
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:311
			RCC_AHB1ENR_GPIOCEN | RCC_AHB1ENR_GPIODEN | RCC_AHB1ENR_GPIOEEN |RCC_AHB1ENR_GPIOHEN
 8003d6a:	4b04      	ldr	r3, [pc, #16]	; (8003d7c <Hardware::gpioInit()+0x18>)
 8003d6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d6e:	f043 039f 	orr.w	r3, r3, #159	; 0x9f
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:310
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN |
 8003d72:	6313      	str	r3, [r2, #48]	; 0x30
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:314

}
 8003d74:	46bd      	mov	sp, r7
 8003d76:	bc80      	pop	{r7}
 8003d78:	4770      	bx	lr
 8003d7a:	bf00      	nop
 8003d7c:	40023800 	.word	0x40023800

08003d80 <Hardware::adcInit()>:
adcInit():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:318

//I2C_TypeDef * i2c = I2C1;

void Hardware::adcInit(){
 8003d80:	b580      	push	{r7, lr}
 8003d82:	b084      	sub	sp, #16
 8003d84:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:320

	const uint32_t dataLength = Pomiar::Analogi::count;
 8003d86:	2306      	movs	r3, #6
 8003d88:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:321
	uint32_t dataPtr = (uint32_t)Pomiar::getDataTablePtr();
 8003d8a:	f7ff fa95 	bl	80032b8 <Pomiar::getDataTablePtr()>
 8003d8e:	4603      	mov	r3, r0
 8003d90:	60bb      	str	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:326



	// wlaczenie zegara dla ADC
	RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 8003d92:	4a36      	ldr	r2, [pc, #216]	; (8003e6c <Hardware::adcInit()+0xec>)
 8003d94:	4b35      	ldr	r3, [pc, #212]	; (8003e6c <Hardware::adcInit()+0xec>)
 8003d96:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003d98:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003d9c:	6453      	str	r3, [r2, #68]	; 0x44
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:328
	// wlaczenie zegara dla DMA2
	RCC->AHB1ENR |= RCC_AHB1ENR_DMA2EN;
 8003d9e:	4a33      	ldr	r2, [pc, #204]	; (8003e6c <Hardware::adcInit()+0xec>)
 8003da0:	4b32      	ldr	r3, [pc, #200]	; (8003e6c <Hardware::adcInit()+0xec>)
 8003da2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003da4:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8003da8:	6313      	str	r3, [r2, #48]	; 0x30
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:333


	/* Set ADC parameters */
	/* Set the ADC clock prescaler */
	ADC->CCR |=  ADC_CCR_ADCPRE_0 | ADC_CCR_ADCPRE_1;
 8003daa:	4a31      	ldr	r2, [pc, #196]	; (8003e70 <Hardware::adcInit()+0xf0>)
 8003dac:	4b30      	ldr	r3, [pc, #192]	; (8003e70 <Hardware::adcInit()+0xf0>)
 8003dae:	685b      	ldr	r3, [r3, #4]
 8003db0:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8003db4:	6053      	str	r3, [r2, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:338

	/* Set ADC scan mode */
	ADC1->CR1 |= ADC_CR1_SCAN
			//			  | ADC_CR1_RES_0			// RES = 12bit 15ADCCLK,
			;
 8003db6:	4a2f      	ldr	r2, [pc, #188]	; (8003e74 <Hardware::adcInit()+0xf4>)
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:336
	ADC1->CR1 |= ADC_CR1_SCAN
 8003db8:	4b2e      	ldr	r3, [pc, #184]	; (8003e74 <Hardware::adcInit()+0xf4>)
 8003dba:	685b      	ldr	r3, [r3, #4]
 8003dbc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003dc0:	6053      	str	r3, [r2, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:346
	/* Set ADC data alignment */

	/* Enable or disable ADC continuous conversion mode */
	ADC1->CR2 |=
			//			  ADC_CR2_ALIGN |
			ADC_CR2_CONT ;
 8003dc2:	4a2c      	ldr	r2, [pc, #176]	; (8003e74 <Hardware::adcInit()+0xf4>)
 8003dc4:	4b2b      	ldr	r3, [pc, #172]	; (8003e74 <Hardware::adcInit()+0xf4>)
 8003dc6:	689b      	ldr	r3, [r3, #8]
 8003dc8:	f043 0302 	orr.w	r3, r3, #2
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:344
	ADC1->CR2 |=
 8003dcc:	6093      	str	r3, [r2, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:349

	// ilosc wejsc
	ADC1->SQR1 |= (dataLength - 1) << 20U;
 8003dce:	4a29      	ldr	r2, [pc, #164]	; (8003e74 <Hardware::adcInit()+0xf4>)
 8003dd0:	4b28      	ldr	r3, [pc, #160]	; (8003e74 <Hardware::adcInit()+0xf4>)
 8003dd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003dd4:	f443 03a0 	orr.w	r3, r3, #5242880	; 0x500000
 8003dd8:	62d3      	str	r3, [r2, #44]	; 0x2c
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:354

	/* Enable or disable ADC DMA continuous request */
	ADC1->CR2 |= ADC_CR2_DDS
			|  ADC_CR2_ADON		// ADC wlaczone
			;
 8003dda:	4a26      	ldr	r2, [pc, #152]	; (8003e74 <Hardware::adcInit()+0xf4>)
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:353
			|  ADC_CR2_ADON		// ADC wlaczone
 8003ddc:	4b25      	ldr	r3, [pc, #148]	; (8003e74 <Hardware::adcInit()+0xf4>)
 8003dde:	689b      	ldr	r3, [r3, #8]
 8003de0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003de4:	f043 0301 	orr.w	r3, r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:352
	ADC1->CR2 |= ADC_CR2_DDS
 8003de8:	6093      	str	r3, [r2, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:358

	/* Delay for ADC stabilization time */
	/* Compute number of CPU cycles to wait for */
	__IO uint32_t counter = (3U * (SystemCoreClock / 1000000U));
 8003dea:	4b23      	ldr	r3, [pc, #140]	; (8003e78 <Hardware::adcInit()+0xf8>)
 8003dec:	681b      	ldr	r3, [r3, #0]
 8003dee:	4a23      	ldr	r2, [pc, #140]	; (8003e7c <Hardware::adcInit()+0xfc>)
 8003df0:	fba2 2303 	umull	r2, r3, r2, r3
 8003df4:	0c9a      	lsrs	r2, r3, #18
 8003df6:	4613      	mov	r3, r2
 8003df8:	005b      	lsls	r3, r3, #1
 8003dfa:	4413      	add	r3, r2
 8003dfc:	607b      	str	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:359
	while(counter != 0U)
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	2b00      	cmp	r3, #0
 8003e02:	bf14      	ite	ne
 8003e04:	2301      	movne	r3, #1
 8003e06:	2300      	moveq	r3, #0
 8003e08:	b2db      	uxtb	r3, r3
 8003e0a:	2b00      	cmp	r3, #0
 8003e0c:	d003      	beq.n	8003e16 <Hardware::adcInit()+0x96>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:361
	{
		counter--;
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	3b01      	subs	r3, #1
 8003e12:	607b      	str	r3, [r7, #4]
 8003e14:	e7f3      	b.n	8003dfe <Hardware::adcInit()+0x7e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:365
	}


	ADC1->SR &= ~ADC_SR_EOC;
 8003e16:	4a17      	ldr	r2, [pc, #92]	; (8003e74 <Hardware::adcInit()+0xf4>)
 8003e18:	4b16      	ldr	r3, [pc, #88]	; (8003e74 <Hardware::adcInit()+0xf4>)
 8003e1a:	681b      	ldr	r3, [r3, #0]
 8003e1c:	f023 0302 	bic.w	r3, r3, #2
 8003e20:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:368


	ADC1->CR2 |= ADC_CR2_DMA;
 8003e22:	4a14      	ldr	r2, [pc, #80]	; (8003e74 <Hardware::adcInit()+0xf4>)
 8003e24:	4b13      	ldr	r3, [pc, #76]	; (8003e74 <Hardware::adcInit()+0xf4>)
 8003e26:	689b      	ldr	r3, [r3, #8]
 8003e28:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003e2c:	6093      	str	r3, [r2, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:372

	/* Disable the peripheral */

	DMA2_Stream0->CR  &=  ~((uint32_t)0x00000001);
 8003e2e:	4a14      	ldr	r2, [pc, #80]	; (8003e80 <Hardware::adcInit()+0x100>)
 8003e30:	4b13      	ldr	r3, [pc, #76]	; (8003e80 <Hardware::adcInit()+0x100>)
 8003e32:	681b      	ldr	r3, [r3, #0]
 8003e34:	f023 0301 	bic.w	r3, r3, #1
 8003e38:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:375


	DMA2_Stream0->CR  &= (uint32_t)(~DMA_SxCR_DBM);		// reset double buffer
 8003e3a:	4a11      	ldr	r2, [pc, #68]	; (8003e80 <Hardware::adcInit()+0x100>)
 8003e3c:	4b10      	ldr	r3, [pc, #64]	; (8003e80 <Hardware::adcInit()+0x100>)
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003e44:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:379

	/* Configure DMA Stream data length */

	DMA2_Stream0->NDTR = dataLength;
 8003e46:	4b0e      	ldr	r3, [pc, #56]	; (8003e80 <Hardware::adcInit()+0x100>)
 8003e48:	2206      	movs	r2, #6
 8003e4a:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:382

	//	   /* Peripheral to Memory */
	DMA2_Stream0->PAR = ADC1->DR;	//Peripheral
 8003e4c:	4a0c      	ldr	r2, [pc, #48]	; (8003e80 <Hardware::adcInit()+0x100>)
 8003e4e:	4b09      	ldr	r3, [pc, #36]	; (8003e74 <Hardware::adcInit()+0xf4>)
 8003e50:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003e52:	6093      	str	r3, [r2, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:384
	//	     /* Configure DMA Stream source address */
	DMA2_Stream0->M0AR = (uint32_t)dataPtr;
 8003e54:	4a0a      	ldr	r2, [pc, #40]	; (8003e80 <Hardware::adcInit()+0x100>)
 8003e56:	68bb      	ldr	r3, [r7, #8]
 8003e58:	60d3      	str	r3, [r2, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:395
	//	  DMA2_Stream0->CR |= DMA_SxCR_HTIE | DMA_SxCR_TCIE | DMA_SxCR_TEIE | DMA_SxCR_DMEIE;

	//	  DMA2_Stream0->FCR |= DMA_SxFCR_FEIE; //DMA_IT_FE;

	/* Enable the Peripheral */
	DMA2_Stream0->CR |=  DMA_SxCR_EN;	// poszly konie
 8003e5a:	4a09      	ldr	r2, [pc, #36]	; (8003e80 <Hardware::adcInit()+0x100>)
 8003e5c:	4b08      	ldr	r3, [pc, #32]	; (8003e80 <Hardware::adcInit()+0x100>)
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	f043 0301 	orr.w	r3, r3, #1
 8003e64:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:399



}
 8003e66:	3710      	adds	r7, #16
 8003e68:	46bd      	mov	sp, r7
 8003e6a:	bd80      	pop	{r7, pc}
 8003e6c:	40023800 	.word	0x40023800
 8003e70:	40012300 	.word	0x40012300
 8003e74:	40012000 	.word	0x40012000
 8003e78:	20000024 	.word	0x20000024
 8003e7c:	431bde83 	.word	0x431bde83
 8003e80:	40026410 	.word	0x40026410

08003e84 <Hardware::WDOG_Init()>:
WDOG_Init():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:414
#define IWDG_PRESCALER_32               (IWDG_PR_PR_1 | IWDG_PR_PR_0) /*!< IWDG prescaler set to 32  */
#define IWDG_PRESCALER_64               IWDG_PR_PR_2                  /*!< IWDG prescaler set to 64  */
#define IWDG_PRESCALER_128              (IWDG_PR_PR_2 | IWDG_PR_PR_0) /*!< IWDG prescaler set to 128 */
#define IWDG_PRESCALER_256              (IWDG_PR_PR_2 | IWDG_PR_PR_1) /*!< IWDG prescaler set to 256 */

void Hardware::WDOG_Init(){
 8003e84:	b480      	push	{r7}
 8003e86:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:426
	IWDG->RLR = 125 * 8 * 2;	// 2 sekundy

	// Enable IWDG. LSI is turned on automaticaly
	IWDG->KR =  IWDG_KEY_ENABLE;	// aktywacja IWDG
#endif	//WATCHDOG_ENABLE
}
 8003e88:	46bd      	mov	sp, r7
 8003e8a:	bc80      	pop	{r7}
 8003e8c:	4770      	bx	lr

08003e8e <Hardware::WDOG_Reload()>:
_ZN8Hardware11WDOG_ReloadEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:428

void Hardware::WDOG_Reload(){
 8003e8e:	b480      	push	{r7}
 8003e90:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:432
#ifdef WATCHDOG_ENABLE
	IWDG->KR =  IWDG_KEY_RELOAD;	// przeladowanie IWDG
#endif	//WATCHDOG_ENABLE
}
 8003e92:	46bd      	mov	sp, r7
 8003e94:	bc80      	pop	{r7}
 8003e96:	4770      	bx	lr

08003e98 <Hardware::NVIC_init()>:
NVIC_init():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:436



void Hardware::NVIC_init(){
 8003e98:	b580      	push	{r7, lr}
 8003e9a:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:437
	NVIC_SetPriorityGrouping(nvicPriority);
 8003e9c:	2003      	movs	r0, #3
 8003e9e:	f7ff fbb9 	bl	8003614 <NVIC_SetPriorityGrouping>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:438
}
 8003ea2:	bd80      	pop	{r7, pc}

08003ea4 <Hardware::delayMs(unsigned long)>:
_ZN8Hardware7delayMsEm():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:441


void Hardware::delayMs(uint32_t milis){
 8003ea4:	b580      	push	{r7, lr}
 8003ea6:	b084      	sub	sp, #16
 8003ea8:	af00      	add	r7, sp, #0
 8003eaa:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:442
	volatile uint32_t tmp = QuickTask::getCounter();
 8003eac:	f7ff fe0a 	bl	8003ac4 <QuickTask::getCounter()>
 8003eb0:	4603      	mov	r3, r0
 8003eb2:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:443
	while(QuickTask::getCounter() - tmp < milis ){
 8003eb4:	f7ff fe06 	bl	8003ac4 <QuickTask::getCounter()>
 8003eb8:	4602      	mov	r2, r0
 8003eba:	68fb      	ldr	r3, [r7, #12]
 8003ebc:	1ad2      	subs	r2, r2, r3
 8003ebe:	687b      	ldr	r3, [r7, #4]
 8003ec0:	429a      	cmp	r2, r3
 8003ec2:	bf34      	ite	cc
 8003ec4:	2301      	movcc	r3, #1
 8003ec6:	2300      	movcs	r3, #0
 8003ec8:	b2db      	uxtb	r3, r3
 8003eca:	2b00      	cmp	r3, #0
 8003ecc:	d002      	beq.n	8003ed4 <Hardware::delayMs(unsigned long)+0x30>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:444
		i2cTimerJob();
 8003ece:	f000 f98d 	bl	80041ec <Hardware::i2cTimerJob()>
 8003ed2:	e7ef      	b.n	8003eb4 <Hardware::delayMs(unsigned long)+0x10>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:446
	}
}
 8003ed4:	3710      	adds	r7, #16
 8003ed6:	46bd      	mov	sp, r7
 8003ed8:	bd80      	pop	{r7, pc}

08003eda <Hardware::I2Cdefs::I2Cdefs()>:
__base_ctor ():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.h:36
	}I2Cdefs;
 8003eda:	b480      	push	{r7}
 8003edc:	b083      	sub	sp, #12
 8003ede:	af00      	add	r7, sp, #0
 8003ee0:	6078      	str	r0, [r7, #4]
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	2200      	movs	r2, #0
 8003ee6:	829a      	strh	r2, [r3, #20]
 8003ee8:	687b      	ldr	r3, [r7, #4]
 8003eea:	4618      	mov	r0, r3
 8003eec:	370c      	adds	r7, #12
 8003eee:	46bd      	mov	sp, r7
 8003ef0:	bc80      	pop	{r7}
 8003ef2:	4770      	bx	lr

08003ef4 <Hardware::lcdPinReset(bool)>:
_ZN8Hardware11lcdPinResetEb():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:475
//bool Hardware::i2cInit(){
//	if (HAL_StatusTypeDef::HAL_OK == HAL_I2C_Init(i2c)) return false;
//	return true;
//}

void Hardware::lcdPinReset(bool newstate){ gpioLcdReset.pinSet(newstate); }
 8003ef4:	b580      	push	{r7, lr}
 8003ef6:	b082      	sub	sp, #8
 8003ef8:	af00      	add	r7, sp, #0
 8003efa:	4603      	mov	r3, r0
 8003efc:	71fb      	strb	r3, [r7, #7]
 8003efe:	79fb      	ldrb	r3, [r7, #7]
 8003f00:	4619      	mov	r1, r3
 8003f02:	4803      	ldr	r0, [pc, #12]	; (8003f10 <Hardware::lcdPinReset(bool)+0x1c>)
 8003f04:	f7ff fcb9 	bl	800387a <Gpio::pinSet(bool)>
 8003f08:	3708      	adds	r7, #8
 8003f0a:	46bd      	mov	sp, r7
 8003f0c:	bd80      	pop	{r7, pc}
 8003f0e:	bf00      	nop
 8003f10:	20000314 	.word	0x20000314

08003f14 <Hardware::i2cInit()>:
i2cInit():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:482

//void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c){
//	i2c_Ongoing = false;
//}

void Hardware::i2cInit(){
 8003f14:	b580      	push	{r7, lr}
 8003f16:	b084      	sub	sp, #16
 8003f18:	af02      	add	r7, sp, #8
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:488
	/**I2C1 GPIO Configuration
PB6     ------> I2C1_SCL
PB7     ------> I2C1_SDA
	 */
	{ // GPIO setup
		gpioSCL.setup(Gpio::GpioMode::ALTERNATE, Gpio::GpioOType::OpenDrain, Gpio::GpioPuPd::PullUp, Gpio::GpioSpeed::MaximumSpeed);
 8003f1a:	2303      	movs	r3, #3
 8003f1c:	9300      	str	r3, [sp, #0]
 8003f1e:	2301      	movs	r3, #1
 8003f20:	2201      	movs	r2, #1
 8003f22:	2102      	movs	r1, #2
 8003f24:	4859      	ldr	r0, [pc, #356]	; (800408c <Hardware::i2cInit()+0x178>)
 8003f26:	f7ff fd4e 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:489
		gpioSDA.setup(Gpio::GpioMode::ALTERNATE, Gpio::GpioOType::OpenDrain, Gpio::GpioPuPd::PullUp, Gpio::GpioSpeed::MaximumSpeed);
 8003f2a:	2303      	movs	r3, #3
 8003f2c:	9300      	str	r3, [sp, #0]
 8003f2e:	2301      	movs	r3, #1
 8003f30:	2201      	movs	r2, #1
 8003f32:	2102      	movs	r1, #2
 8003f34:	4856      	ldr	r0, [pc, #344]	; (8004090 <Hardware::i2cInit()+0x17c>)
 8003f36:	f7ff fd46 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:490
		gpioSCL.setAlternateFunc(0x04); //AF04 - );
 8003f3a:	2104      	movs	r1, #4
 8003f3c:	4853      	ldr	r0, [pc, #332]	; (800408c <Hardware::i2cInit()+0x178>)
 8003f3e:	f7ff fd66 	bl	8003a0e <Gpio::setAlternateFunc(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:491
		gpioSDA.setAlternateFunc(0x04); //AF04 - );
 8003f42:	2104      	movs	r1, #4
 8003f44:	4852      	ldr	r0, [pc, #328]	; (8004090 <Hardware::i2cInit()+0x17c>)
 8003f46:	f7ff fd62 	bl	8003a0e <Gpio::setAlternateFunc(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:492
		gpioLcdReset.setup(Gpio::GpioMode::OUTPUT, Gpio::GpioOType::PushPull, Gpio::GpioPuPd::NoPull, Gpio::GpioSpeed::MaximumSpeed);
 8003f4a:	2303      	movs	r3, #3
 8003f4c:	9300      	str	r3, [sp, #0]
 8003f4e:	2300      	movs	r3, #0
 8003f50:	2200      	movs	r2, #0
 8003f52:	2101      	movs	r1, #1
 8003f54:	484f      	ldr	r0, [pc, #316]	; (8004094 <Hardware::i2cInit()+0x180>)
 8003f56:	f7ff fd36 	bl	80039c6 <Gpio::setup(Gpio::GpioMode, Gpio::GpioOType, Gpio::GpioPuPd, Gpio::GpioSpeed)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:493
		gpioLcdReset.pinSetUp();
 8003f5a:	484e      	ldr	r0, [pc, #312]	; (8004094 <Hardware::i2cInit()+0x180>)
 8003f5c:	f7ff fc6c 	bl	8003838 <Gpio::pinSetUp()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:498

	}


	i2c->instance = I2C1;
 8003f60:	4b4d      	ldr	r3, [pc, #308]	; (8004098 <Hardware::i2cInit()+0x184>)
 8003f62:	681b      	ldr	r3, [r3, #0]
 8003f64:	4a4d      	ldr	r2, [pc, #308]	; (800409c <Hardware::i2cInit()+0x188>)
 8003f66:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:500

	i2c->i2cFreqkHz = 100;
 8003f68:	4b4b      	ldr	r3, [pc, #300]	; (8004098 <Hardware::i2cInit()+0x184>)
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	2264      	movs	r2, #100	; 0x64
 8003f6e:	611a      	str	r2, [r3, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:501
	i2c->frameBuffer = &i2cFrame;
 8003f70:	4b49      	ldr	r3, [pc, #292]	; (8004098 <Hardware::i2cInit()+0x184>)
 8003f72:	681b      	ldr	r3, [r3, #0]
 8003f74:	4a4a      	ldr	r2, [pc, #296]	; (80040a0 <Hardware::i2cInit()+0x18c>)
 8003f76:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:502
	i2c->dataBuffer = &i2cFrame;
 8003f78:	4b47      	ldr	r3, [pc, #284]	; (8004098 <Hardware::i2cInit()+0x184>)
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	4a48      	ldr	r2, [pc, #288]	; (80040a0 <Hardware::i2cInit()+0x18c>)
 8003f7e:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:511

	//	i2c->instance->CR1 |= I2C_CR1_SWRST;
	////	while(i2c->instance->CR1 & I2C_CR1_SWRST){;}	// odczekanie na koniec resetu I2C
	//	i2c->instance->CR1 &= ~I2C_CR1_SWRST;

	i2c->instance->CR1 &= ~I2C_CR1_PE;
 8003f80:	4b45      	ldr	r3, [pc, #276]	; (8004098 <Hardware::i2cInit()+0x184>)
 8003f82:	681b      	ldr	r3, [r3, #0]
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	4a44      	ldr	r2, [pc, #272]	; (8004098 <Hardware::i2cInit()+0x184>)
 8003f88:	6812      	ldr	r2, [r2, #0]
 8003f8a:	6812      	ldr	r2, [r2, #0]
 8003f8c:	6812      	ldr	r2, [r2, #0]
 8003f8e:	f022 0201 	bic.w	r2, r2, #1
 8003f92:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:512
	while(i2c->instance->CR1 & I2C_CR1_PE){;}	// odczekanie na koniec resetu I2C
 8003f94:	4b40      	ldr	r3, [pc, #256]	; (8004098 <Hardware::i2cInit()+0x184>)
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	f003 0301 	and.w	r3, r3, #1
 8003fa0:	2b00      	cmp	r3, #0
 8003fa2:	bf14      	ite	ne
 8003fa4:	2301      	movne	r3, #1
 8003fa6:	2300      	moveq	r3, #0
 8003fa8:	b2db      	uxtb	r3, r3
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	d1f2      	bne.n	8003f94 <Hardware::i2cInit()+0x80>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:515


	NVIC_SetPriority(IRQn_Type::I2C1_EV_IRQn, NVIC_EncodePriority(nvicPriority, 0,0));
 8003fae:	2200      	movs	r2, #0
 8003fb0:	2100      	movs	r1, #0
 8003fb2:	2003      	movs	r0, #3
 8003fb4:	f7ff fb94 	bl	80036e0 <NVIC_EncodePriority>
 8003fb8:	4603      	mov	r3, r0
 8003fba:	4619      	mov	r1, r3
 8003fbc:	201f      	movs	r0, #31
 8003fbe:	f7ff fb63 	bl	8003688 <NVIC_SetPriority>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:516
	NVIC_EnableIRQ(IRQn_Type::I2C1_EV_IRQn);
 8003fc2:	201f      	movs	r0, #31
 8003fc4:	f7ff fb48 	bl	8003658 <NVIC_EnableIRQ>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:518

	NVIC_SetPriority(IRQn_Type::I2C1_ER_IRQn, NVIC_EncodePriority(nvicPriority, 0,0));
 8003fc8:	2200      	movs	r2, #0
 8003fca:	2100      	movs	r1, #0
 8003fcc:	2003      	movs	r0, #3
 8003fce:	f7ff fb87 	bl	80036e0 <NVIC_EncodePriority>
 8003fd2:	4603      	mov	r3, r0
 8003fd4:	4619      	mov	r1, r3
 8003fd6:	2020      	movs	r0, #32
 8003fd8:	f7ff fb56 	bl	8003688 <NVIC_SetPriority>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:519
	NVIC_EnableIRQ(IRQn_Type::I2C1_ER_IRQn);
 8003fdc:	2020      	movs	r0, #32
 8003fde:	f7ff fb3b 	bl	8003658 <NVIC_EnableIRQ>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:521

	uint32_t APBClock = SystemCoreClock;
 8003fe2:	4b30      	ldr	r3, [pc, #192]	; (80040a4 <Hardware::i2cInit()+0x190>)
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	607b      	str	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:522
	uint32_t APB_CLOCKMhz = (APBClock /1000000u) & 0b0111111;
 8003fe8:	687b      	ldr	r3, [r7, #4]
 8003fea:	4a2f      	ldr	r2, [pc, #188]	; (80040a8 <Hardware::i2cInit()+0x194>)
 8003fec:	fba2 2303 	umull	r2, r3, r2, r3
 8003ff0:	0c9b      	lsrs	r3, r3, #18
 8003ff2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003ff6:	603b      	str	r3, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:525
	//APB_CLOCKMhz = (i2c->CR2 & 0b0111111) | APB_CLOCKMhz;

	i2c->instance->CR2 = APB_CLOCKMhz;
 8003ff8:	4b27      	ldr	r3, [pc, #156]	; (8004098 <Hardware::i2cInit()+0x184>)
 8003ffa:	681b      	ldr	r3, [r3, #0]
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	683a      	ldr	r2, [r7, #0]
 8004000:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:527
	//uint16_t((APB_CLOCKMhz | I2C_CR2_ITEVTEN | I2C_CR2_ITBUFEN) & 0x0001111100111111);		// 8 dla 8MHz, 25 dla 25MHz
	i2c->instance->TRISE = 1 + APB_CLOCKMhz; //0x09;	dla 8MHz, 33 dla 32MHz
 8004002:	4b25      	ldr	r3, [pc, #148]	; (8004098 <Hardware::i2cInit()+0x184>)
 8004004:	681b      	ldr	r3, [r3, #0]
 8004006:	681b      	ldr	r3, [r3, #0]
 8004008:	683a      	ldr	r2, [r7, #0]
 800400a:	3201      	adds	r2, #1
 800400c:	621a      	str	r2, [r3, #32]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:528
	i2c->instance->CCR = 160;//(APB_CLOCKMhz * 2000)/(I2C_CLK_FREQ_kHz);  //160;	//40  ;			// 100kHz
 800400e:	4b22      	ldr	r3, [pc, #136]	; (8004098 <Hardware::i2cInit()+0x184>)
 8004010:	681b      	ldr	r3, [r3, #0]
 8004012:	681b      	ldr	r3, [r3, #0]
 8004014:	22a0      	movs	r2, #160	; 0xa0
 8004016:	61da      	str	r2, [r3, #28]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:531
	// (((((__PCLK__)/((__SPEED__) << 1U)) & I2C_CCR_CCR) < 4U)? 4U:((__PCLK__) / ((__SPEED__) << 1U)))
	//i2c->CR1 = 0x00;
	i2c->instance->OAR1 = 0x00 + (1UL<<14);
 8004018:	4b1f      	ldr	r3, [pc, #124]	; (8004098 <Hardware::i2cInit()+0x184>)
 800401a:	681b      	ldr	r3, [r3, #0]
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8004022:	609a      	str	r2, [r3, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:532
	i2c->instance->OAR2 = 0x00;
 8004024:	4b1c      	ldr	r3, [pc, #112]	; (8004098 <Hardware::i2cInit()+0x184>)
 8004026:	681b      	ldr	r3, [r3, #0]
 8004028:	681b      	ldr	r3, [r3, #0]
 800402a:	2200      	movs	r2, #0
 800402c:	60da      	str	r2, [r3, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:533
	i2c->instance->CR2 |=  I2C_CR2_ITEVTEN | I2C_CR2_ITBUFEN | I2C_CR2_ITERREN;
 800402e:	4b1a      	ldr	r3, [pc, #104]	; (8004098 <Hardware::i2cInit()+0x184>)
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	681b      	ldr	r3, [r3, #0]
 8004034:	4a18      	ldr	r2, [pc, #96]	; (8004098 <Hardware::i2cInit()+0x184>)
 8004036:	6812      	ldr	r2, [r2, #0]
 8004038:	6812      	ldr	r2, [r2, #0]
 800403a:	6852      	ldr	r2, [r2, #4]
 800403c:	f442 62e0 	orr.w	r2, r2, #1792	; 0x700
 8004040:	605a      	str	r2, [r3, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:534
	i2c->instance->CR1 |=  I2C_CR1_PE;
 8004042:	4b15      	ldr	r3, [pc, #84]	; (8004098 <Hardware::i2cInit()+0x184>)
 8004044:	681b      	ldr	r3, [r3, #0]
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	4a13      	ldr	r2, [pc, #76]	; (8004098 <Hardware::i2cInit()+0x184>)
 800404a:	6812      	ldr	r2, [r2, #0]
 800404c:	6812      	ldr	r2, [r2, #0]
 800404e:	6812      	ldr	r2, [r2, #0]
 8004050:	f042 0201 	orr.w	r2, r2, #1
 8004054:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:535
	while(!(i2c->instance->CR1 & I2C_CR1_PE)){;}	// odczekanie na koniec resetu I2C
 8004056:	4b10      	ldr	r3, [pc, #64]	; (8004098 <Hardware::i2cInit()+0x184>)
 8004058:	681b      	ldr	r3, [r3, #0]
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	f003 0301 	and.w	r3, r3, #1
 8004062:	2b00      	cmp	r3, #0
 8004064:	bf0c      	ite	eq
 8004066:	2301      	moveq	r3, #1
 8004068:	2300      	movne	r3, #0
 800406a:	b2db      	uxtb	r3, r3
 800406c:	2b00      	cmp	r3, #0
 800406e:	d1f2      	bne.n	8004056 <Hardware::i2cInit()+0x142>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:542

	//	if (i2c->instance->SR2 & I2C_SR2_BUSY){
	//		i2c->instance->CR1 |= I2C_CR1_STOP;
	//	}

	i2cFrame.flush();
 8004070:	480b      	ldr	r0, [pc, #44]	; (80040a0 <Hardware::i2cInit()+0x18c>)
 8004072:	f7ff fba8 	bl	80037c6 <Fifo::flush()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:543
	i2cData.flush();
 8004076:	480d      	ldr	r0, [pc, #52]	; (80040ac <Hardware::i2cInit()+0x198>)
 8004078:	f7ff fba5 	bl	80037c6 <Fifo::flush()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:544
	i2c->state = I2CSTATE::IDLE;
 800407c:	4b06      	ldr	r3, [pc, #24]	; (8004098 <Hardware::i2cInit()+0x184>)
 800407e:	681b      	ldr	r3, [r3, #0]
 8004080:	2200      	movs	r2, #0
 8004082:	759a      	strb	r2, [r3, #22]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:546

}
 8004084:	3708      	adds	r7, #8
 8004086:	46bd      	mov	sp, r7
 8004088:	bd80      	pop	{r7, pc}
 800408a:	bf00      	nop
 800408c:	200002fc 	.word	0x200002fc
 8004090:	20000308 	.word	0x20000308
 8004094:	20000314 	.word	0x20000314
 8004098:	2000000c 	.word	0x2000000c
 800409c:	40005400 	.word	0x40005400
 80040a0:	20000250 	.word	0x20000250
 80040a4:	20000024 	.word	0x20000024
 80040a8:	431bde83 	.word	0x431bde83
 80040ac:	200002cc 	.word	0x200002cc

080040b0 <Hardware::i2cEvent()>:
i2cEvent():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:554
//Fifo i2cFrame = Fifo(i2cFrameBuffer, 20);

//volatile bool i2c_Ongoing  = false;
////volatile bool frameInUse = false;

void Hardware::i2cEvent(){
 80040b0:	b590      	push	{r4, r7, lr}
 80040b2:	b083      	sub	sp, #12
 80040b4:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:555
	uint32_t sr1 = i2c->instance->SR1;
 80040b6:	4b2d      	ldr	r3, [pc, #180]	; (800416c <Hardware::i2cEvent()+0xbc>)
 80040b8:	681b      	ldr	r3, [r3, #0]
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	695b      	ldr	r3, [r3, #20]
 80040be:	607b      	str	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:556
	if (sr1 & I2C_SR1_SB){
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	f003 0301 	and.w	r3, r3, #1
 80040c6:	2b00      	cmp	r3, #0
 80040c8:	d00d      	beq.n	80040e6 <Hardware::i2cEvent()+0x36>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:557
		i2c->instance->DR = Hardware::i2c->slaveAdr << 1;
 80040ca:	4b28      	ldr	r3, [pc, #160]	; (800416c <Hardware::i2cEvent()+0xbc>)
 80040cc:	681b      	ldr	r3, [r3, #0]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	4a26      	ldr	r2, [pc, #152]	; (800416c <Hardware::i2cEvent()+0xbc>)
 80040d2:	6812      	ldr	r2, [r2, #0]
 80040d4:	8a92      	ldrh	r2, [r2, #20]
 80040d6:	b292      	uxth	r2, r2
 80040d8:	0052      	lsls	r2, r2, #1
 80040da:	611a      	str	r2, [r3, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:558
		i2c->state = I2CSTATE::ADR;
 80040dc:	4b23      	ldr	r3, [pc, #140]	; (800416c <Hardware::i2cEvent()+0xbc>)
 80040de:	681b      	ldr	r3, [r3, #0]
 80040e0:	2202      	movs	r2, #2
 80040e2:	759a      	strb	r2, [r3, #22]
 80040e4:	e03f      	b.n	8004166 <Hardware::i2cEvent()+0xb6>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:559
	}else if (sr1 & I2C_SR1_ADDR){
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	f003 0302 	and.w	r3, r3, #2
 80040ec:	2b00      	cmp	r3, #0
 80040ee:	d009      	beq.n	8004104 <Hardware::i2cEvent()+0x54>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:560
		uint32_t sr2 = i2c->instance->SR2;
 80040f0:	4b1e      	ldr	r3, [pc, #120]	; (800416c <Hardware::i2cEvent()+0xbc>)
 80040f2:	681b      	ldr	r3, [r3, #0]
 80040f4:	681b      	ldr	r3, [r3, #0]
 80040f6:	699b      	ldr	r3, [r3, #24]
 80040f8:	603b      	str	r3, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:562
		(void)(sr2 == sr2);		//		UNUSED(sr2);
		i2c->state = I2CSTATE::DATA;
 80040fa:	4b1c      	ldr	r3, [pc, #112]	; (800416c <Hardware::i2cEvent()+0xbc>)
 80040fc:	681b      	ldr	r3, [r3, #0]
 80040fe:	2203      	movs	r2, #3
 8004100:	759a      	strb	r2, [r3, #22]
 8004102:	e030      	b.n	8004166 <Hardware::i2cEvent()+0xb6>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:563
	}else if (sr1 & (I2C_SR1_TXE | I2C_SR1_BTF)){
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	f003 0384 	and.w	r3, r3, #132	; 0x84
 800410a:	2b00      	cmp	r3, #0
 800410c:	d027      	beq.n	800415e <Hardware::i2cEvent()+0xae>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:564
		if (i2cFrame.isNotEmpty()){
 800410e:	4818      	ldr	r0, [pc, #96]	; (8004170 <Hardware::i2cEvent()+0xc0>)
 8004110:	f7ff fb4a 	bl	80037a8 <Fifo::isNotEmpty()>
 8004114:	4603      	mov	r3, r0
 8004116:	2b00      	cmp	r3, #0
 8004118:	d00c      	beq.n	8004134 <Hardware::i2cEvent()+0x84>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:565
			i2c->instance->DR = i2cFrame.get();
 800411a:	4b14      	ldr	r3, [pc, #80]	; (800416c <Hardware::i2cEvent()+0xbc>)
 800411c:	681b      	ldr	r3, [r3, #0]
 800411e:	681c      	ldr	r4, [r3, #0]
 8004120:	4813      	ldr	r0, [pc, #76]	; (8004170 <Hardware::i2cEvent()+0xc0>)
 8004122:	f7fc fadb 	bl	80006dc <Fifo::get()>
 8004126:	4603      	mov	r3, r0
 8004128:	6123      	str	r3, [r4, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:566
			i2c->state = I2CSTATE::DATA;
 800412a:	4b10      	ldr	r3, [pc, #64]	; (800416c <Hardware::i2cEvent()+0xbc>)
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	2203      	movs	r2, #3
 8004130:	759a      	strb	r2, [r3, #22]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:571
		}else{
			i2c->instance->CR1 |= I2C_CR1_STOP;
			//i2c->state = I2CSTATE::STOP;
			i2c->state = I2CSTATE::IDLE;
			i2c->timeStamp = QuickTask::getCounter();
 8004132:	e018      	b.n	8004166 <Hardware::i2cEvent()+0xb6>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:568
			i2c->instance->CR1 |= I2C_CR1_STOP;
 8004134:	4b0d      	ldr	r3, [pc, #52]	; (800416c <Hardware::i2cEvent()+0xbc>)
 8004136:	681b      	ldr	r3, [r3, #0]
 8004138:	681b      	ldr	r3, [r3, #0]
 800413a:	4a0c      	ldr	r2, [pc, #48]	; (800416c <Hardware::i2cEvent()+0xbc>)
 800413c:	6812      	ldr	r2, [r2, #0]
 800413e:	6812      	ldr	r2, [r2, #0]
 8004140:	6812      	ldr	r2, [r2, #0]
 8004142:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004146:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:570
			i2c->state = I2CSTATE::IDLE;
 8004148:	4b08      	ldr	r3, [pc, #32]	; (800416c <Hardware::i2cEvent()+0xbc>)
 800414a:	681b      	ldr	r3, [r3, #0]
 800414c:	2200      	movs	r2, #0
 800414e:	759a      	strb	r2, [r3, #22]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:571
			i2c->timeStamp = QuickTask::getCounter();
 8004150:	4b06      	ldr	r3, [pc, #24]	; (800416c <Hardware::i2cEvent()+0xbc>)
 8004152:	681c      	ldr	r4, [r3, #0]
 8004154:	f7ff fcb6 	bl	8003ac4 <QuickTask::getCounter()>
 8004158:	4603      	mov	r3, r0
 800415a:	60e3      	str	r3, [r4, #12]
 800415c:	e003      	b.n	8004166 <Hardware::i2cEvent()+0xb6>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:574
		}
	}else{
		i2c->state = I2CSTATE::IDLE;
 800415e:	4b03      	ldr	r3, [pc, #12]	; (800416c <Hardware::i2cEvent()+0xbc>)
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	2200      	movs	r2, #0
 8004164:	759a      	strb	r2, [r3, #22]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:577
	}

}
 8004166:	370c      	adds	r7, #12
 8004168:	46bd      	mov	sp, r7
 800416a:	bd90      	pop	{r4, r7, pc}
 800416c:	2000000c 	.word	0x2000000c
 8004170:	20000250 	.word	0x20000250

08004174 <Hardware::i2cError()>:
i2cError():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:579

void Hardware::i2cError(){
 8004174:	b590      	push	{r4, r7, lr}
 8004176:	b083      	sub	sp, #12
 8004178:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:581
	static uint32_t err = 0;
	err++;
 800417a:	4b10      	ldr	r3, [pc, #64]	; (80041bc <Hardware::i2cError()+0x48>)
 800417c:	681b      	ldr	r3, [r3, #0]
 800417e:	3301      	adds	r3, #1
 8004180:	4a0e      	ldr	r2, [pc, #56]	; (80041bc <Hardware::i2cError()+0x48>)
 8004182:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:582
	uint32_t sr1 = i2c->instance->SR1;
 8004184:	4b0e      	ldr	r3, [pc, #56]	; (80041c0 <Hardware::i2cError()+0x4c>)
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	681b      	ldr	r3, [r3, #0]
 800418a:	695b      	ldr	r3, [r3, #20]
 800418c:	607b      	str	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:590
	//	if (sr1 & I2C_SR1_SMBALERT) i2c->instance->SR1 &= ~I2C_SR1_SMBALERT;
	//	if (sr1 & I2C_SR1_TIMEOUT) i2c->instance->SR1 &= ~I2C_SR1_TIMEOUT;
	//	if (sr1 & I2C_SR1_PECERR) i2c->instance->SR1 &= ~I2C_SR1_PECERR;
	//	if (sr1 & I2C_SR1_OVR) i2c->instance->SR1 &= ~I2C_SR1_OVR;

	i2c->instance->SR1 &= ~(
 800418e:	4b0c      	ldr	r3, [pc, #48]	; (80041c0 <Hardware::i2cError()+0x4c>)
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	681b      	ldr	r3, [r3, #0]
 8004194:	4a0a      	ldr	r2, [pc, #40]	; (80041c0 <Hardware::i2cError()+0x4c>)
 8004196:	6812      	ldr	r2, [r2, #0]
 8004198:	6812      	ldr	r2, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:598
			I2C_SR1_PECERR |
			I2C_SR1_OVR |
			I2C_SR1_AF |
			I2C_SR1_ARLO |
			I2C_SR1_BERR
	);
 800419a:	6952      	ldr	r2, [r2, #20]
 800419c:	f422 425f 	bic.w	r2, r2, #57088	; 0xdf00
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:590
	i2c->instance->SR1 &= ~(
 80041a0:	615a      	str	r2, [r3, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:599
	i2c->state = I2CSTATE::IDLE;
 80041a2:	4b07      	ldr	r3, [pc, #28]	; (80041c0 <Hardware::i2cError()+0x4c>)
 80041a4:	681b      	ldr	r3, [r3, #0]
 80041a6:	2200      	movs	r2, #0
 80041a8:	759a      	strb	r2, [r3, #22]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:600
	i2c->timeStamp = QuickTask::getCounter();
 80041aa:	4b05      	ldr	r3, [pc, #20]	; (80041c0 <Hardware::i2cError()+0x4c>)
 80041ac:	681c      	ldr	r4, [r3, #0]
 80041ae:	f7ff fc89 	bl	8003ac4 <QuickTask::getCounter()>
 80041b2:	4603      	mov	r3, r0
 80041b4:	60e3      	str	r3, [r4, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:601
}
 80041b6:	370c      	adds	r7, #12
 80041b8:	46bd      	mov	sp, r7
 80041ba:	bd90      	pop	{r4, r7, pc}
 80041bc:	20000320 	.word	0x20000320
 80041c0:	2000000c 	.word	0x2000000c

080041c4 <i2cGetBusyFlag()>:
i2cGetBusyFlag():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:603

bool i2cGetBusyFlag(){
 80041c4:	b480      	push	{r7}
 80041c6:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:604
	return Hardware::i2c->instance->SR2 & I2C_SR2_BUSY;
 80041c8:	4b07      	ldr	r3, [pc, #28]	; (80041e8 <i2cGetBusyFlag()+0x24>)
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	699b      	ldr	r3, [r3, #24]
 80041d0:	f003 0302 	and.w	r3, r3, #2
 80041d4:	2b00      	cmp	r3, #0
 80041d6:	bf14      	ite	ne
 80041d8:	2301      	movne	r3, #1
 80041da:	2300      	moveq	r3, #0
 80041dc:	b2db      	uxtb	r3, r3
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:605
}
 80041de:	4618      	mov	r0, r3
 80041e0:	46bd      	mov	sp, r7
 80041e2:	bc80      	pop	{r7}
 80041e4:	4770      	bx	lr
 80041e6:	bf00      	nop
 80041e8:	2000000c 	.word	0x2000000c

080041ec <Hardware::i2cTimerJob()>:
i2cTimerJob():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:608


void Hardware::i2cTimerJob(){
 80041ec:	b590      	push	{r4, r7, lr}
 80041ee:	b083      	sub	sp, #12
 80041f0:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:610

	if (QuickTask::getTimeIntervalMilis(i2c->timeStamp) < 4) return;  // 4 ms odstepu do poprzedniej transmisji/ komendy
 80041f2:	4b41      	ldr	r3, [pc, #260]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 80041f4:	681b      	ldr	r3, [r3, #0]
 80041f6:	68db      	ldr	r3, [r3, #12]
 80041f8:	4618      	mov	r0, r3
 80041fa:	f7ff fc6d 	bl	8003ad8 <QuickTask::getTimeIntervalMilis(unsigned long)>
 80041fe:	4603      	mov	r3, r0
 8004200:	2b03      	cmp	r3, #3
 8004202:	bf94      	ite	ls
 8004204:	2301      	movls	r3, #1
 8004206:	2300      	movhi	r3, #0
 8004208:	b2db      	uxtb	r3, r3
 800420a:	2b00      	cmp	r3, #0
 800420c:	d171      	bne.n	80042f2 <Hardware::i2cTimerJob()+0x106>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:621
//			i2cInit();
//		}
//		i2c->state = I2CSTATE::IDLE;
//	}

	if (i2cGetBusyFlag()) return;
 800420e:	f7ff ffd9 	bl	80041c4 <i2cGetBusyFlag()>
 8004212:	4603      	mov	r3, r0
 8004214:	2b00      	cmp	r3, #0
 8004216:	d16c      	bne.n	80042f2 <Hardware::i2cTimerJob()+0x106>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:622
	if (i2c->state != I2CSTATE::IDLE) return;
 8004218:	4b37      	ldr	r3, [pc, #220]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	7d9b      	ldrb	r3, [r3, #22]
 800421e:	b2db      	uxtb	r3, r3
 8004220:	2b00      	cmp	r3, #0
 8004222:	bf14      	ite	ne
 8004224:	2301      	movne	r3, #1
 8004226:	2300      	moveq	r3, #0
 8004228:	b2db      	uxtb	r3, r3
 800422a:	2b00      	cmp	r3, #0
 800422c:	d161      	bne.n	80042f2 <Hardware::i2cTimerJob()+0x106>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:623
	if (i2c->dataBuffer->isEmpty()) return;
 800422e:	4b32      	ldr	r3, [pc, #200]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 8004230:	681b      	ldr	r3, [r3, #0]
 8004232:	689b      	ldr	r3, [r3, #8]
 8004234:	4618      	mov	r0, r3
 8004236:	f7ff faa5 	bl	8003784 <Fifo::isEmpty()>
 800423a:	4603      	mov	r3, r0
 800423c:	2b00      	cmp	r3, #0
 800423e:	d158      	bne.n	80042f2 <Hardware::i2cTimerJob()+0x106>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:625

	while (i2c->dataBuffer->get() !=  I2C_BLOCK_START){
 8004240:	4b2d      	ldr	r3, [pc, #180]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 8004242:	681b      	ldr	r3, [r3, #0]
 8004244:	689b      	ldr	r3, [r3, #8]
 8004246:	4618      	mov	r0, r3
 8004248:	f7fc fa48 	bl	80006dc <Fifo::get()>
 800424c:	4603      	mov	r3, r0
 800424e:	2bfe      	cmp	r3, #254	; 0xfe
 8004250:	bf14      	ite	ne
 8004252:	2301      	movne	r3, #1
 8004254:	2300      	moveq	r3, #0
 8004256:	b2db      	uxtb	r3, r3
 8004258:	2b00      	cmp	r3, #0
 800425a:	d009      	beq.n	8004270 <Hardware::i2cTimerJob()+0x84>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:626
		if (i2c->dataBuffer->isEmpty()) return;
 800425c:	4b26      	ldr	r3, [pc, #152]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 800425e:	681b      	ldr	r3, [r3, #0]
 8004260:	689b      	ldr	r3, [r3, #8]
 8004262:	4618      	mov	r0, r3
 8004264:	f7ff fa8e 	bl	8003784 <Fifo::isEmpty()>
 8004268:	4603      	mov	r3, r0
 800426a:	2b00      	cmp	r3, #0
 800426c:	d141      	bne.n	80042f2 <Hardware::i2cTimerJob()+0x106>
 800426e:	e7e7      	b.n	8004240 <Hardware::i2cTimerJob()+0x54>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:628
	}
	if (i2c->dataBuffer->isEmpty()) return;
 8004270:	4b21      	ldr	r3, [pc, #132]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 8004272:	681b      	ldr	r3, [r3, #0]
 8004274:	689b      	ldr	r3, [r3, #8]
 8004276:	4618      	mov	r0, r3
 8004278:	f7ff fa84 	bl	8003784 <Fifo::isEmpty()>
 800427c:	4603      	mov	r3, r0
 800427e:	2b00      	cmp	r3, #0
 8004280:	d137      	bne.n	80042f2 <Hardware::i2cTimerJob()+0x106>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:629
	uint8_t amount = i2c->dataBuffer->get();
 8004282:	4b1d      	ldr	r3, [pc, #116]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 8004284:	681b      	ldr	r3, [r3, #0]
 8004286:	689b      	ldr	r3, [r3, #8]
 8004288:	4618      	mov	r0, r3
 800428a:	f7fc fa27 	bl	80006dc <Fifo::get()>
 800428e:	4603      	mov	r3, r0
 8004290:	71bb      	strb	r3, [r7, #6]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:630
	for (uint8_t i = 0; i < amount; i++){
 8004292:	2300      	movs	r3, #0
 8004294:	71fb      	strb	r3, [r7, #7]
 8004296:	79fa      	ldrb	r2, [r7, #7]
 8004298:	79bb      	ldrb	r3, [r7, #6]
 800429a:	429a      	cmp	r2, r3
 800429c:	da1b      	bge.n	80042d6 <Hardware::i2cTimerJob()+0xea>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:631
		if (i2c->dataBuffer->isEmpty()) return;
 800429e:	4b16      	ldr	r3, [pc, #88]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 80042a0:	681b      	ldr	r3, [r3, #0]
 80042a2:	689b      	ldr	r3, [r3, #8]
 80042a4:	4618      	mov	r0, r3
 80042a6:	f7ff fa6d 	bl	8003784 <Fifo::isEmpty()>
 80042aa:	4603      	mov	r3, r0
 80042ac:	2b00      	cmp	r3, #0
 80042ae:	d120      	bne.n	80042f2 <Hardware::i2cTimerJob()+0x106>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:632
		i2c->frameBuffer->put(i2c->dataBuffer->get());
 80042b0:	4b11      	ldr	r3, [pc, #68]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 80042b2:	681b      	ldr	r3, [r3, #0]
 80042b4:	685c      	ldr	r4, [r3, #4]
 80042b6:	4b10      	ldr	r3, [pc, #64]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 80042b8:	681b      	ldr	r3, [r3, #0]
 80042ba:	689b      	ldr	r3, [r3, #8]
 80042bc:	4618      	mov	r0, r3
 80042be:	f7fc fa0d 	bl	80006dc <Fifo::get()>
 80042c2:	4603      	mov	r3, r0
 80042c4:	b2db      	uxtb	r3, r3
 80042c6:	4619      	mov	r1, r3
 80042c8:	4620      	mov	r0, r4
 80042ca:	f7fc f9d1 	bl	8000670 <Fifo::put(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:630
	for (uint8_t i = 0; i < amount; i++){
 80042ce:	79fb      	ldrb	r3, [r7, #7]
 80042d0:	3301      	adds	r3, #1
 80042d2:	71fb      	strb	r3, [r7, #7]
 80042d4:	e7df      	b.n	8004296 <Hardware::i2cTimerJob()+0xaa>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:634
	}
	i2c->state = I2CSTATE::START;
 80042d6:	4b08      	ldr	r3, [pc, #32]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 80042d8:	681b      	ldr	r3, [r3, #0]
 80042da:	2201      	movs	r2, #1
 80042dc:	759a      	strb	r2, [r3, #22]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:635
	i2c->instance->CR1 |= I2C_CR1_START;
 80042de:	4b06      	ldr	r3, [pc, #24]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	681b      	ldr	r3, [r3, #0]
 80042e4:	4a04      	ldr	r2, [pc, #16]	; (80042f8 <Hardware::i2cTimerJob()+0x10c>)
 80042e6:	6812      	ldr	r2, [r2, #0]
 80042e8:	6812      	ldr	r2, [r2, #0]
 80042ea:	6812      	ldr	r2, [r2, #0]
 80042ec:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80042f0:	601a      	str	r2, [r3, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:636
}
 80042f2:	370c      	adds	r7, #12
 80042f4:	46bd      	mov	sp, r7
 80042f6:	bd90      	pop	{r4, r7, pc}
 80042f8:	2000000c 	.word	0x2000000c

080042fc <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)>:
_ZN8Hardware17i2cMasterTransmitEtPht():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:639


bool Hardware::i2cMasterTransmit(uint16_t slaveAdres, uint8_t * buffer, uint16_t amount){
 80042fc:	b580      	push	{r7, lr}
 80042fe:	b084      	sub	sp, #16
 8004300:	af00      	add	r7, sp, #0
 8004302:	4603      	mov	r3, r0
 8004304:	6039      	str	r1, [r7, #0]
 8004306:	80fb      	strh	r3, [r7, #6]
 8004308:	4613      	mov	r3, r2
 800430a:	80bb      	strh	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:640
	if ((i2c->state == I2CSTATE::IDLE)&&(i2c->dataBuffer->isNotEmpty())){
 800430c:	4b32      	ldr	r3, [pc, #200]	; (80043d8 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xdc>)
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	7d9b      	ldrb	r3, [r3, #22]
 8004312:	b2db      	uxtb	r3, r3
 8004314:	2b00      	cmp	r3, #0
 8004316:	d10a      	bne.n	800432e <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0x32>
 8004318:	4b2f      	ldr	r3, [pc, #188]	; (80043d8 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xdc>)
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	689b      	ldr	r3, [r3, #8]
 800431e:	4618      	mov	r0, r3
 8004320:	f7ff fa42 	bl	80037a8 <Fifo::isNotEmpty()>
 8004324:	4603      	mov	r3, r0
 8004326:	2b00      	cmp	r3, #0
 8004328:	d001      	beq.n	800432e <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0x32>
 800432a:	2301      	movs	r3, #1
 800432c:	e000      	b.n	8004330 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0x34>
 800432e:	2300      	movs	r3, #0
 8004330:	2b00      	cmp	r3, #0
 8004332:	d001      	beq.n	8004338 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0x3c>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:641
		i2cTimerJob();
 8004334:	f7ff ff5a 	bl	80041ec <Hardware::i2cTimerJob()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:643
	}
	i2c->slaveAdr = slaveAdres;
 8004338:	4b27      	ldr	r3, [pc, #156]	; (80043d8 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xdc>)
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	88fa      	ldrh	r2, [r7, #6]
 800433e:	829a      	strh	r2, [r3, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:644
	if (i2c->dataBuffer->isFull()) return false;
 8004340:	4b25      	ldr	r3, [pc, #148]	; (80043d8 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xdc>)
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	689b      	ldr	r3, [r3, #8]
 8004346:	4618      	mov	r0, r3
 8004348:	f7fc f9f2 	bl	8000730 <Fifo::isFull()>
 800434c:	4603      	mov	r3, r0
 800434e:	2b00      	cmp	r3, #0
 8004350:	d001      	beq.n	8004356 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0x5a>
 8004352:	2300      	movs	r3, #0
 8004354:	e03c      	b.n	80043d0 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xd4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:645
	i2c->dataBuffer->put(I2C_BLOCK_START);
 8004356:	4b20      	ldr	r3, [pc, #128]	; (80043d8 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xdc>)
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	689b      	ldr	r3, [r3, #8]
 800435c:	21fe      	movs	r1, #254	; 0xfe
 800435e:	4618      	mov	r0, r3
 8004360:	f7fc f986 	bl	8000670 <Fifo::put(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:646
	i2c->dataBuffer->put(amount);
 8004364:	4b1c      	ldr	r3, [pc, #112]	; (80043d8 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xdc>)
 8004366:	681b      	ldr	r3, [r3, #0]
 8004368:	689b      	ldr	r3, [r3, #8]
 800436a:	88ba      	ldrh	r2, [r7, #4]
 800436c:	b2d2      	uxtb	r2, r2
 800436e:	4611      	mov	r1, r2
 8004370:	4618      	mov	r0, r3
 8004372:	f7fc f97d 	bl	8000670 <Fifo::put(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:647
	for (uint32_t i = 0; i < amount; i++){
 8004376:	2300      	movs	r3, #0
 8004378:	60fb      	str	r3, [r7, #12]
 800437a:	88ba      	ldrh	r2, [r7, #4]
 800437c:	68fb      	ldr	r3, [r7, #12]
 800437e:	429a      	cmp	r2, r3
 8004380:	d918      	bls.n	80043b4 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xb8>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:648
		if (i2c->dataBuffer->isFull()) return false;
 8004382:	4b15      	ldr	r3, [pc, #84]	; (80043d8 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xdc>)
 8004384:	681b      	ldr	r3, [r3, #0]
 8004386:	689b      	ldr	r3, [r3, #8]
 8004388:	4618      	mov	r0, r3
 800438a:	f7fc f9d1 	bl	8000730 <Fifo::isFull()>
 800438e:	4603      	mov	r3, r0
 8004390:	2b00      	cmp	r3, #0
 8004392:	d001      	beq.n	8004398 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0x9c>
 8004394:	2300      	movs	r3, #0
 8004396:	e01b      	b.n	80043d0 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xd4>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:649
		i2c->dataBuffer->put(buffer[i]);
 8004398:	4b0f      	ldr	r3, [pc, #60]	; (80043d8 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xdc>)
 800439a:	681b      	ldr	r3, [r3, #0]
 800439c:	6898      	ldr	r0, [r3, #8]
 800439e:	683a      	ldr	r2, [r7, #0]
 80043a0:	68fb      	ldr	r3, [r7, #12]
 80043a2:	4413      	add	r3, r2
 80043a4:	781b      	ldrb	r3, [r3, #0]
 80043a6:	4619      	mov	r1, r3
 80043a8:	f7fc f962 	bl	8000670 <Fifo::put(unsigned char)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:647
	for (uint32_t i = 0; i < amount; i++){
 80043ac:	68fb      	ldr	r3, [r7, #12]
 80043ae:	3301      	adds	r3, #1
 80043b0:	60fb      	str	r3, [r7, #12]
 80043b2:	e7e2      	b.n	800437a <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0x7e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:651
	}
	if (i2c->state == I2CSTATE::IDLE){
 80043b4:	4b08      	ldr	r3, [pc, #32]	; (80043d8 <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xdc>)
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	7d9b      	ldrb	r3, [r3, #22]
 80043ba:	b2db      	uxtb	r3, r3
 80043bc:	2b00      	cmp	r3, #0
 80043be:	bf0c      	ite	eq
 80043c0:	2301      	moveq	r3, #1
 80043c2:	2300      	movne	r3, #0
 80043c4:	b2db      	uxtb	r3, r3
 80043c6:	2b00      	cmp	r3, #0
 80043c8:	d001      	beq.n	80043ce <Hardware::i2cMasterTransmit(unsigned short, unsigned char*, unsigned short)+0xd2>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:652
		i2cTimerJob();
 80043ca:	f7ff ff0f 	bl	80041ec <Hardware::i2cTimerJob()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:654
	}
	return true;
 80043ce:	2301      	movs	r3, #1
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:655
}
 80043d0:	4618      	mov	r0, r3
 80043d2:	3710      	adds	r7, #16
 80043d4:	46bd      	mov	sp, r7
 80043d6:	bd80      	pop	{r7, pc}
 80043d8:	2000000c 	.word	0x2000000c

080043dc <DMA1_Stream0_IRQHandler>:
DMA1_Stream0_IRQHandler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:662
bool Hardware::i2cMasterTransmit(uint16_t slaveAdres, uint8_t * buffer, uint16_t amount, uint32_t timeout)
{
	//return (HAL_StatusTypeDef::HAL_OK == HAL_I2C_Master_Transmit(i2c, slaveAdres << 1, buffer, amount, timeout));
}

void DMA1_Stream0_IRQHandler(void){
 80043dc:	4668      	mov	r0, sp
 80043de:	f020 0107 	bic.w	r1, r0, #7
 80043e2:	468d      	mov	sp, r1
 80043e4:	b481      	push	{r0, r7}
 80043e6:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:664
	static volatile uint32_t dmairq = 1;
	dmairq++;
 80043e8:	4b04      	ldr	r3, [pc, #16]	; (80043fc <DMA1_Stream0_IRQHandler+0x20>)
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	3301      	adds	r3, #1
 80043ee:	4a03      	ldr	r2, [pc, #12]	; (80043fc <DMA1_Stream0_IRQHandler+0x20>)
 80043f0:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:665
}
 80043f2:	46bd      	mov	sp, r7
 80043f4:	bc81      	pop	{r0, r7}
 80043f6:	4685      	mov	sp, r0
 80043f8:	4770      	bx	lr
 80043fa:	bf00      	nop
 80043fc:	20000010 	.word	0x20000010

08004400 <ADC_IRQHandler>:
ADC_IRQHandler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:667

void ADC_IRQHandler(void){
 8004400:	4668      	mov	r0, sp
 8004402:	f020 0107 	bic.w	r1, r0, #7
 8004406:	468d      	mov	sp, r1
 8004408:	b481      	push	{r0, r7}
 800440a:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:669
	static volatile uint32_t adcirq = 1;
	adcirq++;
 800440c:	4b04      	ldr	r3, [pc, #16]	; (8004420 <ADC_IRQHandler+0x20>)
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	3301      	adds	r3, #1
 8004412:	4a03      	ldr	r2, [pc, #12]	; (8004420 <ADC_IRQHandler+0x20>)
 8004414:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:670
}
 8004416:	46bd      	mov	sp, r7
 8004418:	bc81      	pop	{r0, r7}
 800441a:	4685      	mov	sp, r0
 800441c:	4770      	bx	lr
 800441e:	bf00      	nop
 8004420:	20000014 	.word	0x20000014

08004424 <I2C1_EV_IRQHandler>:
I2C1_EV_IRQHandler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:672

void I2C1_EV_IRQHandler(void){
 8004424:	4668      	mov	r0, sp
 8004426:	f020 0107 	bic.w	r1, r0, #7
 800442a:	468d      	mov	sp, r1
 800442c:	b589      	push	{r0, r3, r7, lr}
 800442e:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:674
	static volatile uint32_t i2cev = 1;
	i2cev++;
 8004430:	4b05      	ldr	r3, [pc, #20]	; (8004448 <I2C1_EV_IRQHandler+0x24>)
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	3301      	adds	r3, #1
 8004436:	4a04      	ldr	r2, [pc, #16]	; (8004448 <I2C1_EV_IRQHandler+0x24>)
 8004438:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:675
	Hardware::i2cEvent();
 800443a:	f7ff fe39 	bl	80040b0 <Hardware::i2cEvent()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:676
}
 800443e:	46bd      	mov	sp, r7
 8004440:	e8bd 4089 	ldmia.w	sp!, {r0, r3, r7, lr}
 8004444:	4685      	mov	sp, r0
 8004446:	4770      	bx	lr
 8004448:	20000018 	.word	0x20000018

0800444c <I2C1_ER_IRQHandler>:
I2C1_ER_IRQHandler():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:678

void I2C1_ER_IRQHandler(void){
 800444c:	4668      	mov	r0, sp
 800444e:	f020 0107 	bic.w	r1, r0, #7
 8004452:	468d      	mov	sp, r1
 8004454:	b589      	push	{r0, r3, r7, lr}
 8004456:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:680
	static volatile uint32_t i2cer = 1;
	i2cer++;
 8004458:	4b05      	ldr	r3, [pc, #20]	; (8004470 <I2C1_ER_IRQHandler+0x24>)
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	3301      	adds	r3, #1
 800445e:	4a04      	ldr	r2, [pc, #16]	; (8004470 <I2C1_ER_IRQHandler+0x24>)
 8004460:	6013      	str	r3, [r2, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:681
	Hardware::i2cError();
 8004462:	f7ff fe87 	bl	8004174 <Hardware::i2cError()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:682
}
 8004466:	46bd      	mov	sp, r7
 8004468:	e8bd 4089 	ldmia.w	sp!, {r0, r3, r7, lr}
 800446c:	4685      	mov	sp, r0
 800446e:	4770      	bx	lr
 8004470:	2000001c 	.word	0x2000001c

08004474 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]>:
__static_initialization_and_destruction_0():
 8004474:	b580      	push	{r7, lr}
 8004476:	b082      	sub	sp, #8
 8004478:	af00      	add	r7, sp, #0
 800447a:	6078      	str	r0, [r7, #4]
 800447c:	6039      	str	r1, [r7, #0]
 800447e:	687b      	ldr	r3, [r7, #4]
 8004480:	2b01      	cmp	r3, #1
 8004482:	d120      	bne.n	80044c6 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x52>
 8004484:	683b      	ldr	r3, [r7, #0]
 8004486:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800448a:	4293      	cmp	r3, r2
 800448c:	d11b      	bne.n	80044c6 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x52>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:457
Fifo i2cFrame = Fifo(i2cFrameBuffer, 30);
 800448e:	221e      	movs	r2, #30
 8004490:	490e      	ldr	r1, [pc, #56]	; (80044cc <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x58>)
 8004492:	480f      	ldr	r0, [pc, #60]	; (80044d0 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x5c>)
 8004494:	f7fc f8cc 	bl	8000630 <Fifo::Fifo(unsigned char*, unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:460
Fifo i2cData = Fifo(i2cDataBuffer, 200);
 8004498:	22c8      	movs	r2, #200	; 0xc8
 800449a:	490e      	ldr	r1, [pc, #56]	; (80044d4 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x60>)
 800449c:	480e      	ldr	r0, [pc, #56]	; (80044d8 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x64>)
 800449e:	f7fc f8c7 	bl	8000630 <Fifo::Fifo(unsigned char*, unsigned long)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:462
Hardware::I2Cdefs I2CdefsStr;
 80044a2:	480e      	ldr	r0, [pc, #56]	; (80044dc <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x68>)
 80044a4:	f7ff fd19 	bl	8003eda <Hardware::I2Cdefs::I2Cdefs()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:465
Gpio gpioSCL = Gpio(GPIOB,6);
 80044a8:	2206      	movs	r2, #6
 80044aa:	490d      	ldr	r1, [pc, #52]	; (80044e0 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x6c>)
 80044ac:	480d      	ldr	r0, [pc, #52]	; (80044e4 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x70>)
 80044ae:	f7ff f9a7 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:466
Gpio gpioSDA = Gpio(GPIOB,7);
 80044b2:	2207      	movs	r2, #7
 80044b4:	490a      	ldr	r1, [pc, #40]	; (80044e0 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x6c>)
 80044b6:	480c      	ldr	r0, [pc, #48]	; (80044e8 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x74>)
 80044b8:	f7ff f9a2 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:467
Gpio gpioLcdReset = Gpio(GPIOC,7);
 80044bc:	2207      	movs	r2, #7
 80044be:	490b      	ldr	r1, [pc, #44]	; (80044ec <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x78>)
 80044c0:	480b      	ldr	r0, [pc, #44]	; (80044f0 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]+0x7c>)
 80044c2:	f7ff f99d 	bl	8003800 <Gpio::Gpio(GPIO_TypeDef*, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Hardware.cpp:682
}
 80044c6:	3708      	adds	r7, #8
 80044c8:	46bd      	mov	sp, r7
 80044ca:	bd80      	pop	{r7, pc}
 80044cc:	20000230 	.word	0x20000230
 80044d0:	20000250 	.word	0x20000250
 80044d4:	20000268 	.word	0x20000268
 80044d8:	200002cc 	.word	0x200002cc
 80044dc:	200002e4 	.word	0x200002e4
 80044e0:	40020400 	.word	0x40020400
 80044e4:	200002fc 	.word	0x200002fc
 80044e8:	20000308 	.word	0x20000308
 80044ec:	40020800 	.word	0x40020800
 80044f0:	20000314 	.word	0x20000314

080044f4 <_GLOBAL__sub_I__ZN8Hardware4initEv>:
_GLOBAL__sub_I__ZN8Hardware4initEv():
 80044f4:	b580      	push	{r7, lr}
 80044f6:	af00      	add	r7, sp, #0
 80044f8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80044fc:	2001      	movs	r0, #1
 80044fe:	f7ff ffb9 	bl	8004474 <__static_initialization_and_destruction_0(int, int) [clone .lto_priv.9]>
 8004502:	bd80      	pop	{r7, pc}

08004504 <Keyboard::getFromBuffer()>:
getFromBuffer():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:46
	Key getFromBuffer(){
 8004504:	b580      	push	{r7, lr}
 8004506:	b084      	sub	sp, #16
 8004508:	af00      	add	r7, sp, #0
 800450a:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:47
		while(fifo.isNotEmpty()){
 800450c:	687b      	ldr	r3, [r7, #4]
 800450e:	3304      	adds	r3, #4
 8004510:	4618      	mov	r0, r3
 8004512:	f7ff f949 	bl	80037a8 <Fifo::isNotEmpty()>
 8004516:	4603      	mov	r3, r0
 8004518:	2b00      	cmp	r3, #0
 800451a:	d00b      	beq.n	8004534 <Keyboard::getFromBuffer()+0x30>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:48
			Key result = (Key)fifo.get();
 800451c:	687b      	ldr	r3, [r7, #4]
 800451e:	3304      	adds	r3, #4
 8004520:	4618      	mov	r0, r3
 8004522:	f7fc f8db 	bl	80006dc <Fifo::get()>
 8004526:	4603      	mov	r3, r0
 8004528:	73fb      	strb	r3, [r7, #15]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:49
			if (result != Key::NONE) return result;	// pomijac przypadkowe NONE az bedzie wlasciwy klawisz
 800452a:	7bfb      	ldrb	r3, [r7, #15]
 800452c:	2b00      	cmp	r3, #0
 800452e:	d0ed      	beq.n	800450c <Keyboard::getFromBuffer()+0x8>
 8004530:	7bfb      	ldrb	r3, [r7, #15]
 8004532:	e000      	b.n	8004536 <Keyboard::getFromBuffer()+0x32>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:51
		return Key::NONE;
 8004534:	2300      	movs	r3, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:52
	}
 8004536:	4618      	mov	r0, r3
 8004538:	3710      	adds	r7, #16
 800453a:	46bd      	mov	sp, r7
 800453c:	bd80      	pop	{r7, pc}

0800453e <Keyboard::getKey()>:
_ZN8Keyboard6getKeyEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:142
	Key getKey(){
 800453e:	b580      	push	{r7, lr}
 8004540:	b082      	sub	sp, #8
 8004542:	af00      	add	r7, sp, #0
 8004544:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:143
		return getFromBuffer();
 8004546:	6878      	ldr	r0, [r7, #4]
 8004548:	f7ff ffdc 	bl	8004504 <Keyboard::getFromBuffer()>
 800454c:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Keyboard.h:144
	}
 800454e:	4618      	mov	r0, r3
 8004550:	3708      	adds	r7, #8
 8004552:	46bd      	mov	sp, r7
 8004554:	bd80      	pop	{r7, pc}

08004556 <TextLcd::gotoXY(unsigned short, unsigned short)>:
_ZN7TextLcd6gotoXYEtt():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:37
	bool gotoXY(uint16_t rowNr, uint16_t columnNr){
 8004556:	b580      	push	{r7, lr}
 8004558:	b082      	sub	sp, #8
 800455a:	af00      	add	r7, sp, #0
 800455c:	6078      	str	r0, [r7, #4]
 800455e:	460b      	mov	r3, r1
 8004560:	807b      	strh	r3, [r7, #2]
 8004562:	4613      	mov	r3, r2
 8004564:	803b      	strh	r3, [r7, #0]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:38
		return driver->gotoXY(rowNr,columnNr);
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	887a      	ldrh	r2, [r7, #2]
 800456c:	b2d1      	uxtb	r1, r2
 800456e:	883a      	ldrh	r2, [r7, #0]
 8004570:	b2d2      	uxtb	r2, r2
 8004572:	4618      	mov	r0, r3
 8004574:	f7fc fcc9 	bl	8000f0a <ST7032I::gotoXY(unsigned char, unsigned char)>
 8004578:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:39
	}
 800457a:	4618      	mov	r0, r3
 800457c:	3708      	adds	r7, #8
 800457e:	46bd      	mov	sp, r7
 8004580:	bd80      	pop	{r7, pc}

08004582 <TextLcd::printXY(unsigned short, unsigned short, char const*)>:
_ZN7TextLcd7printXYEttPKc():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:46
	bool printXY(uint16_t rowNr, uint16_t columnNr, const char * str){
 8004582:	b580      	push	{r7, lr}
 8004584:	b084      	sub	sp, #16
 8004586:	af00      	add	r7, sp, #0
 8004588:	60f8      	str	r0, [r7, #12]
 800458a:	607b      	str	r3, [r7, #4]
 800458c:	460b      	mov	r3, r1
 800458e:	817b      	strh	r3, [r7, #10]
 8004590:	4613      	mov	r3, r2
 8004592:	813b      	strh	r3, [r7, #8]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:47
		if (!driver->gotoXY(rowNr, columnNr)) return false;
 8004594:	68fb      	ldr	r3, [r7, #12]
 8004596:	681b      	ldr	r3, [r3, #0]
 8004598:	897a      	ldrh	r2, [r7, #10]
 800459a:	b2d1      	uxtb	r1, r2
 800459c:	893a      	ldrh	r2, [r7, #8]
 800459e:	b2d2      	uxtb	r2, r2
 80045a0:	4618      	mov	r0, r3
 80045a2:	f7fc fcb2 	bl	8000f0a <ST7032I::gotoXY(unsigned char, unsigned char)>
 80045a6:	4603      	mov	r3, r0
 80045a8:	f083 0301 	eor.w	r3, r3, #1
 80045ac:	b2db      	uxtb	r3, r3
 80045ae:	2b00      	cmp	r3, #0
 80045b0:	d001      	beq.n	80045b6 <TextLcd::printXY(unsigned short, unsigned short, char const*)+0x34>
 80045b2:	2300      	movs	r3, #0
 80045b4:	e006      	b.n	80045c4 <TextLcd::printXY(unsigned short, unsigned short, char const*)+0x42>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:48
		return driver->print(str);
 80045b6:	68fb      	ldr	r3, [r7, #12]
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	6879      	ldr	r1, [r7, #4]
 80045bc:	4618      	mov	r0, r3
 80045be:	f7fc fc6a 	bl	8000e96 <ST7032I::print(char const*)>
 80045c2:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/TextLcd.h:49
	}
 80045c4:	4618      	mov	r0, r3
 80045c6:	3710      	adds	r7, #16
 80045c8:	46bd      	mov	sp, r7
 80045ca:	bd80      	pop	{r7, pc}

080045cc <Pomiar::getPomiar(Pomiar::Analogi)>:
_ZN6Pomiar9getPomiarENS_7AnalogiE():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pomiar.h:103


	/** Zwraca pomiar w miliwoltach, miliamperach, miliCelsjuszach itd.
	 *
	 */
	static int32_t getPomiar(Analogi nrAdc){
 80045cc:	b580      	push	{r7, lr}
 80045ce:	b084      	sub	sp, #16
 80045d0:	af00      	add	r7, sp, #0
 80045d2:	4603      	mov	r3, r0
 80045d4:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pomiar.h:105
		uint32_t result;
		result = getPomiarRaw(nrAdc);
 80045d6:	79fb      	ldrb	r3, [r7, #7]
 80045d8:	4618      	mov	r0, r3
 80045da:	f7fe fe55 	bl	8003288 <Pomiar::getPomiarRaw(Pomiar::Analogi)>
 80045de:	4603      	mov	r3, r0
 80045e0:	60fb      	str	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pomiar.h:106
		return result;
 80045e2:	68fb      	ldr	r3, [r7, #12]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Pomiar.h:107
	}
 80045e4:	4618      	mov	r0, r3
 80045e6:	3710      	adds	r7, #16
 80045e8:	46bd      	mov	sp, r7
 80045ea:	bd80      	pop	{r7, pc}

080045ec <Parameter::getValue(Parameter::Nazwa)>:
_ZN9Parameter8getValueENS_5NazwaE():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:67
	//		int32_t tmp = getEEpromValue(nr);
	//		if (tmp < 0) actualValue = 0;
	//		name = opis;
	//	}

	static int32_t getValue(Nazwa nazwa){
 80045ec:	b580      	push	{r7, lr}
 80045ee:	b082      	sub	sp, #8
 80045f0:	af00      	add	r7, sp, #0
 80045f2:	4603      	mov	r3, r0
 80045f4:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:68
		return getEEpromValue(uint16_t(nazwa));
 80045f6:	79fb      	ldrb	r3, [r7, #7]
 80045f8:	b29b      	uxth	r3, r3
 80045fa:	4618      	mov	r0, r3
 80045fc:	f7fe fe2e 	bl	800325c <Parameter::getEEpromValue(unsigned short)>
 8004600:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:69
	}
 8004602:	4618      	mov	r0, r3
 8004604:	3708      	adds	r7, #8
 8004606:	46bd      	mov	sp, r7
 8004608:	bd80      	pop	{r7, pc}

0800460a <Parameter::setValue(Parameter::Nazwa, unsigned short)>:
_ZN9Parameter8setValueENS_5NazwaEt():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:71

	static bool setValue(Nazwa nazwa, uint16_t newValue){
 800460a:	b580      	push	{r7, lr}
 800460c:	b082      	sub	sp, #8
 800460e:	af00      	add	r7, sp, #0
 8004610:	4603      	mov	r3, r0
 8004612:	460a      	mov	r2, r1
 8004614:	71fb      	strb	r3, [r7, #7]
 8004616:	4613      	mov	r3, r2
 8004618:	80bb      	strh	r3, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:72
		return setEEpromValue(nazwa, newValue);
 800461a:	79fb      	ldrb	r3, [r7, #7]
 800461c:	b29b      	uxth	r3, r3
 800461e:	88ba      	ldrh	r2, [r7, #4]
 8004620:	4611      	mov	r1, r2
 8004622:	4618      	mov	r0, r3
 8004624:	f7fe fdf0 	bl	8003208 <Parameter::setEEpromValue(unsigned short, unsigned short)>
 8004628:	4603      	mov	r3, r0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:73
	}
 800462a:	4618      	mov	r0, r3
 800462c:	3708      	adds	r7, #8
 800462e:	46bd      	mov	sp, r7
 8004630:	bd80      	pop	{r7, pc}
	...

08004634 <Parameter::getParamPattern(Parameter::Nazwa)>:
_ZN9Parameter15getParamPatternENS_5NazwaE():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:75

	static const char * getParamPattern(Nazwa nazwa){
 8004634:	b480      	push	{r7}
 8004636:	b083      	sub	sp, #12
 8004638:	af00      	add	r7, sp, #0
 800463a:	4603      	mov	r3, r0
 800463c:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:76
		switch(nazwa){
 800463e:	79fb      	ldrb	r3, [r7, #7]
 8004640:	3b02      	subs	r3, #2
 8004642:	2b0d      	cmp	r3, #13
 8004644:	d82c      	bhi.n	80046a0 <Parameter::getParamPattern(Parameter::Nazwa)+0x6c>
 8004646:	a201      	add	r2, pc, #4	; (adr r2, 800464c <Parameter::getParamPattern(Parameter::Nazwa)+0x18>)
 8004648:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800464c:	08004689 	.word	0x08004689
 8004650:	08004691 	.word	0x08004691
 8004654:	08004695 	.word	0x08004695
 8004658:	08004685 	.word	0x08004685
 800465c:	0800468d 	.word	0x0800468d
 8004660:	08004685 	.word	0x08004685
 8004664:	08004685 	.word	0x08004685
 8004668:	0800468d 	.word	0x0800468d
 800466c:	08004685 	.word	0x08004685
 8004670:	08004699 	.word	0x08004699
 8004674:	0800469d 	.word	0x0800469d
 8004678:	08004695 	.word	0x08004695
 800467c:	08004695 	.word	0x08004695
 8004680:	08004691 	.word	0x08004691
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:82
		case Parameter::Nazwa::PODAJNIK_PRACA:
		case Parameter::Nazwa::PODAJNIK_OPOZNIENIE:
		case Parameter::Nazwa::PODTRZYMANIE_PRACA:
		case Parameter::Nazwa::OPOZNIENIE_DMUCHAWY:
			//------>1234567890123456<
			return	"   00.0 sek.    ";
 8004684:	4b09      	ldr	r3, [pc, #36]	; (80046ac <Parameter::getParamPattern(Parameter::Nazwa)+0x78>)
 8004686:	e00c      	b.n	80046a2 <Parameter::getParamPattern(Parameter::Nazwa)+0x6e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:86

		case Parameter::Nazwa::TEMPERATURA_CO:
			//------>1234567890123456<
			return	"T. ustaw:00.0 oC";
 8004688:	4b09      	ldr	r3, [pc, #36]	; (80046b0 <Parameter::getParamPattern(Parameter::Nazwa)+0x7c>)
 800468a:	e00a      	b.n	80046a2 <Parameter::getParamPattern(Parameter::Nazwa)+0x6e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:91

		case Parameter::Nazwa::PODAJNIK_PRZERWA:
		case Parameter::Nazwa::PODTRZYMANIE_PRZERWA:
			//------>1234567890123456<
			return  " 00 min. 60 sek.";
 800468c:	4b09      	ldr	r3, [pc, #36]	; (80046b4 <Parameter::getParamPattern(Parameter::Nazwa)+0x80>)
 800468e:	e008      	b.n	80046a2 <Parameter::getParamPattern(Parameter::Nazwa)+0x6e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:96

		case Parameter::Nazwa::HISTEREZA_CO_TEMP:
		case Parameter::Nazwa::HISTEREZA_CWU_TEMP:
			//------>1234567890123456<
			return	"temp: 00.0 st.C ";
 8004690:	4b09      	ldr	r3, [pc, #36]	; (80046b8 <Parameter::getParamPattern(Parameter::Nazwa)+0x84>)
 8004692:	e006      	b.n	80046a2 <Parameter::getParamPattern(Parameter::Nazwa)+0x6e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:102

		case Parameter::Nazwa::POMPA_CO_TEMP_ZALACZ:
		case Parameter::Nazwa::POMPA_CWU_TEMP_ZALACZ:
		case Parameter::Nazwa::ALARM_TEMP_PODAJNIKA:
			//------>1234567890123456<
			return  "wlacz >00.0 oC ";
 8004694:	4b09      	ldr	r3, [pc, #36]	; (80046bc <Parameter::getParamPattern(Parameter::Nazwa)+0x88>)
 8004696:	e004      	b.n	80046a2 <Parameter::getParamPattern(Parameter::Nazwa)+0x6e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:106

		case Parameter::Nazwa::DMUCHAWA_MOC:
			//------>1234567890123456<
			return  "     = 00 =     ";
 8004698:	4b09      	ldr	r3, [pc, #36]	; (80046c0 <Parameter::getParamPattern(Parameter::Nazwa)+0x8c>)
 800469a:	e002      	b.n	80046a2 <Parameter::getParamPattern(Parameter::Nazwa)+0x6e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:110

		case Parameter::Nazwa::ALARM_SPADKU_TEMP:
			//------>1234567890123456<
			return  "mniej od 00.0 oC";
 800469c:	4b09      	ldr	r3, [pc, #36]	; (80046c4 <Parameter::getParamPattern(Parameter::Nazwa)+0x90>)
 800469e:	e000      	b.n	80046a2 <Parameter::getParamPattern(Parameter::Nazwa)+0x6e>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:119
		case Parameter::Nazwa::USTAWIENIA_FABRYCZNE:
		case Parameter::Nazwa::MODE_AUTO_MANUAL:
		case Parameter::Nazwa::NONE:
		case Parameter::Nazwa::LAST_PARAMETER:
		default:
			return "??";
 80046a0:	4b09      	ldr	r3, [pc, #36]	; (80046c8 <Parameter::getParamPattern(Parameter::Nazwa)+0x94>)
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:121
		}
	}
 80046a2:	4618      	mov	r0, r3
 80046a4:	370c      	adds	r7, #12
 80046a6:	46bd      	mov	sp, r7
 80046a8:	bc80      	pop	{r7}
 80046aa:	4770      	bx	lr
 80046ac:	08004d1c 	.word	0x08004d1c
 80046b0:	08004d30 	.word	0x08004d30
 80046b4:	08004d44 	.word	0x08004d44
 80046b8:	08004d58 	.word	0x08004d58
 80046bc:	08004d6c 	.word	0x08004d6c
 80046c0:	08004d7c 	.word	0x08004d7c
 80046c4:	08004d90 	.word	0x08004d90
 80046c8:	08004da4 	.word	0x08004da4

080046cc <Parameter::getDefaultValue(Parameter::Nazwa)>:
_ZN9Parameter15getDefaultValueENS_5NazwaE():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:125

	static bool initEepromMemory();

	static uint16_t getDefaultValue(Nazwa nazwa){
 80046cc:	b480      	push	{r7}
 80046ce:	b083      	sub	sp, #12
 80046d0:	af00      	add	r7, sp, #0
 80046d2:	4603      	mov	r3, r0
 80046d4:	71fb      	strb	r3, [r7, #7]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:126
		switch(nazwa){
 80046d6:	79fb      	ldrb	r3, [r7, #7]
 80046d8:	3b01      	subs	r3, #1
 80046da:	2b10      	cmp	r3, #16
 80046dc:	d84d      	bhi.n	800477a <Parameter::getDefaultValue(Parameter::Nazwa)+0xae>
 80046de:	a201      	add	r2, pc, #4	; (adr r2, 80046e4 <Parameter::getDefaultValue(Parameter::Nazwa)+0x18>)
 80046e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80046e4:	08004729 	.word	0x08004729
 80046e8:	0800472d 	.word	0x0800472d
 80046ec:	08004733 	.word	0x08004733
 80046f0:	08004737 	.word	0x08004737
 80046f4:	0800473d 	.word	0x0800473d
 80046f8:	08004741 	.word	0x08004741
 80046fc:	08004747 	.word	0x08004747
 8004700:	0800474b 	.word	0x0800474b
 8004704:	0800474f 	.word	0x0800474f
 8004708:	08004755 	.word	0x08004755
 800470c:	08004759 	.word	0x08004759
 8004710:	0800475d 	.word	0x0800475d
 8004714:	08004763 	.word	0x08004763
 8004718:	08004769 	.word	0x08004769
 800471c:	0800476f 	.word	0x0800476f
 8004720:	08004773 	.word	0x08004773
 8004724:	08004777 	.word	0x08004777
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:127
		case Nazwa::MODE_AUTO_MANUAL:		return uint16_t(true);
 8004728:	2301      	movs	r3, #1
 800472a:	e027      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:128
		case Nazwa::TEMPERATURA_CO: 		return 600u;
 800472c:	f44f 7316 	mov.w	r3, #600	; 0x258
 8004730:	e024      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:129
		case Nazwa::HISTEREZA_CO_TEMP:		return 20u;
 8004732:	2314      	movs	r3, #20
 8004734:	e022      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:130
		case Nazwa::POMPA_CO_TEMP_ZALACZ:	return 450u;
 8004736:	f44f 73e1 	mov.w	r3, #450	; 0x1c2
 800473a:	e01f      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:131
		case Nazwa::PODAJNIK_PRACA: 		return 50u;
 800473c:	2332      	movs	r3, #50	; 0x32
 800473e:	e01d      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:132
		case Nazwa::PODAJNIK_PRZERWA:		return 60*5;
 8004740:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8004744:	e01a      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:133
		case Nazwa::PODAJNIK_OPOZNIENIE: 	return 50u;
 8004746:	2332      	movs	r3, #50	; 0x32
 8004748:	e018      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:134
		case Nazwa::PODTRZYMANIE_PRACA: 	return 20u;
 800474a:	2314      	movs	r3, #20
 800474c:	e016      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:135
		case Nazwa::PODTRZYMANIE_PRZERWA:	return 60*6;
 800474e:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8004752:	e013      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:136
		case Nazwa::OPOZNIENIE_DMUCHAWY:	return 20u;
 8004754:	2314      	movs	r3, #20
 8004756:	e011      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:137
		case Nazwa::DMUCHAWA_MOC: 			return 6u;
 8004758:	2306      	movs	r3, #6
 800475a:	e00f      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:138
		case Nazwa::ALARM_SPADKU_TEMP:		return 450u;
 800475c:	f44f 73e1 	mov.w	r3, #450	; 0x1c2
 8004760:	e00c      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:139
		case Nazwa::ALARM_TEMP_PODAJNIKA:	return 850u;
 8004762:	f240 3352 	movw	r3, #850	; 0x352
 8004766:	e009      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:140
		case Nazwa::POMPA_CWU_TEMP_ZALACZ:	return 450u;
 8004768:	f44f 73e1 	mov.w	r3, #450	; 0x1c2
 800476c:	e006      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:141
		case Nazwa::HISTEREZA_CWU_TEMP:		return 20u;
 800476e:	2314      	movs	r3, #20
 8004770:	e004      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:142
		case Nazwa::TRYB_LETNI:				return uint16_t(false);
 8004772:	2300      	movs	r3, #0
 8004774:	e002      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:143
		case Nazwa::AKTYWNA_CWU:			return uint16_t(false);
 8004776:	2300      	movs	r3, #0
 8004778:	e000      	b.n	800477c <Parameter::getDefaultValue(Parameter::Nazwa)+0xb0>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:150
		case Nazwa::USTAWIENIA_FABRYCZNE:
		case Nazwa::LAST_PARAMETER:
		default:
			break;
		}
		return 100u;
 800477a:	2364      	movs	r3, #100	; 0x64
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:151
	}
 800477c:	4618      	mov	r0, r3
 800477e:	370c      	adds	r7, #12
 8004780:	46bd      	mov	sp, r7
 8004782:	bc80      	pop	{r7}
 8004784:	4770      	bx	lr
 8004786:	bf00      	nop

08004788 <Parameter::setDefaultValues()>:
_ZN9Parameter16setDefaultValuesEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:154


	static bool setDefaultValues(){
 8004788:	b580      	push	{r7, lr}
 800478a:	b082      	sub	sp, #8
 800478c:	af00      	add	r7, sp, #0
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:155
		for (uint16_t i = 1; i < uint16_t(Nazwa::LAST_PARAMETER); i++){
 800478e:	2301      	movs	r3, #1
 8004790:	80fb      	strh	r3, [r7, #6]
 8004792:	88fb      	ldrh	r3, [r7, #6]
 8004794:	2b12      	cmp	r3, #18
 8004796:	dc10      	bgt.n	80047ba <Parameter::setDefaultValues()+0x32>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:156
			Nazwa param = Nazwa(i);
 8004798:	88fb      	ldrh	r3, [r7, #6]
 800479a:	717b      	strb	r3, [r7, #5]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:157
			setValue(param, getDefaultValue(param) );
 800479c:	797b      	ldrb	r3, [r7, #5]
 800479e:	4618      	mov	r0, r3
 80047a0:	f7ff ff94 	bl	80046cc <Parameter::getDefaultValue(Parameter::Nazwa)>
 80047a4:	4603      	mov	r3, r0
 80047a6:	461a      	mov	r2, r3
 80047a8:	797b      	ldrb	r3, [r7, #5]
 80047aa:	4611      	mov	r1, r2
 80047ac:	4618      	mov	r0, r3
 80047ae:	f7ff ff2c 	bl	800460a <Parameter::setValue(Parameter::Nazwa, unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:155
		for (uint16_t i = 1; i < uint16_t(Nazwa::LAST_PARAMETER); i++){
 80047b2:	88fb      	ldrh	r3, [r7, #6]
 80047b4:	3301      	adds	r3, #1
 80047b6:	80fb      	strh	r3, [r7, #6]
 80047b8:	e7eb      	b.n	8004792 <Parameter::setDefaultValues()+0xa>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Parameter.h:159
		}
	}
 80047ba:	4618      	mov	r0, r3
 80047bc:	3708      	adds	r7, #8
 80047be:	46bd      	mov	sp, r7
 80047c0:	bd80      	pop	{r7, pc}

080047c2 <Praca::setTrybLetni(Parameter::SEZON)>:
_ZN5Praca12setTrybLetniEN9Parameter5SEZONE():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:81
	void setTrybLetni(Parameter::SEZON nowySezon){ sezon = nowySezon; }
 80047c2:	b480      	push	{r7}
 80047c4:	b083      	sub	sp, #12
 80047c6:	af00      	add	r7, sp, #0
 80047c8:	6078      	str	r0, [r7, #4]
 80047ca:	460b      	mov	r3, r1
 80047cc:	70fb      	strb	r3, [r7, #3]
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	78fa      	ldrb	r2, [r7, #3]
 80047d2:	741a      	strb	r2, [r3, #16]
 80047d4:	370c      	adds	r7, #12
 80047d6:	46bd      	mov	sp, r7
 80047d8:	bc80      	pop	{r7}
 80047da:	4770      	bx	lr

080047dc <Praca::setManualMode(bool)>:
_ZN5Praca13setManualModeEb():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:83
	void setManualMode(bool setManual){	mode = setManual ? Mode::MANUAL : Mode::START;	}
 80047dc:	b480      	push	{r7}
 80047de:	b083      	sub	sp, #12
 80047e0:	af00      	add	r7, sp, #0
 80047e2:	6078      	str	r0, [r7, #4]
 80047e4:	460b      	mov	r3, r1
 80047e6:	70fb      	strb	r3, [r7, #3]
 80047e8:	78fb      	ldrb	r3, [r7, #3]
 80047ea:	2b00      	cmp	r3, #0
 80047ec:	d001      	beq.n	80047f2 <Praca::setManualMode(bool)+0x16>
 80047ee:	2204      	movs	r2, #4
 80047f0:	e000      	b.n	80047f4 <Praca::setManualMode(bool)+0x18>
 80047f2:	2200      	movs	r2, #0
 80047f4:	687b      	ldr	r3, [r7, #4]
 80047f6:	701a      	strb	r2, [r3, #0]
 80047f8:	370c      	adds	r7, #12
 80047fa:	46bd      	mov	sp, r7
 80047fc:	bc80      	pop	{r7}
 80047fe:	4770      	bx	lr

08004800 <Praca::isInManualMode()>:
_ZN5Praca14isInManualModeEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Praca.h:84
	bool isInManualMode(){ return mode == Mode::MANUAL; }
 8004800:	b480      	push	{r7}
 8004802:	b083      	sub	sp, #12
 8004804:	af00      	add	r7, sp, #0
 8004806:	6078      	str	r0, [r7, #4]
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	781b      	ldrb	r3, [r3, #0]
 800480c:	2b04      	cmp	r3, #4
 800480e:	bf0c      	ite	eq
 8004810:	2301      	moveq	r3, #1
 8004812:	2300      	movne	r3, #0
 8004814:	b2db      	uxtb	r3, r3
 8004816:	4618      	mov	r0, r3
 8004818:	370c      	adds	r7, #12
 800481a:	46bd      	mov	sp, r7
 800481c:	bc80      	pop	{r7}
 800481e:	4770      	bx	lr

08004820 <Sterownik::getTempCO()>:
_ZN9Sterownik9getTempCOEv():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Sterownik.h:78
	int32_t getTempCO(){return Pomiar::getPomiar(Pomiar::Analogi::TEMP_CO); }
 8004820:	b580      	push	{r7, lr}
 8004822:	b082      	sub	sp, #8
 8004824:	af00      	add	r7, sp, #0
 8004826:	6078      	str	r0, [r7, #4]
 8004828:	2002      	movs	r0, #2
 800482a:	f7ff fecf 	bl	80045cc <Pomiar::getPomiar(Pomiar::Analogi)>
 800482e:	4603      	mov	r3, r0
 8004830:	4618      	mov	r0, r3
 8004832:	3708      	adds	r7, #8
 8004834:	46bd      	mov	sp, r7
 8004836:	bd80      	pop	{r7, pc}

08004838 <Menu::goToEkran(Menu::EKRAN)>:
_ZN4Menu9goToEkranENS_5EKRANE():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:76


	void goToEkran(EKRAN nowyEkran){
 8004838:	b580      	push	{r7, lr}
 800483a:	b082      	sub	sp, #8
 800483c:	af00      	add	r7, sp, #0
 800483e:	6078      	str	r0, [r7, #4]
 8004840:	460b      	mov	r3, r1
 8004842:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:77
		ekran = nowyEkran;
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	78fa      	ldrb	r2, [r7, #3]
 8004848:	741a      	strb	r2, [r3, #16]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:78
		editMode = false;
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	2200      	movs	r2, #0
 800484e:	751a      	strb	r2, [r3, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:80

		switch(ekran){
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	7c1b      	ldrb	r3, [r3, #16]
 8004854:	2b14      	cmp	r3, #20
 8004856:	f200 8081 	bhi.w	800495c <Menu::goToEkran(Menu::EKRAN)+0x124>
 800485a:	a201      	add	r2, pc, #4	; (adr r2, 8004860 <Menu::goToEkran(Menu::EKRAN)+0x28>)
 800485c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004860:	080048b5 	.word	0x080048b5
 8004864:	080048bd 	.word	0x080048bd
 8004868:	080048c5 	.word	0x080048c5
 800486c:	080048cd 	.word	0x080048cd
 8004870:	080048d5 	.word	0x080048d5
 8004874:	080048dd 	.word	0x080048dd
 8004878:	080048e5 	.word	0x080048e5
 800487c:	080048ed 	.word	0x080048ed
 8004880:	080048f5 	.word	0x080048f5
 8004884:	080048fd 	.word	0x080048fd
 8004888:	08004905 	.word	0x08004905
 800488c:	0800490d 	.word	0x0800490d
 8004890:	08004915 	.word	0x08004915
 8004894:	0800491d 	.word	0x0800491d
 8004898:	08004925 	.word	0x08004925
 800489c:	0800492d 	.word	0x0800492d
 80048a0:	08004935 	.word	0x08004935
 80048a4:	0800493d 	.word	0x0800493d
 80048a8:	08004945 	.word	0x08004945
 80048ac:	0800494d 	.word	0x0800494d
 80048b0:	08004955 	.word	0x08004955
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:81
		case e_AUTOMAT:					editParam = Parameter::Nazwa::TEMPERATURA_CO; break;
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	2202      	movs	r2, #2
 80048b8:	745a      	strb	r2, [r3, #17]
 80048ba:	e052      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:82
		case e1_PRACA_RECZNA:			editParam = Parameter::Nazwa::NONE; break;
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	2200      	movs	r2, #0
 80048c0:	745a      	strb	r2, [r3, #17]
 80048c2:	e04e      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:83
		case e2_PODAJNIK_OPALU:			editParam = Parameter::Nazwa::NONE; break;
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	2200      	movs	r2, #0
 80048c8:	745a      	strb	r2, [r3, #17]
 80048ca:	e04a      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:84
		case e2_1_PODAJNIK_PRACA:		editParam = Parameter::Nazwa::PODAJNIK_PRACA; break;
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	2205      	movs	r2, #5
 80048d0:	745a      	strb	r2, [r3, #17]
 80048d2:	e046      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:85
		case e2_2_PODAJNIK_PRZERWA:		editParam = Parameter::Nazwa::PODAJNIK_PRZERWA; break;
 80048d4:	687b      	ldr	r3, [r7, #4]
 80048d6:	2206      	movs	r2, #6
 80048d8:	745a      	strb	r2, [r3, #17]
 80048da:	e042      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:86
		case e2_3_PODAJNIK_OPOZNIENIE:	editParam = Parameter::Nazwa::PODAJNIK_OPOZNIENIE; break;
 80048dc:	687b      	ldr	r3, [r7, #4]
 80048de:	2207      	movs	r2, #7
 80048e0:	745a      	strb	r2, [r3, #17]
 80048e2:	e03e      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:87
		case e3_PODTRZYMANIE_PALENIA:	editParam = Parameter::Nazwa::NONE; break;
 80048e4:	687b      	ldr	r3, [r7, #4]
 80048e6:	2200      	movs	r2, #0
 80048e8:	745a      	strb	r2, [r3, #17]
 80048ea:	e03a      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:88
		case e3_1_PODTRZYMANIE_PRACA:	editParam = Parameter::Nazwa::PODTRZYMANIE_PRACA; break;
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	2208      	movs	r2, #8
 80048f0:	745a      	strb	r2, [r3, #17]
 80048f2:	e036      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:89
		case e3_2_PODTRZYMANIE_PRZERWA: editParam = Parameter::Nazwa::PODTRZYMANIE_PRZERWA; break;
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	2209      	movs	r2, #9
 80048f8:	745a      	strb	r2, [r3, #17]
 80048fa:	e032      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:90
		case e3_3_OPOZNIENIE_WLACZENIA_DMUCHAWY:	editParam = Parameter::Nazwa::OPOZNIENIE_DMUCHAWY; break;
 80048fc:	687b      	ldr	r3, [r7, #4]
 80048fe:	220a      	movs	r2, #10
 8004900:	745a      	strb	r2, [r3, #17]
 8004902:	e02e      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:91
		case e4_POMPA_CO:				editParam = Parameter::Nazwa::POMPA_CO_TEMP_ZALACZ; break;
 8004904:	687b      	ldr	r3, [r7, #4]
 8004906:	2204      	movs	r2, #4
 8004908:	745a      	strb	r2, [r3, #17]
 800490a:	e02a      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:92
		case e5_ALARM_SPADKU_TEMPERATURY:	editParam = Parameter::Nazwa::ALARM_SPADKU_TEMP; break;
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	220c      	movs	r2, #12
 8004910:	745a      	strb	r2, [r3, #17]
 8004912:	e026      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:93
		case e6_Dmuchawa:				editParam = Parameter::Nazwa::DMUCHAWA_MOC; break;
 8004914:	687b      	ldr	r3, [r7, #4]
 8004916:	220b      	movs	r2, #11
 8004918:	745a      	strb	r2, [r3, #17]
 800491a:	e022      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:94
		case e7_HISTEREZA_CO:			editParam = Parameter::Nazwa::HISTEREZA_CO_TEMP; break;
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	2203      	movs	r2, #3
 8004920:	745a      	strb	r2, [r3, #17]
 8004922:	e01e      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:95
		case e8_POMPA_CWU:				editParam = Parameter::Nazwa::POMPA_CWU_TEMP_ZALACZ; break;
 8004924:	687b      	ldr	r3, [r7, #4]
 8004926:	220e      	movs	r2, #14
 8004928:	745a      	strb	r2, [r3, #17]
 800492a:	e01a      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:96
		case e8_1_HISTEREZA_CWU:		editParam = Parameter::Nazwa::HISTEREZA_CWU_TEMP; break;
 800492c:	687b      	ldr	r3, [r7, #4]
 800492e:	220f      	movs	r2, #15
 8004930:	745a      	strb	r2, [r3, #17]
 8004932:	e016      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:97
		case e8_2_TRYB_LETNI:			editParam = Parameter::Nazwa::TRYB_LETNI; break;
 8004934:	687b      	ldr	r3, [r7, #4]
 8004936:	2210      	movs	r2, #16
 8004938:	745a      	strb	r2, [r3, #17]
 800493a:	e012      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:98
		case e9_OPCJE_SERWISOWE:		editParam = Parameter::Nazwa::NONE; break;
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	2200      	movs	r2, #0
 8004940:	745a      	strb	r2, [r3, #17]
 8004942:	e00e      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:99
		case e9_1_USTAWIENIA_FABRYCZNE:	editParam = Parameter::Nazwa::NONE; break;
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	2200      	movs	r2, #0
 8004948:	745a      	strb	r2, [r3, #17]
 800494a:	e00a      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:100
		case e9_2_POMPA_CWU_AKTYWNA:	editParam = Parameter::Nazwa::AKTYWNA_CWU; break;
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	2211      	movs	r2, #17
 8004950:	745a      	strb	r2, [r3, #17]
 8004952:	e006      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:101
		case e9_3_ALARM_TEMP_PODAJNIKA: editParam = Parameter::Nazwa::ALARM_TEMP_PODAJNIKA; break;
 8004954:	687b      	ldr	r3, [r7, #4]
 8004956:	220d      	movs	r2, #13
 8004958:	745a      	strb	r2, [r3, #17]
 800495a:	e002      	b.n	8004962 <Menu::goToEkran(Menu::EKRAN)+0x12a>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:102
		default: 						editParam = Parameter::Nazwa::NONE; break;
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	2200      	movs	r2, #0
 8004960:	745a      	strb	r2, [r3, #17]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:104
		}
		showEkran();
 8004962:	6878      	ldr	r0, [r7, #4]
 8004964:	f000 f81c 	bl	80049a0 <Menu::showEkran()>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:105
	}
 8004968:	3708      	adds	r7, #8
 800496a:	46bd      	mov	sp, r7
 800496c:	bd80      	pop	{r7, pc}
 800496e:	bf00      	nop

08004970 <Menu::goToEdit(Parameter::Nazwa)>:
_ZN4Menu8goToEditEN9Parameter5NazwaE():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:107

	void goToEdit(Parameter::Nazwa param){
 8004970:	b580      	push	{r7, lr}
 8004972:	b082      	sub	sp, #8
 8004974:	af00      	add	r7, sp, #0
 8004976:	6078      	str	r0, [r7, #4]
 8004978:	460b      	mov	r3, r1
 800497a:	70fb      	strb	r3, [r7, #3]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:108
		editParam = param;
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	78fa      	ldrb	r2, [r7, #3]
 8004980:	745a      	strb	r2, [r3, #17]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:109
		editValue = Parameter::getValue(editParam);
 8004982:	687b      	ldr	r3, [r7, #4]
 8004984:	7c5b      	ldrb	r3, [r3, #17]
 8004986:	4618      	mov	r0, r3
 8004988:	f7ff fe30 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 800498c:	4603      	mov	r3, r0
 800498e:	b29a      	uxth	r2, r3
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	825a      	strh	r2, [r3, #18]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:110
		editMode = true;
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	2201      	movs	r2, #1
 8004998:	751a      	strb	r2, [r3, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:111
	}
 800499a:	3708      	adds	r7, #8
 800499c:	46bd      	mov	sp, r7
 800499e:	bd80      	pop	{r7, pc}

080049a0 <Menu::showEkran()>:
showEkran():
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:117

	void printPattern(const char * pattern, uint32_t value);


// tylko wyswietlenie - w trybie przegladania
	void showEkran(){
 80049a0:	b580      	push	{r7, lr}
 80049a2:	b084      	sub	sp, #16
 80049a4:	af00      	add	r7, sp, #0
 80049a6:	6078      	str	r0, [r7, #4]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:118
		editMode = false;
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	2200      	movs	r2, #0
 80049ac:	751a      	strb	r2, [r3, #20]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:119
		uint16_t val = Parameter::getValue(editParam);
 80049ae:	687b      	ldr	r3, [r7, #4]
 80049b0:	7c5b      	ldrb	r3, [r3, #17]
 80049b2:	4618      	mov	r0, r3
 80049b4:	f7ff fe1a 	bl	80045ec <Parameter::getValue(Parameter::Nazwa)>
 80049b8:	4603      	mov	r3, r0
 80049ba:	81fb      	strh	r3, [r7, #14]
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:120
		showEkran(val);
 80049bc:	89fb      	ldrh	r3, [r7, #14]
 80049be:	4619      	mov	r1, r3
 80049c0:	6878      	ldr	r0, [r7, #4]
 80049c2:	f7fd fff9 	bl	80029b8 <Menu::showEkran(unsigned short)>
/home/lechu/workspaceArmCpp/sterCOv2/Debug/../src/Menu.h:121
	}
 80049c6:	3710      	adds	r7, #16
 80049c8:	46bd      	mov	sp, r7
 80049ca:	bd80      	pop	{r7, pc}

080049cc <isdigit>:
isdigit():
 80049cc:	b510      	push	{r4, lr}
 80049ce:	4604      	mov	r4, r0
 80049d0:	f000 f806 	bl	80049e0 <__locale_ctype_ptr>
 80049d4:	4420      	add	r0, r4
 80049d6:	7840      	ldrb	r0, [r0, #1]
 80049d8:	f000 0004 	and.w	r0, r0, #4
 80049dc:	bd10      	pop	{r4, pc}
	...

080049e0 <__locale_ctype_ptr>:
__locale_ctype_ptr():
 80049e0:	4b04      	ldr	r3, [pc, #16]	; (80049f4 <__locale_ctype_ptr+0x14>)
 80049e2:	4a05      	ldr	r2, [pc, #20]	; (80049f8 <__locale_ctype_ptr+0x18>)
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	6a1b      	ldr	r3, [r3, #32]
 80049e8:	2b00      	cmp	r3, #0
 80049ea:	bf08      	it	eq
 80049ec:	4613      	moveq	r3, r2
 80049ee:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
 80049f2:	4770      	bx	lr
 80049f4:	20000028 	.word	0x20000028
 80049f8:	2000008c 	.word	0x2000008c

080049fc <__ascii_mbtowc>:
__ascii_mbtowc():
 80049fc:	b082      	sub	sp, #8
 80049fe:	b901      	cbnz	r1, 8004a02 <__ascii_mbtowc+0x6>
 8004a00:	a901      	add	r1, sp, #4
 8004a02:	b142      	cbz	r2, 8004a16 <__ascii_mbtowc+0x1a>
 8004a04:	b14b      	cbz	r3, 8004a1a <__ascii_mbtowc+0x1e>
 8004a06:	7813      	ldrb	r3, [r2, #0]
 8004a08:	600b      	str	r3, [r1, #0]
 8004a0a:	7812      	ldrb	r2, [r2, #0]
 8004a0c:	1c10      	adds	r0, r2, #0
 8004a0e:	bf18      	it	ne
 8004a10:	2001      	movne	r0, #1
 8004a12:	b002      	add	sp, #8
 8004a14:	4770      	bx	lr
 8004a16:	4610      	mov	r0, r2
 8004a18:	e7fb      	b.n	8004a12 <__ascii_mbtowc+0x16>
 8004a1a:	f06f 0001 	mvn.w	r0, #1
 8004a1e:	e7f8      	b.n	8004a12 <__ascii_mbtowc+0x16>

08004a20 <__ascii_wctomb>:
__ascii_wctomb():
 8004a20:	b149      	cbz	r1, 8004a36 <__ascii_wctomb+0x16>
 8004a22:	2aff      	cmp	r2, #255	; 0xff
 8004a24:	bf85      	ittet	hi
 8004a26:	238a      	movhi	r3, #138	; 0x8a
 8004a28:	6003      	strhi	r3, [r0, #0]
 8004a2a:	700a      	strbls	r2, [r1, #0]
 8004a2c:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 8004a30:	bf98      	it	ls
 8004a32:	2001      	movls	r0, #1
 8004a34:	4770      	bx	lr
 8004a36:	4608      	mov	r0, r1
 8004a38:	4770      	bx	lr

08004a3a <memset>:
memset():
 8004a3a:	4402      	add	r2, r0
 8004a3c:	4603      	mov	r3, r0
 8004a3e:	4293      	cmp	r3, r2
 8004a40:	d100      	bne.n	8004a44 <memset+0xa>
 8004a42:	4770      	bx	lr
 8004a44:	f803 1b01 	strb.w	r1, [r3], #1
 8004a48:	e7f9      	b.n	8004a3e <memset+0x4>
	...

08004a4c <AHBPrescTable>:
	...
 8004a54:	0201 0403 0706 0908 2020 4c42 4441 4520     ........  BLAD E
 8004a64:	5045 4f52 214d 2020 0000 0000 6261 6463     EPROM!  ....abcd
 8004a74:	0000 0000 6420 6263 2061 0000 3231 3433     .... dcba ..1234
 8004a84:	3635 0000 7453 7265 776f 202e 6970 6365     56..Sterow. piec
 8004a94:	2061 4f43 0000 0000 2020 7720 7265 6a73     a CO....   wersj
 8004aa4:	2061 2e31 2030 2020 0000 0000 2040 654c     a 1.0   ....@ Le
 8004ab4:	7a73 6b65 4220 616c 6863 2061 0000 0000     szek Blacha ....
 8004ac4:	6170 647a 697a 7265 696e 206b 3032 3731     pazdziernik 2017
 8004ad4:	0000 0000 2020 525a 5345 5445 574f 4e41     ....  ZRESETOWAN
 8004ae4:	2145 2020 0000 0000 2e54 7020 6569 6163     E!  ....T. pieca
 8004af4:	303a 2e30 2030 436f 0000 0000 2e31 5420     :00.0 oC....1. T
 8004b04:	7972 2062 7270 6361 3a79 2020 0000 0000     ryb pracy:  ....
 8004b14:	2020 3e20 414d 554e 4c41 203c 2020 2020        >MANUAL<     
 8004b24:	0000 0000 2020 3e20 5541 4f54 414d 3c54     ....   >AUTOMAT<
 8004b34:	2020 2020 0000 0000 2e32 6f50 6164 6e6a         ....2.Podajn
 8004b44:	6b69 6f20 6170 756c 0000 0000 2020 2020     ik opalu....    
 8004b54:	2020 3e3e 2020 2020 2020 2020 0000 0000       >>        ....
 8004b64:	2e32 2e31 6f50 6164 2e6a 7020 6172 6163     2.1.Podaj. praca
 8004b74:	0000 0000 2e32 2e32 6f50 2e64 7020 7a72     ....2.2.Pod. prz
 8004b84:	7265 6177 0000 0000 2e32 2e33 6f50 2e64     erwa....2.3.Pod.
 8004b94:	6f20 6f70 6e7a 202e 0000 0000 2e33 6f50      opozn. ....3.Po
 8004ba4:	7464 202e 6170 656c 696e 2061 0000 0000     dt. palenia ....
 8004bb4:	2e33 2e31 6f50 7464 202e 7270 6361 2061     3.1.Podt. praca 
 8004bc4:	0000 0000 2e33 2e32 6f50 7464 202e 7270     ....3.2.Podt. pr
 8004bd4:	657a 2e72 0000 0000 2e33 2e33 704f 7a6f     zer.....3.3.Opoz
 8004be4:	2e6e 6420 756d 6863 0000 0000 2e34 5020     n. dmuch....4. P
 8004bf4:	6d6f 6170 4320 4f2e 202e 2020 0000 0000     ompa C.O.   ....
 8004c04:	2e35 4120 616c 6d72 7320 6170 6b64 2075     5. Alarm spadku 
 8004c14:	0000 0000 2e36 6d44 6375 6168 6177 6d20     ....6.Dmuchawa m
 8004c24:	636f 203a 0000 0000 2e37 6948 7473 7265     oc: ....7.Hister
 8004c34:	7a65 2061 2e43 2e4f 0000 0000 2e38 5020     eza C.O.....8. P
 8004c44:	6d6f 6170 4320 572e 552e 202e 0000 0000     ompa C.W.U. ....
 8004c54:	2e38 2e31 6948 7473 7265 202e 5743 2055     8.1.Hister. CWU 
 8004c64:	0000 0000 2e38 2032 6553 6f7a 2f6e 7274     ....8.2 Sezon/tr
 8004c74:	6279 2020 0000 0000 2020 2020 4c20 5445     yb  ....     LET
 8004c84:	494e 2020 2020 2020 0000 0000 2020 2020     NI      ....    
 8004c94:	495a 4f4d 5957 2020 2020 2020 0000 0000     ZIMOWY      ....
 8004ca4:	2e39 4f20 6370 656a 7320 7265 6977 2e73     9. Opcje serwis.
 8004cb4:	0000 0000 2e39 2e31 7355 6174 2e77 6620     ....9.1.Ustaw. f
 8004cc4:	6261 2e72 0000 0000 2e39 2e32 5020 6d6f     abr.....9.2. Pom
 8004cd4:	6170 4320 5557 2020 0000 0000 2020 2020     pa CWU  ....    
 8004ce4:	6b61 7974 6e77 2061 2020 2020 0000 0000     aktywna     ....
 8004cf4:	2020 6e20 6569 6b61 7974 6e77 2061 2020        nieaktywna   
 8004d04:	0000 0000 2e39 2e33 6c41 7261 206d 6f70     ....9.3.Alarm po
 8004d14:	6164 2e6a 0000 0000 2020 3020 2e30 2030     daj.....   00.0 
 8004d24:	6573 2e6b 2020 2020 0000 0000 2e54 7520     sek.    ....T. u
 8004d34:	7473 7761 303a 2e30 2030 436f 0000 0000     staw:00.0 oC....
 8004d44:	3020 2030 696d 2e6e 3620 2030 6573 2e6b      00 min. 60 sek.
 8004d54:	0000 0000 6574 706d 203a 3030 302e 7320     ....temp: 00.0 s
 8004d64:	2e74 2043 0000 0000 6c77 6361 207a 303e     t.C ....wlacz >0
 8004d74:	2e30 2030 436f 0020 2020 2020 3d20 3020     0.0 oC .     = 0
 8004d84:	2030 203d 2020 2020 0000 0000 6e6d 6569     0 =     ....mnie
 8004d94:	206a 646f 3020 2e30 2030 436f 0000 0000     j od 00.0 oC....
 8004da4:	3f3f 0000 0043 4f50 4953 0058 002e          ??..C.POSIX...

08004db2 <_ctype_>:
 8004db2:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
 8004dc2:	2020 2020 2020 2020 2020 2020 2020 2020                     
 8004dd2:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
 8004de2:	0410 0404 0404 0404 0404 1004 1010 1010     ................
 8004df2:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
 8004e02:	0101 0101 0101 0101 0101 0101 1010 1010     ................
 8004e12:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
 8004e22:	0202 0202 0202 0202 0202 0202 1010 1010     ................
 8004e32:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
